###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:56
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_Warn.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_Warn.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\GUI_Warn.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\GUI_Warn.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_Warn.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_Warn.C
     16          Purpose     : Logging (used only at higher debug levels)
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stdio.h>
     21          #include <string.h>
     22          #include "GUI_Protected.h"
     23          #include "GUI_X.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Defines
     28          *
     29          **********************************************************************
     30          */
     31          
     32          #define MAXLEN 50
     33          
     34          /*********************************************************************
     35          *
     36          *       Static code
     37          *
     38          **********************************************************************
     39          */
     40          /*********************************************************************
     41          *
     42          *       _CopyString
     43          */

   \                                 In section .text, align 2, keep-with-next
     44          static void _CopyString(char*d, const char*s, int MaxLen) {
   \                     _CopyString: (+1)
   \   00000000   0xE004             B.N      ??_CopyString_0
     45            while ((MaxLen > 0) && *s) {
     46              *d++ = *s++;
   \                     ??_CopyString_1: (+1)
   \   00000002   0xF811 0x3B01      LDRB     R3,[R1], #+1
   \   00000006   0xF800 0x3B01      STRB     R3,[R0], #+1
     47              MaxLen--;
   \   0000000A   0x1E52             SUBS     R2,R2,#+1
     48            }
   \                     ??_CopyString_0: (+1)
   \   0000000C   0x2A01             CMP      R2,#+1
   \   0000000E   0xDB03             BLT.N    ??_CopyString_2
   \   00000010   0xF991 0x3000      LDRSB    R3,[R1, #+0]
   \   00000014   0x2B00             CMP      R3,#+0
   \   00000016   0xD1F4             BNE.N    ??_CopyString_1
     49            *d = 0;
   \                     ??_CopyString_2: (+1)
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x7001             STRB     R1,[R0, #+0]
     50          }
   \   0000001C   0x4770             BX       LR               ;; return
     51          
     52          /*********************************************************************
     53          *
     54          *       Public code
     55          *
     56          *  Note: These routines are needed only in higher debug levels.
     57          *
     58          **********************************************************************
     59          */
     60          /*********************************************************************
     61          *
     62          *       GUI_Warn
     63          */

   \                                 In section .text, align 2, keep-with-next
     64          void GUI_Warn(const char *s) {
     65            GUI_X_Warn(s);
   \                     GUI_Warn: (+1)
   \   00000000   0x.... 0x....      B.W      GUI_X_Warn
     66          }
     67          
     68          /*********************************************************************
     69          *
     70          *       GUI_Warn1
     71          */

   \                                 In section .text, align 2, keep-with-next
     72          void GUI_Warn1(const char *s, int p0) {
   \                     GUI_Warn1: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB090             SUB      SP,SP,#+64
   \   00000004   0x460C             MOV      R4,R1
     73            char ac[MAXLEN + 10];
     74            char* sOut = ac;
   \   00000006   0xA901             ADD      R1,SP,#+4
   \   00000008   0x9100             STR      R1,[SP, #+0]
     75            _CopyString(ac, s, MAXLEN);
   \   0000000A   0x2232             MOVS     R2,#+50
   \   0000000C   0x4601             MOV      R1,R0
   \   0000000E   0xA801             ADD      R0,SP,#+4
   \   00000010   0x.... 0x....      BL       _CopyString
     76            sOut += strlen(sOut);
   \   00000014   0x9800             LDR      R0,[SP, #+0]
   \   00000016   0x.... 0x....      BL       strlen
   \   0000001A   0x9900             LDR      R1,[SP, #+0]
   \   0000001C   0x1840             ADDS     R0,R0,R1
   \   0000001E   0x9000             STR      R0,[SP, #+0]
     77            GUI__AddSpaceHex(p0, 8, &sOut);
   \   00000020   0xAA00             ADD      R2,SP,#+0
   \   00000022   0x2108             MOVS     R1,#+8
   \   00000024   0x4620             MOV      R0,R4
   \   00000026   0x.... 0x....      BL       GUI__AddSpaceHex
     78            GUI_Warn(ac);
   \   0000002A   0xA801             ADD      R0,SP,#+4
   \   0000002C   0x.... 0x....      BL       GUI_Warn
     79          }
   \   00000030   0xB010             ADD      SP,SP,#+64
   \   00000032   0xBD10             POP      {R4,PC}          ;; return
     80          
     81          /*********************************************************************
     82          *
     83          *       GUI_Warn2
     84          */

   \                                 In section .text, align 2, keep-with-next
     85          void GUI_Warn2(const char *s, int p0, int p1) {
   \                     GUI_Warn2: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB093             SUB      SP,SP,#+76
   \   00000004   0x460C             MOV      R4,R1
   \   00000006   0x4615             MOV      R5,R2
     86            char ac[MAXLEN + 20];
     87            char* sOut = ac;
   \   00000008   0xA901             ADD      R1,SP,#+4
   \   0000000A   0x9100             STR      R1,[SP, #+0]
     88            _CopyString(ac, s, MAXLEN);
   \   0000000C   0x2232             MOVS     R2,#+50
   \   0000000E   0x4601             MOV      R1,R0
   \   00000010   0xA801             ADD      R0,SP,#+4
   \   00000012   0x.... 0x....      BL       _CopyString
     89            sOut += strlen(sOut);
   \   00000016   0x9800             LDR      R0,[SP, #+0]
   \   00000018   0x.... 0x....      BL       strlen
   \   0000001C   0x9900             LDR      R1,[SP, #+0]
   \   0000001E   0x1840             ADDS     R0,R0,R1
   \   00000020   0x9000             STR      R0,[SP, #+0]
     90            GUI__AddSpaceHex(p0, 8, &sOut);
   \   00000022   0xAA00             ADD      R2,SP,#+0
   \   00000024   0x2108             MOVS     R1,#+8
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0x.... 0x....      BL       GUI__AddSpaceHex
     91            GUI__AddSpaceHex(p1, 8, &sOut);
   \   0000002C   0xAA00             ADD      R2,SP,#+0
   \   0000002E   0x2108             MOVS     R1,#+8
   \   00000030   0x4628             MOV      R0,R5
   \   00000032   0x.... 0x....      BL       GUI__AddSpaceHex
     92            GUI_Warn(ac);
   \   00000036   0xA801             ADD      R0,SP,#+4
   \   00000038   0x.... 0x....      BL       GUI_Warn
     93          }
   \   0000003C   0xB013             ADD      SP,SP,#+76
   \   0000003E   0xBD30             POP      {R4,R5,PC}       ;; return
     94          
     95          /*********************************************************************
     96          *
     97          *       GUI_Warn3
     98          */

   \                                 In section .text, align 2, keep-with-next
     99          void GUI_Warn3(const char *s, int p0, int p1, int p2) {
   \                     GUI_Warn3: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB096             SUB      SP,SP,#+88
   \   00000004   0x460C             MOV      R4,R1
   \   00000006   0x4615             MOV      R5,R2
   \   00000008   0x461E             MOV      R6,R3
    100            char ac[MAXLEN + 30];
    101            char* sOut = ac;
   \   0000000A   0xA901             ADD      R1,SP,#+4
   \   0000000C   0x9100             STR      R1,[SP, #+0]
    102            _CopyString(ac, s, MAXLEN);
   \   0000000E   0x2232             MOVS     R2,#+50
   \   00000010   0x4601             MOV      R1,R0
   \   00000012   0xA801             ADD      R0,SP,#+4
   \   00000014   0x.... 0x....      BL       _CopyString
    103            sOut += strlen(sOut);
   \   00000018   0x9800             LDR      R0,[SP, #+0]
   \   0000001A   0x.... 0x....      BL       strlen
   \   0000001E   0x9900             LDR      R1,[SP, #+0]
   \   00000020   0x1840             ADDS     R0,R0,R1
   \   00000022   0x9000             STR      R0,[SP, #+0]
    104            GUI__AddSpaceHex(p0, 8, &sOut);
   \   00000024   0xAA00             ADD      R2,SP,#+0
   \   00000026   0x2108             MOVS     R1,#+8
   \   00000028   0x4620             MOV      R0,R4
   \   0000002A   0x.... 0x....      BL       GUI__AddSpaceHex
    105            GUI__AddSpaceHex(p1, 8, &sOut);
   \   0000002E   0xAA00             ADD      R2,SP,#+0
   \   00000030   0x2108             MOVS     R1,#+8
   \   00000032   0x4628             MOV      R0,R5
   \   00000034   0x.... 0x....      BL       GUI__AddSpaceHex
    106            GUI__AddSpaceHex(p2, 8, &sOut);
   \   00000038   0xAA00             ADD      R2,SP,#+0
   \   0000003A   0x2108             MOVS     R1,#+8
   \   0000003C   0x4630             MOV      R0,R6
   \   0000003E   0x.... 0x....      BL       GUI__AddSpaceHex
    107            GUI_Warn(ac);
   \   00000042   0xA801             ADD      R0,SP,#+4
   \   00000044   0x.... 0x....      BL       GUI_Warn
    108          }
   \   00000048   0xB016             ADD      SP,SP,#+88
   \   0000004A   0xBD70             POP      {R4-R6,PC}       ;; return
    109          
    110          /*********************************************************************
    111          *
    112          *       GUI_Warn4
    113          */

   \                                 In section .text, align 2, keep-with-next
    114          void GUI_Warn4(const char *s, int p0, int p1, int p2, int p3) {
   \                     GUI_Warn4: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB098             SUB      SP,SP,#+96
   \   00000004   0x460C             MOV      R4,R1
   \   00000006   0x4615             MOV      R5,R2
   \   00000008   0x461E             MOV      R6,R3
    115            char ac[MAXLEN + 40];
    116            char* sOut = ac;
   \   0000000A   0xA901             ADD      R1,SP,#+4
   \   0000000C   0x9100             STR      R1,[SP, #+0]
    117            _CopyString(ac, s, MAXLEN);
   \   0000000E   0x2232             MOVS     R2,#+50
   \   00000010   0x4601             MOV      R1,R0
   \   00000012   0xA801             ADD      R0,SP,#+4
   \   00000014   0x.... 0x....      BL       _CopyString
    118            sOut += strlen(sOut);
   \   00000018   0x9800             LDR      R0,[SP, #+0]
   \   0000001A   0x.... 0x....      BL       strlen
   \   0000001E   0x9900             LDR      R1,[SP, #+0]
   \   00000020   0x1840             ADDS     R0,R0,R1
   \   00000022   0x9000             STR      R0,[SP, #+0]
    119            GUI__AddSpaceHex(p0, 8, &sOut);
   \   00000024   0xAA00             ADD      R2,SP,#+0
   \   00000026   0x2108             MOVS     R1,#+8
   \   00000028   0x4620             MOV      R0,R4
   \   0000002A   0x.... 0x....      BL       GUI__AddSpaceHex
    120            GUI__AddSpaceHex(p1, 8, &sOut);
   \   0000002E   0xAA00             ADD      R2,SP,#+0
   \   00000030   0x2108             MOVS     R1,#+8
   \   00000032   0x4628             MOV      R0,R5
   \   00000034   0x.... 0x....      BL       GUI__AddSpaceHex
    121            GUI__AddSpaceHex(p2, 8, &sOut);
   \   00000038   0xAA00             ADD      R2,SP,#+0
   \   0000003A   0x2108             MOVS     R1,#+8
   \   0000003C   0x4630             MOV      R0,R6
   \   0000003E   0x.... 0x....      BL       GUI__AddSpaceHex
    122            GUI__AddSpaceHex(p3, 8, &sOut);
   \   00000042   0xAA00             ADD      R2,SP,#+0
   \   00000044   0x2108             MOVS     R1,#+8
   \   00000046   0x981C             LDR      R0,[SP, #+112]
   \   00000048   0x.... 0x....      BL       GUI__AddSpaceHex
    123            GUI_Warn(ac);
   \   0000004C   0xA801             ADD      R0,SP,#+4
   \   0000004E   0x.... 0x....      BL       GUI_Warn
    124          }
   \   00000052   0xB018             ADD      SP,SP,#+96
   \   00000054   0xBD70             POP      {R4-R6,PC}       ;; return
    125          
    126          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   GUI_Warn
         0   -> GUI_X_Warn
      72   GUI_Warn1
        72   -> GUI_Warn
        72   -> GUI__AddSpaceHex
        72   -> _CopyString
        72   -> strlen
      88   GUI_Warn2
        88   -> GUI_Warn
        88   -> GUI__AddSpaceHex
        88   -> _CopyString
        88   -> strlen
     104   GUI_Warn3
       104   -> GUI_Warn
       104   -> GUI__AddSpaceHex
       104   -> _CopyString
       104   -> strlen
     112   GUI_Warn4
       112   -> GUI_Warn
       112   -> GUI__AddSpaceHex
       112   -> _CopyString
       112   -> strlen
       0   _CopyString


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  GUI_Warn
      52  GUI_Warn1
      64  GUI_Warn2
      76  GUI_Warn3
      86  GUI_Warn4
      30  _CopyString

 
 312 bytes in section .text
 
 312 bytes of CODE memory

Errors: none
Warnings: none
