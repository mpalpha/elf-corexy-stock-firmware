###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  18:22:53
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\..\Middlewares\GUI\
#        -Om --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\draw_printing.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\draw_printing.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "PROGBAR.h"
      4          #include "draw_printing.h"
      5          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\EWARM/../Middlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Inc\mks_cfg.h",609  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_en.h",135  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_s_cn.h",218  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 213)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_t_cn.h",127  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 113)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_ru.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_ru.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 225)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_fr.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_fr.h",233  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 229)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_sp.h",132  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 113)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_it.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_it.h",229  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 224)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Multi_language.h",652  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 645)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Multi_language.h",860  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 854)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.h",492  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.h",547  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          544)

  #define Complex_Speed "ÀŸ∂»"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.h",548  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          545)
      6          #include "fontLib.h"
      7          #include "LISTBOX.h"
      8          #include "text.h"
      9          #include "draw_operate.h"
     10          #include "pic_manager.h"
     11          
     12          #include "draw_ready_print.h"
     13          //#include "others.h"
     14          //#include "mks_tft_com.h"
     15          
     16          #include "draw_print_file.h"
     17          #include "CHECKBOX.h"
     18          #include "pic.h"
     19          #include "marlin.h"

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Marlin_export.h")

    }
    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\marlin.h",538  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"
     20          #include "mks_reprint.h"

  #define SD_DETECT_INVERTED false
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\cardreader.h",27  Warning[Pe047]: 
          incompatible redefinition of macro "SD_DETECT_INVERTED" (declared at
          line 524 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Configuration_adv.h")

  #define PSTR(s) s
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\cardreader.h",31  Warning[Pe047]: 
          incompatible redefinition of macro "PSTR" (declared at line 63 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\EWARM/../Middlewares/Third_Party/Marlin\marlin.h")

  #define pgm_read_byte(x) (*(char*)x)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\cardreader.h",32  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_byte" (declared at line
          64 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Marlin_export.h")

      static constexpr int8_t next_block_index(const int8_t block_index) { return BLOCK_MOD(block_index + 1); }
             ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\planner.h",627  Warning[Pe815]: 
          type qualifier on return type is meaningless

      static constexpr int8_t prev_block_index(const int8_t block_index) { return BLOCK_MOD(block_index - 1); }
             ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\planner.h",628  Warning[Pe815]: 
          type qualifier on return type is meaningless

        target_temperature[HOTEND_INDEX] = celsius;
                                         ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\temperature.h",406  Warning[Pa093]: 
          implicit conversion from floating point to integer

          target_temperature_bed =
                                 ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\temperature.h",414  Warning[Pa093]: 
          implicit conversion from floating point to integer

  #define LONG_FILENAME_LENGTH (13*MAX_VFAT_ENTRIES+1)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\cardreader.h",61  Warning[Pe047]: 
          incompatible redefinition of macro "LONG_FILENAME_LENGTH" (declared
          at line 119 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\SdFatConfig.h")

  #define ALLOW_DEPRECATED_FUNCTIONS 0
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\SdFat.h",635  Warning[Pe047]: 
          incompatible redefinition of macro "ALLOW_DEPRECATED_FUNCTIONS"
          (declared at line 67 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\SdFatConfig.h")

  #define SPI_SD_INIT_RATE 11
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\SdFat.h",647  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_SD_INIT_RATE" (declared at
          line 79 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\SdFatConfig.h")
     21          #include "stm32f10x_gpio.h"

  #define IS_GPIO_SPEED(SPEED) (((SPEED) == GPIO_Speed_10MHz) || ((SPEED) == GPIO_Speed_2MHz) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_gpio.h",64  Warning[Pe047]: 
          incompatible redefinition of macro "IS_GPIO_SPEED" (declared at line
          201 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_gpio.h")

  #define IS_GPIO_MODE(MODE) (((MODE) == GPIO_Mode_AIN) || ((MODE) == GPIO_Mode_IN_FLOATING) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_gpio.h",82  Warning[Pe047]: 
          incompatible redefinition of macro "IS_GPIO_MODE" (declared at line
          204 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_gpio.h")

  #define IS_GPIO_PIN(PIN) ((((PIN) & (uint16_t)0x00) == 0x00) && ((PIN) != (uint16_t)0x00))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_gpio.h",145  Warning[Pe047]: 
          incompatible redefinition of macro "IS_GPIO_PIN" (declared at line
          196 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_gpio.h")
     22          
     23          
     24          
     25          #ifndef GUI_FLASH
     26          #define GUI_FLASH
     27          #endif
     28          extern GUI_CONST_STORAGE GUI_FONT GUI_FontD36x48;
     29          
     30          extern FIL *srcfp;
     31          
     32          extern volatile uint8_t temper_error_flg;
     33          

   \                                 In section .bss, align 4
     34          int8_t curFilePath[30];
   \                     curFilePath:
   \   00000000                      DS8 32
     35          
     36          PRINT_TIME  print_time;
     37          

   \                                 In section .data, align 4
     38          int once_flag = 0;
     39          
     40          //////////FIL *srcfp;
     41          
     42          static GUI_HWIN hPrintingWnd, hRetDlgWnd;
   \                     hPrintingWnd:
   \   00000000   0x00 0x00          DC8 0, 0
   \   00000002   0x00 0x00          DC8 0, 0
   \   00000004   0x00 0x00          DC8 0, 0
   \   00000006   0x00 0x00          DC8 0, 0
   \   00000008   0x00 0x00          DC8 0, 0
   \   0000000A   0x00 0x00          DC8 0, 0
   \   0000000C   0x00 0x00          DC8 0, 0
   \   0000000E   0x00 0x00          DC8 0, 0
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000028   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000038   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000050   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000058   0x00 0x00          DC8 0, 0
   \   0000005A   0x00 0x00          DC8 0, 0
   \                     once_flag:
   \   0000005C   0x00000000         DC32 0
     43          static PROGBAR_Handle printingBar;
     44          static TEXT_Handle printTimeLeft, printSpeed, sprayTem1, sprayTem2, BedTem, fanSpeed;
     45          static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
     46          static TEXT_Handle printRetDlgText;
     47          
     48          static BUTTON_STRUCT buttonPause,buttonStop,buttonOperat,buttonExt1, buttonExt2, buttonFanstate, buttonBedstate,buttonPrintSpeed,buttonTime,buttonZpos,buttonAutoclose;
     49          static TEXT_Handle printZposRight,E1_Temp, E2_Temp, Fan_Pwm, Bed_Temp,Printing_speed,Zpos,Autoclose;
     50          static CHECKBOX_Handle auto_close;
     51          ///////static FIL curFile;
     52          
     53          static FIL curFile;
     54          extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz18;
     55          extern GUI_BITMAP bmp_struct;
     56          
     57          extern volatile int16_t logo_time;
     58          //extern PR_STATUS printerStaus;
     59          extern FILE_PRINT_STATE gCurFileState;
     60          extern int X_ADD;
     61          extern int X_INTERVAL;   //**Õº∆¨º‰∏Ù
     62          
     63          uint8_t print_start_flg = 0;
     64          
     65          uint8_t pause_resum=0;
     66          
     67          
     68          extern uint8_t gcode_preview_over;
     69          
     70          extern uint8_t from_flash_pic;
     71          extern volatile uint8_t pause_from_high_level;
     72          
     73          #if 0
     74          static print_delay(int nCount)
     75          {
     76          	int i, j;
     77          	for(i = nCount; i > 0; i--)
     78          		for(j = 0; j < 120; j++);
     79          }
     80          
     81          
     82          static void cbRetDlgWin(WM_MESSAGE * pMsg)
     83          {
     84          	int8_t sel_item;
     85          	int8_t i;
     86          	//int8_t sel_file[30];
     87          
     88          	//struct PressEvt *press_event;
     89          	switch (pMsg->MsgId) {
     90          	case WM_PAINT:
     91          		GUI_SetBkColor(gCfgItems.background_color);
     92          		GUI_Clear();
     93          		break;
     94          
     95          	case WM_TOUCH:		
     96          		break;
     97          		
     98          	case WM_TOUCH_CHILD:
     99          	 	break;
    100          
    101          	case WM_NOTIFY_PARENT:
    102          		if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
    103          		{
    104          			if(pMsg->hWinSrc == buttonOk.btnHandle)
    105          			{			
    106          				//hAlertWin = GUI_CreateDialogBox(aDialogAlert, GUI_COUNTOF(aDialogAlert), _cbAlert, 0, 0, 0);
    107          				last_disp_state = PRINTING_UI;
    108          				BUTTON_Delete(buttonOk.btnHandle);
    109          				BUTTON_Delete(buttonCancle.btnHandle);
    110          				if(WM_IsWindow(hRetDlgWnd))
    111          				{
    112          					WM_DeleteWindow(hRetDlgWnd);
    113          				}
    114          				Clear_printing();
    115          				
    116          				draw_ready_print();
    117          				
    118          			}
    119          			else if(pMsg->hWinSrc == buttonCancle.btnHandle)
    120          			{			
    121          				if(WM_IsWindow(hRetDlgWnd))
    122          				{
    123          					BUTTON_Delete(buttonOk.btnHandle);
    124          					BUTTON_Delete(buttonCancle.btnHandle);
    125          					WM_DeleteWindow(hRetDlgWnd);
    126          					//WM_EnableWindow(hPrintFileWnd);
    127          					//GUI_Exec();
    128          				}
    129          				
    130          			}
    131          		}
    132          	}
    133          }
    134          #endif
    135          
    136          GUI_BITMAP bmp_struct_0_0 = {
   \                     bmp_struct_0_0:
   \   00000060   0x0000 0x0000      DC16 0, 0, 160, 16
   \              0x00A0 0x0010
   \   00000068   0x........         DC32 bmp_public_buf, 0H, GUI_BitmapMethodsM565
   \              0x00000000   
   \              0x........   
    137            0,
    138            0,
    139            160, /* BytesPerLine */
    140            16, /* BitsPerPixel */
    141            (unsigned char *)bmp_public_buf,  /* Pointer to picture data */
    142            NULL  /* Pointer to palette */
    143           ,GUI_DRAW_BMPM565
    144          };

   \                                 In section .text, align 2, keep-with-next
    145          static void cbPrintingWin(WM_MESSAGE * pMsg) {
    146          
    147          struct PressEvt *press_event;
    148          switch (pMsg->MsgId)
   \                     _Z13cbPrintingWinP10WM_MESSAGE: (+1)
   \   00000000   0x6801             LDR      R1,[R0, #+0]
   \   00000002   0x290C             CMP      R1,#+12
   \   00000004   0xD100             BNE.N    ??cbPrintingWin_0
   \   00000006   0x4770             BX       LR
   \                     ??cbPrintingWin_0: (+1)
   \   00000008   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   0000000C   0xB082             SUB      SP,SP,#+8
   \   0000000E   0x290D             CMP      R1,#+13
   \   00000010   0xF000 0x81D0      BEQ.W    ??cbPrintingWin_1
   \   00000014   0x290F             CMP      R1,#+15
   \   00000016   0xF000 0x81CD      BEQ.W    ??cbPrintingWin_1
   \   0000001A   0x2926             CMP      R1,#+38
   \   0000001C   0xF040 0x81C6      BNE.W    ??cbPrintingWin_2
    149          {
    150          	case WM_PAINT:
    151          		/*
    152          		GUI_SetColor(gCfgItems.state_background_color);
    153          		GUI_FillRect(1, 1, LCD_WIDTH *3 / 4 - 3, imgHeight /2 - 3);
    154          		GUI_FillRect(1, imgHeight/2 , LCD_WIDTH , imgHeight );
    155          		GUI_SetColor(gCfgItems.state_text_color);
    156          		GUI_DrawRect(0, 1, LCD_WIDTH *3 / 4 - 2, imgHeight /2 - 3);
    157          		GUI_DrawRect(0, imgHeight/2 + 1, LCD_WIDTH  -4, imgHeight - 2);
    158          	*/
    159          	#if 0
    160          		GUI_SetColor(gCfgItems.state_background_color);
    161          		GUI_DrawRect(75, 0, LCD_WIDTH *3 / 4 -16, imgHeight /2 - X_INTERVAL);
    162          		GUI_SetColor(gCfgItems.state_background_color);
    163          		GUI_FillRect(75, 0, LCD_WIDTH *3 / 4 -16, imgHeight /2 - X_INTERVAL);
    164          	#endif			
    165          		//GUI_SetBkColor(GUI_BLUE);
    166          		//GUI_Clear();
    167          		
    168          		//GUI_DispString("window");
    169          		break;
    170          	case WM_TOUCH:
    171          	 	press_event = (struct PressEvt *)pMsg->Data.p;
    172          		
    173          		break;
    174          	case WM_TOUCH_CHILD:
    175          		press_event = (struct PressEvt *)pMsg->Data.p;
    176          
    177          		break;
    178          		
    179          	case WM_NOTIFY_PARENT:
    180          		if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \   00000020   0x6881             LDR      R1,[R0, #+8]
   \   00000022   0x2902             CMP      R1,#+2
   \   00000024   0xF040 0x81C6      BNE.W    ??cbPrintingWin_1
    181          		{
    182          			if(pMsg->hWinSrc == buttonOperat.btnHandle)
   \   00000028   0xF9B0 0x0006      LDRSH    R0,[R0, #+6]
   \   0000002C   0x.... 0x....      LDR.W    R4,??DataTable33
   \   00000030   0xF9B4 0x1040      LDRSH    R1,[R4, #+64]
   \   00000034   0x4288             CMP      R0,R1
   \   00000036   0xD126             BNE.N    ??cbPrintingWin_3
    183          			{
    184          				if(gcode_preview_over != 1)
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable34
   \   0000003C   0x7800             LDRB     R0,[R0, #+0]
   \   0000003E   0x2801             CMP      R0,#+1
   \   00000040   0xF000 0x81B8      BEQ.W    ??cbPrintingWin_1
    185          				{
    186          					last_disp_state = PRINTING_UI;
   \   00000044   0x2003             MOVS     R0,#+3
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable34_1
   \   0000004A   0x7008             STRB     R0,[R1, #+0]
    187          					Clear_printing();
   \   0000004C   0x.... 0x....      BL       Clear_printing
    188          					if((mksReprint.mks_printer_state == MKS_IDLE)  &&  (gCurFileState.totalSend == 100) )
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable34_2
   \   00000054   0xF890 0x00B4      LDRB     R0,[R0, #+180]
   \   00000058   0x28A6             CMP      R0,#+166
   \   0000005A   0xD110             BNE.N    ??cbPrintingWin_4
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable34_3
   \   00000060   0xF8D0 0x0238      LDR      R0,[R0, #+568]
   \   00000064   0x2864             CMP      R0,#+100
   \   00000066   0xD10A             BNE.N    ??cbPrintingWin_4
    189          					{
    190          						f_close(srcfp);
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable34_4
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x.... 0x....      BL       f_close
    191          
    192          						reset_file_info();
   \   00000072   0x.... 0x....      BL       reset_file_info
    193          						//**reset_tx_fifo();
    194          						//Get_Temperature_Flg = 0;
    195          						draw_ready_print();
   \   00000076   0xE8BD 0x41F3      POP      {R0,R1,R4-R8,LR}
   \   0000007A   0x.... 0x....      B.W      draw_ready_print
    196          					}
    197          					else
    198          					{
    199          						draw_operate();
   \                     ??cbPrintingWin_4: (+1)
   \   0000007E   0xE8BD 0x41F3      POP      {R0,R1,R4-R8,LR}
   \   00000082   0x.... 0x....      B.W      draw_operate
    200          					}
    201          				}
    202          			}
    203          			/*else if(pMsg->hWinSrc == btnRetMainPage) 
    204          			{
    205          				 f_close(srcfp);
    206          
    207          				reset_file_info();
    208          				reset_tx_fifo();
    209          				
    210          				Clear_printing();
    211          				draw_ready_print();
    212          			}*/
    213          			#if defined(TFT35)
    214          			else if(pMsg->hWinSrc == buttonPause.btnHandle)
   \                     ??cbPrintingWin_3: (+1)
   \   00000086   0xF9B4 0x5010      LDRSH    R5,[R4, #+16]
   \   0000008A   0x42A8             CMP      R0,R5
   \   0000008C   0xF040 0x817A      BNE.W    ??cbPrintingWin_5
    215          			{
    216          				if(gcode_preview_over != 1)
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000094   0x7800             LDRB     R0,[R0, #+0]
   \   00000096   0x2801             CMP      R0,#+1
   \   00000098   0xF000 0x818C      BEQ.W    ??cbPrintingWin_1
    217          				{
    218          					if(mksReprint.mks_printer_state == MKS_WORKING)
   \   0000009C   0x.... 0x....      LDR.W    R6,??DataTable34_2
   \   000000A0   0xF896 0x00B4      LDRB     R0,[R6, #+180]
   \   000000A4   0x28A7             CMP      R0,#+167
   \   000000A6   0xD141             BNE.N    ??cbPrintingWin_6
    219          					{
    220          					#if 0
    221          						if(disp_state_stack._disp_state[disp_state_stack._disp_index] != PAUSE_UI)
    222          						{
    223          							disp_state_stack._disp_index++;
    224          							disp_state_stack._disp_state[disp_state_stack._disp_index] = PAUSE_UI;
    225          						}
    226          						disp_state = PAUSE_UI;					
    227          
    228          						GUI_UC_SetEncodeNone();
    229          						GUI_SetFont(&GUI_FontHZ16);
    230          						GUI_DispStringAt(creat_title_text(),  TITLE_XPOS, TITLE_YPOS);
    231          						GUI_SetFont(&FONT_TITLE);
    232          						GUI_UC_SetEncodeUTF8();
    233          					#endif
    234          						stop_print_time();
   \   000000A8   0x.... 0x....      BL       stop_print_time
    235          						if(mksCfg.extruders==2)
   \   000000AC   0x.... 0x....      LDR.W    R7,??DataTable34_5
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable34_6
   \   000000B4   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   000000B8   0x2802             CMP      R0,#+2
   \   000000BA   0xD10C             BNE.N    ??cbPrintingWin_7
    236          						{
    237          							gCfgItems.curSprayerChoose_bak= active_extruder;
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable34_7
   \   000000C0   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   000000C4   0xF887 0x009D      STRB     R0,[R7, #+157]
    238          							gCfgItems.moveSpeed_bak = feedrate_mm_s;
                 							                        ^
Warning[Pa093]: implicit conversion from floating point to integer

  struct PressEvt *press_event;
                   ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",147  Warning[Pe550]: 
          variable "press_event" was set but never used
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable34_8
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0x.... 0x....      BL       __aeabi_f2iz
   \   000000D2   0xF8A7 0x00B2      STRH     R0,[R7, #+178]
    239          						}
    240          						//MX_I2C1_Init();
    241          						//mksReprint.mks_printer_state = MKS_PAUSED;	
    242                						card.pauseSDPrint();
   \                     ??cbPrintingWin_7: (+1)
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable34_9
   \   000000DA   0x.... 0x....      BL       _ZN10CardReader12pauseSDPrintEv
    243                						print_job_timer.pause();
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable34_10
   \   000000E2   0x.... 0x....      BL       _ZN9Stopwatch5pauseEv
    244          						mksReprint.mks_printer_state = MKS_PAUSING;
   \   000000E6   0x20A9             MOVS     R0,#+169
   \   000000E8   0xF886 0x00B4      STRB     R0,[R6, #+180]
    245           
    246          						BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_resume.bin",1);
   \   000000EC   0x2201             MOVS     R2,#+1
   \   000000EE   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_resume.bin">`
   \   000000F2   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   000000F6   0x.... 0x....      BL       BUTTON_SetBmpFileName
    247          						#if defined(TFT70)
    248          						BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);
    249          						#elif defined(TFT35)
    250          						BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   000000FA   0x2000             MOVS     R0,#+0
   \   000000FC   0x9000             STR      R0,[SP, #+0]
   \   000000FE   0x4603             MOV      R3,R0
   \   00000100   0x.... 0x....      LDR.W    R2,??DataTable34_11
   \   00000104   0x4601             MOV      R1,R0
   \   00000106   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   0000010A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    251          						if(gCfgItems.multiple_language != 0)
   \   0000010E   0xF207 0x10BD      ADDW     R0,R7,#+445
   \   00000112   0x7880             LDRB     R0,[R0, #+2]
   \   00000114   0x2800             CMP      R0,#+0
   \   00000116   0xF000 0x814D      BEQ.W    ??cbPrintingWin_1
    252          						{
    253          								BUTTON_SetText(buttonPause.btnHandle, printing_menu.resume);	
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable34_12
   \   0000011E   0x69C1             LDR      R1,[R0, #+28]
   \   00000120   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   00000124   0xE8BD 0x41FC      POP      {R2-R8,LR}
   \   00000128   0x.... 0x....      B.W      BUTTON_SetText
    254          						}						
    255          						#endif
    256          					}
    257          					else if(mksReprint.mks_printer_state == MKS_PAUSED)
   \                     ??cbPrintingWin_6: (+1)
   \   0000012C   0x28AA             CMP      R0,#+170
   \   0000012E   0xF040 0x8104      BNE.W    ??cbPrintingWin_8
    258          					{
    259          						#if 0
    260          						disp_state_stack._disp_index = 0;
    261          						memset(disp_state_stack._disp_state, 0, sizeof(disp_state_stack._disp_state));
    262          						disp_state_stack._disp_state[disp_state_stack._disp_index] = PRINTING_UI;
    263          
    264          						disp_state = PRINTING_UI;	
    265          
    266          						GUI_UC_SetEncodeNone();
    267          						GUI_SetFont(&GUI_FontHZ16);
    268          						GUI_DispStringAt(creat_title_text(),  TITLE_XPOS, TITLE_YPOS);
    269          						GUI_SetFont(&FONT_TITLE);
    270          						GUI_UC_SetEncodeUTF8();
    271          						#endif
    272          				   
    273          						 //∂œ¡œºÏ≤‚Œ™∏ﬂµÁ∆Ω¥•∑¢ ±£¨÷ª”–‘⁄◊∞…œ¡œ£¨
    274          						 //ºÏ≤‚π‹Ω≈Œ™µÕµÁ∆Ω ±£¨∞¥ª÷∏¥∞¥≈•≤≈”––ß°£
    275          		                        	 if(mksCfg.extruders==2)
   \   00000132   0x.... 0x....      LDR.W    R7,??DataTable34_5
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable34_6
   \   0000013A   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   0000013E   0x2802             CMP      R0,#+2
   \   00000140   0xF897 0x01BD      LDRB     R0,[R7, #+445]
   \   00000144   0xF040 0x8083      BNE.W    ??cbPrintingWin_9
    276          			                        {
    277          			                           if((gCfgItems.filament_det0_level_flg == 1)||(gCfgItems.filament_det1_level_flg == 1))
   \   00000148   0x2801             CMP      R0,#+1
   \   0000014A   0xD005             BEQ.N    ??cbPrintingWin_10
   \   0000014C   0xF207 0x18BD      ADDW     R8,R7,#+445
   \   00000150   0xF898 0x0001      LDRB     R0,[R8, #+1]
   \   00000154   0x2801             CMP      R0,#+1
   \   00000156   0xD15B             BNE.N    ??cbPrintingWin_11
    278          			                           {
    279          			                              if(pause_from_high_level==1)
   \                     ??cbPrintingWin_10: (+1)
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable34_13
   \   0000015C   0x7801             LDRB     R1,[R0, #+0]
   \   0000015E   0x2901             CMP      R1,#+1
   \   00000160   0xD136             BNE.N    ??cbPrintingWin_12
    280          			                              {
    281          			                                if(((MKS_MT_DET1_OP == Bit_RESET)&&(gCfgItems.filament_det0_level_flg == 1))
    282          			                                    ||((MKS_MT_DET2_OP == Bit_RESET)&&(gCfgItems.filament_det1_level_flg == 1)))
   \   00000162   0x.... 0x....      LDR.W    R1,??DataTable34_14  ;; 0x42210110
   \   00000166   0x6809             LDR      R1,[R1, #+0]
   \   00000168   0x2900             CMP      R1,#+0
   \   0000016A   0xD103             BNE.N    ??cbPrintingWin_13
   \   0000016C   0xF897 0x11BD      LDRB     R1,[R7, #+445]
   \   00000170   0x2901             CMP      R1,#+1
   \   00000172   0xD00B             BEQ.N    ??cbPrintingWin_14
   \                     ??cbPrintingWin_13: (+1)
   \   00000174   0x.... 0x....      LDR.W    R1,??DataTable34_15  ;; 0x42230118
   \   00000178   0x6809             LDR      R1,[R1, #+0]
   \   0000017A   0x2900             CMP      R1,#+0
   \   0000017C   0xF040 0x8094      BNE.W    ??cbPrintingWin_15
   \   00000180   0xF207 0x11BD      ADDW     R1,R7,#+445
   \   00000184   0x7849             LDRB     R1,[R1, #+1]
   \   00000186   0x2901             CMP      R1,#+1
   \   00000188   0xF040 0x808E      BNE.W    ??cbPrintingWin_15
    283          			                                {
    284          			                                        pause_from_high_level=0;
   \                     ??cbPrintingWin_14: (+1)
   \   0000018C   0x2100             MOVS     R1,#+0
   \   0000018E   0x7001             STRB     R1,[R0, #+0]
    285          			                                        start_print_time();
   \   00000190   0x.... 0x....      BL       start_print_time
    286          			                                        pause_resum = 1;
   \   00000194   0x2001             MOVS     R0,#+1
   \   00000196   0x.... 0x....      LDR.W    R1,??DataTable34_16
   \   0000019A   0x7008             STRB     R0,[R1, #+0]
    287          			                                        mksReprint.mks_printer_state = MKS_RESUMING;//MKS_WORKING;
   \   0000019C   0x20A8             MOVS     R0,#+168
   \   0000019E   0xF886 0x00B4      STRB     R0,[R6, #+180]
    288          			                                        #if 0
    289          			                                        last_disp_state = PAUSE_UI;
    290          			                                        Clear_pause();
    291          			                                        if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    292          			                                        {
    293          			                                            disp_state_stack._disp_state[disp_state_stack._disp_index]=MAIN_UI;
    294          			                                            disp_state_stack._disp_index--;
    295          			                                        }                                        
    296          			                                        draw_operate();   
    297          								   #endif
    298          								BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
   \   000001A2   0x2201             MOVS     R2,#+1
   \   000001A4   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pause.bin">`
   \   000001A8   0x4628             MOV      R0,R5
   \   000001AA   0x.... 0x....      BL       BUTTON_SetBmpFileName
    299          								#if defined(TFT70)
    300          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    301          								#elif defined(TFT35)				
    302          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   000001AE   0x2000             MOVS     R0,#+0
   \   000001B0   0x9000             STR      R0,[SP, #+0]
   \   000001B2   0x4603             MOV      R3,R0
   \   000001B4   0x.... 0x....      LDR.W    R2,??DataTable34_11
   \   000001B8   0x4601             MOV      R1,R0
   \   000001BA   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   000001BE   0x.... 0x....      BL       BUTTON_SetBitmapEx
    303          								if(gCfgItems.multiple_language != 0)
   \   000001C2   0xF207 0x10BD      ADDW     R0,R7,#+445
   \   000001C6   0x7880             LDRB     R0,[R0, #+2]
   \   000001C8   0x2800             CMP      R0,#+0
   \   000001CA   0xF040 0x80D2      BNE.W    ??cbPrintingWin_16
   \   000001CE   0xE0F1             B.N      ??cbPrintingWin_1
    304          								{
    305          									BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
    306          								}
    307          								#endif
    308          			                                }
    309          			                                else
    310          			                                {
    311          			                                        last_disp_state = PRINTING_UI;
    312          			                    			  Clear_printing();
    313          			                    			  draw_dialog(DIALOG_TYPE_FILAMENT_NO_PRESS);    
    314          			                                }
    315          			                              }
    316          			                              else
    317          			                              {
    318          			                                    start_print_time();
   \                     ??cbPrintingWin_12: (+1)
   \   000001D0   0x.... 0x....      BL       start_print_time
    319          			                                    pause_resum = 1;
   \   000001D4   0x2001             MOVS     R0,#+1
   \   000001D6   0x.... 0x....      LDR.W    R1,??DataTable34_16
   \   000001DA   0x7008             STRB     R0,[R1, #+0]
    320          			                                    mksReprint.mks_printer_state = MKS_RESUMING;//MKS_WORKING;
   \   000001DC   0x20A8             MOVS     R0,#+168
   \   000001DE   0xF886 0x00B4      STRB     R0,[R6, #+180]
    321          			                                    #if 0
    322          			                                    last_disp_state = PAUSE_UI;
    323          			                                    Clear_pause();
    324          			                                    if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    325          			                                    {
    326          			                                        disp_state_stack._disp_state[disp_state_stack._disp_index]=MAIN_UI;
    327          			                                        disp_state_stack._disp_index--;
    328          			                                    }                                    
    329          			                                    draw_operate();
    330          								#endif
    331          								BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
   \   000001E2   0x2201             MOVS     R2,#+1
   \   000001E4   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pause.bin">`
   \   000001E8   0x4628             MOV      R0,R5
   \   000001EA   0x.... 0x....      BL       BUTTON_SetBmpFileName
    332          								#if defined(TFT70)
    333          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    334          								#elif defined(TFT35)				
    335          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   000001EE   0x2000             MOVS     R0,#+0
   \   000001F0   0x9000             STR      R0,[SP, #+0]
   \   000001F2   0x4603             MOV      R3,R0
   \   000001F4   0x.... 0x....      LDR.W    R2,??DataTable34_11
   \   000001F8   0x4601             MOV      R1,R0
   \   000001FA   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   000001FE   0x.... 0x....      BL       BUTTON_SetBitmapEx
    336          								if(gCfgItems.multiple_language != 0)
   \   00000202   0xF207 0x10BD      ADDW     R0,R7,#+445
   \   00000206   0x7880             LDRB     R0,[R0, #+2]
   \   00000208   0x2800             CMP      R0,#+0
   \   0000020A   0xF040 0x80B2      BNE.W    ??cbPrintingWin_16
   \   0000020E   0xE0D1             B.N      ??cbPrintingWin_1
    337          								{
    338          									BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
    339          								}
    340          								#endif
    341          			                              }
    342          			                           }
    343          			                           else
    344          			                           {
    345          			                                start_print_time();
   \                     ??cbPrintingWin_11: (+1)
   \   00000210   0x.... 0x....      BL       start_print_time
    346          			                                pause_resum = 1;
   \   00000214   0x2001             MOVS     R0,#+1
   \   00000216   0x.... 0x....      LDR.W    R1,??DataTable34_16
   \   0000021A   0x7008             STRB     R0,[R1, #+0]
    347          			                                mksReprint.mks_printer_state = MKS_RESUMING;//MKS_WORKING;
   \   0000021C   0x20A8             MOVS     R0,#+168
   \   0000021E   0xF886 0x00B4      STRB     R0,[R6, #+180]
    348          			                                #if 0
    349          			                                last_disp_state = PAUSE_UI;
    350          			                                Clear_pause();
    351          			                                if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    352          			                                {
    353          			                                    disp_state_stack._disp_state[disp_state_stack._disp_index]=MAIN_UI;
    354          			                                    disp_state_stack._disp_index--;
    355          			                                }                                
    356          			                                draw_operate();   
    357          							   #endif
    358          							   	BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
   \   00000222   0x2201             MOVS     R2,#+1
   \   00000224   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pause.bin">`
   \   00000228   0x4628             MOV      R0,R5
   \   0000022A   0x.... 0x....      BL       BUTTON_SetBmpFileName
    359          								#if defined(TFT70)
    360          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    361          								#elif defined(TFT35)				
    362          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   0000022E   0x2000             MOVS     R0,#+0
   \   00000230   0x9000             STR      R0,[SP, #+0]
   \   00000232   0x4603             MOV      R3,R0
   \   00000234   0x.... 0x....      LDR.W    R2,??DataTable34_11
   \   00000238   0x4601             MOV      R1,R0
   \   0000023A   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   0000023E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    363          								if(gCfgItems.multiple_language != 0)
   \   00000242   0xF898 0x0002      LDRB     R0,[R8, #+2]
   \   00000246   0x2800             CMP      R0,#+0
   \   00000248   0xF040 0x8093      BNE.W    ??cbPrintingWin_16
   \   0000024C   0xE0B2             B.N      ??cbPrintingWin_1
    364          								{
    365          									BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
    366          								}
    367          								#endif
    368          			                           }
    369          			                        }
    370          		                        	else
    371          			                        {
    372          			                            if(gCfgItems.filament_det0_level_flg == 1)
   \                     ??cbPrintingWin_9: (+1)
   \   0000024E   0x2801             CMP      R0,#+1
   \   00000250   0xD154             BNE.N    ??cbPrintingWin_17
    373          			                            {
    374          			                                if(pause_from_high_level==1)
   \   00000252   0x.... 0x....      LDR.W    R0,??DataTable34_13
   \   00000256   0x7801             LDRB     R1,[R0, #+0]
   \   00000258   0x2901             CMP      R1,#+1
   \   0000025A   0xD130             BNE.N    ??cbPrintingWin_18
    375          			                                {
    376          			                                    if(MKS_MT_DET1_OP == Bit_RESET)
   \   0000025C   0x.... 0x....      LDR.W    R1,??DataTable34_14  ;; 0x42210110
   \   00000260   0x6809             LDR      R1,[R1, #+0]
   \   00000262   0x2900             CMP      R1,#+0
   \   00000264   0xD120             BNE.N    ??cbPrintingWin_15
    377          			                                    {
    378          			                                        pause_from_high_level=0;
   \   00000266   0x2100             MOVS     R1,#+0
   \   00000268   0x7001             STRB     R1,[R0, #+0]
    379          			                                        start_print_time();
   \   0000026A   0x.... 0x....      BL       start_print_time
    380          			                                        pause_resum = 1;
   \   0000026E   0x2001             MOVS     R0,#+1
   \   00000270   0x.... 0x....      LDR.W    R1,??DataTable34_16
   \   00000274   0x7008             STRB     R0,[R1, #+0]
    381          			                                        mksReprint.mks_printer_state = MKS_RESUMING;//MKS_WORKING;
   \   00000276   0x20A8             MOVS     R0,#+168
   \   00000278   0xF886 0x00B4      STRB     R0,[R6, #+180]
    382          			                                        #if 0
    383          			                                        last_disp_state = PAUSE_UI;
    384          			                                        Clear_pause();
    385          			                                        if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    386          			                                        {
    387          			                                            disp_state_stack._disp_state[disp_state_stack._disp_index]=MAIN_UI;
    388          			                                            disp_state_stack._disp_index--;
    389          			                                        }                                        
    390          			                                        draw_operate();
    391          								   #endif
    392          								   	BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
   \   0000027C   0x2201             MOVS     R2,#+1
   \   0000027E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pause.bin">`
   \   00000282   0x4628             MOV      R0,R5
   \   00000284   0x.... 0x....      BL       BUTTON_SetBmpFileName
    393          									#if defined(TFT70)
    394          									BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    395          									#elif defined(TFT35)				
    396          									BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   00000288   0x2000             MOVS     R0,#+0
   \   0000028A   0x9000             STR      R0,[SP, #+0]
   \   0000028C   0x4603             MOV      R3,R0
   \   0000028E   0x.... 0x....      LDR.W    R2,??DataTable34_11
   \   00000292   0x4601             MOV      R1,R0
   \   00000294   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   00000298   0x.... 0x....      BL       BUTTON_SetBitmapEx
    397          									if(gCfgItems.multiple_language != 0)
   \   0000029C   0xF207 0x10BD      ADDW     R0,R7,#+445
   \   000002A0   0x7880             LDRB     R0,[R0, #+2]
   \   000002A2   0x2800             CMP      R0,#+0
   \   000002A4   0xD165             BNE.N    ??cbPrintingWin_16
   \   000002A6   0xE085             B.N      ??cbPrintingWin_1
    398          									{
    399          										BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
    400          									}
    401          									#endif
    402          			                                    }
    403          			                                    else
    404          			                                    {
    405          					                                     last_disp_state = PRINTING_UI;
   \                     ??cbPrintingWin_15: (+1)
   \   000002A8   0x2003             MOVS     R0,#+3
   \   000002AA   0x.... 0x....      LDR.W    R1,??DataTable34_1
   \   000002AE   0x7008             STRB     R0,[R1, #+0]
    406          					                    			Clear_printing();
   \   000002B0   0x.... 0x....      BL       Clear_printing
    407          			                    					draw_dialog(DIALOG_TYPE_FILAMENT_NO_PRESS);   
   \   000002B4   0x2012             MOVS     R0,#+18
   \   000002B6   0xE8BD 0x41F6      POP      {R1,R2,R4-R8,LR}
   \   000002BA   0x.... 0x....      B.W      draw_dialog
    408          			                                    }
    409          			                                }
    410          			                                else
    411          			                                {
    412          			                                    start_print_time();
   \                     ??cbPrintingWin_18: (+1)
   \   000002BE   0x.... 0x....      BL       start_print_time
    413          			                                    pause_resum = 1;
   \   000002C2   0x2001             MOVS     R0,#+1
   \   000002C4   0x.... 0x....      LDR.W    R1,??DataTable34_16
   \   000002C8   0x7008             STRB     R0,[R1, #+0]
    414          			                                    mksReprint.mks_printer_state = MKS_RESUMING;//MKS_WORKING;
   \   000002CA   0x20A8             MOVS     R0,#+168
   \   000002CC   0xF886 0x00B4      STRB     R0,[R6, #+180]
    415          			                                    #if 0
    416          			                                    last_disp_state = PAUSE_UI;
    417          			                                    Clear_pause();
    418          			                                    if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    419          			                                    {
    420          			                                        disp_state_stack._disp_state[disp_state_stack._disp_index]=MAIN_UI;
    421          			                                        disp_state_stack._disp_index--;
    422          			                                    }
    423          			                                    draw_operate();
    424          							      #endif
    425          							        BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
   \   000002D0   0x2201             MOVS     R2,#+1
   \   000002D2   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pause.bin">`
   \   000002D6   0x4628             MOV      R0,R5
   \   000002D8   0x.... 0x....      BL       BUTTON_SetBmpFileName
    426          								#if defined(TFT70)
    427          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    428          								#elif defined(TFT35)				
    429          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   000002DC   0x2000             MOVS     R0,#+0
   \   000002DE   0x9000             STR      R0,[SP, #+0]
   \   000002E0   0x4603             MOV      R3,R0
   \   000002E2   0x.... 0x....      LDR.W    R2,??DataTable34_11
   \   000002E6   0x4601             MOV      R1,R0
   \   000002E8   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   000002EC   0x.... 0x....      BL       BUTTON_SetBitmapEx
    430          								if(gCfgItems.multiple_language != 0)
   \   000002F0   0xF207 0x10BD      ADDW     R0,R7,#+445
   \   000002F4   0x7880             LDRB     R0,[R0, #+2]
   \   000002F6   0x2800             CMP      R0,#+0
   \   000002F8   0xD13B             BNE.N    ??cbPrintingWin_16
   \   000002FA   0xE05B             B.N      ??cbPrintingWin_1
    431          								{
    432          									BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
    433          								}
    434          								#endif
    435          			                                }
    436          			                            }
    437          			                           else
    438          			                           {
    439          			                                start_print_time();
   \                     ??cbPrintingWin_17: (+1)
   \   000002FC   0x.... 0x....      BL       start_print_time
    440          			                                pause_resum = 1;
   \   00000300   0x2001             MOVS     R0,#+1
   \   00000302   0x.... 0x....      LDR.W    R1,??DataTable34_16
   \   00000306   0x7008             STRB     R0,[R1, #+0]
    441          			                                mksReprint.mks_printer_state = MKS_RESUMING;//MKS_WORKING;
   \   00000308   0x20A8             MOVS     R0,#+168
   \   0000030A   0xF886 0x00B4      STRB     R0,[R6, #+180]
    442          			                                #if 0
    443          			                                last_disp_state = PAUSE_UI;
    444          			                                Clear_pause();
    445          			                                if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    446          			                                {
    447          			                                    disp_state_stack._disp_state[disp_state_stack._disp_index]=MAIN_UI;
    448          			                                    disp_state_stack._disp_index--;
    449          			                                }                                
    450          			                                draw_operate();
    451          							  #endif
    452          								BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
   \   0000030E   0x2201             MOVS     R2,#+1
   \   00000310   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pause.bin">`
   \   00000314   0x4628             MOV      R0,R5
   \   00000316   0x.... 0x....      BL       BUTTON_SetBmpFileName
    453          								#if defined(TFT70)
    454          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    455          								#elif defined(TFT35)				
    456          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   0000031A   0x2000             MOVS     R0,#+0
   \   0000031C   0x9000             STR      R0,[SP, #+0]
   \   0000031E   0x4603             MOV      R3,R0
   \   00000320   0x.... 0x....      LDR.W    R2,??DataTable34_11
   \   00000324   0x4601             MOV      R1,R0
   \   00000326   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   0000032A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    457          								if(gCfgItems.multiple_language != 0)
   \   0000032E   0xF207 0x10BD      ADDW     R0,R7,#+445
   \   00000332   0x7880             LDRB     R0,[R0, #+2]
   \   00000334   0x2800             CMP      R0,#+0
   \   00000336   0xD11C             BNE.N    ??cbPrintingWin_16
   \   00000338   0xE03C             B.N      ??cbPrintingWin_1
    458          								{
    459          									BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
    460          								}
    461          								#endif
    462          			                           }                            
    463          			                        }
    464          					}
    465          					else if(mksReprint.mks_printer_state == MKS_REPRINTING)
   \                     ??cbPrintingWin_8: (+1)
   \   0000033A   0x28AB             CMP      R0,#+171
   \   0000033C   0xD13A             BNE.N    ??cbPrintingWin_1
    466          					{
    467          						//int erase_data_save=0xffffffff;
    468          						//for(int i=0;i<63;i++)
    469          						//{
    470                     				//	epr_write_data(1024+i*4, (uint8_t *)erase_data_save, sizeof(erase_data_save));
    471          						//}
    472          								
    473          						start_print_time();
   \   0000033E   0x.... 0x....      BL       start_print_time
    474          						mksReprint.mks_printer_state = MKS_REPRINTED;
   \   00000342   0x20AC             MOVS     R0,#+172
   \   00000344   0xF886 0x00B4      STRB     R0,[R6, #+180]
    475          						BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
   \   00000348   0x2201             MOVS     R2,#+1
   \   0000034A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pause.bin">`
   \   0000034E   0x4628             MOV      R0,R5
   \   00000350   0x.... 0x....      BL       BUTTON_SetBmpFileName
    476          						BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   00000354   0x2000             MOVS     R0,#+0
   \   00000356   0x9000             STR      R0,[SP, #+0]
   \   00000358   0x4603             MOV      R3,R0
   \   0000035A   0x.... 0x....      LDR.W    R2,??DataTable34_11
   \   0000035E   0x4601             MOV      R1,R0
   \   00000360   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   00000364   0x.... 0x....      BL       BUTTON_SetBitmapEx
    477          						if(gCfgItems.multiple_language != 0)
   \   00000368   0x.... 0x....      LDR.W    R0,??DataTable36_1
   \   0000036C   0x7880             LDRB     R0,[R0, #+2]
   \   0000036E   0x2800             CMP      R0,#+0
   \   00000370   0xD020             BEQ.N    ??cbPrintingWin_1
    478          						{
    479          							BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
   \                     ??cbPrintingWin_16: (+1)
   \   00000372   0x.... 0x....      LDR.W    R0,??DataTable34_12
   \   00000376   0x6981             LDR      R1,[R0, #+24]
   \   00000378   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   0000037C   0xE8BD 0x41FC      POP      {R2-R8,LR}
   \   00000380   0x.... 0x....      B.W      BUTTON_SetText
    480          						}
    481          					#if tan_mask
    482          						#ifdef SAVE_FROM_SD
    483          						if(gCfgItems.pwroff_save_mode != 0)
    484          						#endif
    485          						{
    486          							rePrintProcess();
    487          						}
    488          						#ifdef SAVE_FROM_SD
    489          						else
    490          						{
    491          							if((RE_PRINT_STATUS)gCfgItems.rePrintFlag == printer_pwdwn_reprint)
    492          							{
    493          								rePrintProcess_pwrdwn();
    494          							}
    495          							else
    496          							{
    497          								rePrintProcess();
    498          							}
    499          						}
    500          						#endif
    501          
    502          						printerStaus = pr_working;
    503          						start_print_time();
    504          						MX_I2C1_Init(400000);//ª÷∏¥¥Ú”°£¨Ω´ÀŸ∂»∏ƒ≥…400k
    505          						BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
    506          						#if defined(TFT70)
    507          						BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    508          						#elif defined(TFT35)
    509          						BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_92, 0, 0);	
    510          						
    511          						#endif
    512          					#endif
    513          					}
    514          				}
    515          			}
    516          			else if(pMsg->hWinSrc == buttonStop.btnHandle)
   \                     ??cbPrintingWin_5: (+1)
   \   00000384   0xF9B4 0x1028      LDRSH    R1,[R4, #+40]
   \   00000388   0x4288             CMP      R0,R1
   \   0000038A   0xD113             BNE.N    ??cbPrintingWin_1
    517          			{	
    518          				if(gcode_preview_over != 1)
   \   0000038C   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000390   0x7800             LDRB     R0,[R0, #+0]
   \   00000392   0x2801             CMP      R0,#+1
   \   00000394   0xD00E             BEQ.N    ??cbPrintingWin_1
    519          				{
    520          					last_disp_state = PRINTING_UI;
   \   00000396   0x2003             MOVS     R0,#+3
   \   00000398   0x.... 0x....      LDR.W    R1,??DataTable34_1
   \   0000039C   0x7008             STRB     R0,[R1, #+0]
    521          					Clear_printing();
   \   0000039E   0x.... 0x....      BL       Clear_printing
    522          					draw_dialog(DIALOG_TYPE_STOP);
   \   000003A2   0x2000             MOVS     R0,#+0
   \   000003A4   0xE8BD 0x41F6      POP      {R1,R2,R4-R8,LR}
   \   000003A8   0x.... 0x....      B.W      draw_dialog
    523          				}
    524          			}
    525          			#if 0
    526          			else if(pMsg->hWinSrc == buttonAutoclose.btnHandle)
    527          			{
    528          				if(IsChooseAutoShutdown == 1)
    529          				{
    530          					BUTTON_SetBmpFileName(buttonAutoclose.btnHandle, "bmp_manual_off.bin",1);
    531          				}
    532          				else
    533          				{
    534          					IsChooseAutoShutdown = 1;
    535          					BUTTON_SetBmpFileName(buttonAutoclose.btnHandle, "bmp_auto_off.bin",1);
    536          				}
    537          				BUTTON_SetBitmapEx(buttonAutoclose.btnHandle, 0, &bmp_struct_50, 0, 0);
    538          			}
    539          
    540          			#endif
    541                      #endif
    542          		}
    543          		break;
    544          		
    545          	default:
    546          		WM_DefaultProc(pMsg);
   \                     ??cbPrintingWin_2: (+1)
   \   000003AC   0xE8BD 0x41F6      POP      {R1,R2,R4-R8,LR}
   \   000003B0   0x.... 0x....      B.W      WM_DefaultProc
    547          	}
    548          }
   \                     ??cbPrintingWin_1: (+1)
   \   000003B4   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    549          

   \                                 In section .text, align 2, keep-with-next
    550          void reset_file_info()
    551          {
    552          	gCurFileState.fileSize = 0;
   \                     reset_file_info: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable34_3
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0xF8C0 0x122C      STR      R1,[R0, #+556]
    553          	gCurFileState.totalRead = 0;
   \   0000000A   0xF500 0x700B      ADD      R0,R0,#+556
   \   0000000E   0x6081             STR      R1,[R0, #+8]
    554          	gCurFileState.totalSend = 0;
   \   00000010   0x60C1             STR      R1,[R0, #+12]
    555          	gCurFileState.bytesHaveRead = 0;
   \   00000012   0x8081             STRH     R1,[R0, #+4]
    556          	gCurFileState.bufPoint = 0;
   \   00000014   0x8201             STRH     R1,[R0, #+16]
    557          	gCurFileState.file_open_flag = 0;
   \   00000016   0x7481             STRB     R1,[R0, #+18]
    558          }
   \   00000018   0x4770             BX       LR               ;; return
    559          
    560          #if defined(TFT70)
    561          void draw_printing()
    562          {
    563          	FRESULT res;
    564          	int i;
    565          
    566          	disp_state_stack._disp_index = 0;
    567          	memset(disp_state_stack._disp_state, 0, sizeof(disp_state_stack._disp_state));
    568          	disp_state_stack._disp_state[disp_state_stack._disp_index] = PRINTING_UI;
    569          
    570          	disp_state = PRINTING_UI;
    571          	//Clear_print_file();
    572          
    573          	//GUI_SetFont(&GUI_Font8x18);
    574          	GUI_SetBkColor(gCfgItems.background_color);//0x4f433d
    575          	GUI_SetColor(gCfgItems.title_color);
    576          	GUI_Clear();
    577          #if 0
    578          	if(gCfgItems.language == LANG_COMPLEX_CHINESE)
    579          	{
    580          		GUI_SetFont(&GUI_FontHZ16);
    581          	}
    582          	else if(gCfgItems.language == LANG_SIMPLE_CHINESE)
    583          	{
    584          		GUI_SetFont(&GUI_FontHZ16);
    585          	}
    586          	else
    587          	{
    588          		GUI_SetFont(&GUI_FontHZ_fontHz18);
    589          	}	
    590          	#endif
    591          
    592          	
    593          	//GUI_SetColor(0x290c14);
    594          	//GUI_FillRect(5, 50, 400,460);
    595          
    596          		 
    597          	GUI_UC_SetEncodeNone();
    598          	GUI_SetFont(&GUI_FontHZ16);
    599          	GUI_DispStringAt(creat_title_text(),  TITLE_XPOS, TITLE_YPOS);
    600          	GUI_SetFont(&FONT_TITLE);
    601          	GUI_UC_SetEncodeUTF8();
    602          
    603          	hPrintingWnd = WM_CreateWindow(3, titleHeight, LCD_WIDTH-3*2, imgHeight, WM_CF_SHOW, cbPrintingWin, 0);
    604          
    605          	//Printing_Name = TEXT_CreateEx(300, 0,240,40, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, "test.gcode");;
    606          	
    607          
    608          	//buttonExt1.btnHandle = BUTTON_CreateEx(25,225,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, 301);
    609          	//E1_Temp = TEXT_CreateEx(80, 225, 100, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, "28/255");
    610          
    611          	buttonExt1.btnHandle = BUTTON_CreateEx(230,20,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    612          	E1_Temp = TEXT_CreateEx(290, 20, 150, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, " ");
    613          	if(gCfgItems.sprayerNum == 2)
    614          	{
    615          		//buttonExt2.btnHandle = BUTTON_CreateEx(225,225,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, 302);
    616          		//E2_Temp = TEXT_CreateEx(275, 225, 100, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, "30/255");
    617          		buttonExt2.btnHandle = BUTTON_CreateEx(410,20,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    618          		E2_Temp = TEXT_CreateEx(470,20, 160, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, " ");
    619          	}
    620          	if(gCfgItems.custom_bed_flag == 1)
    621          	{
    622          		//buttonBedstate.btnHandle = BUTTON_CreateEx(425,225,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, 303);
    623          		//Bed_Temp = TEXT_CreateEx(475, 225, 100, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,	GUI_ID_TEXT0, "25/150");
    624          		buttonBedstate.btnHandle = BUTTON_CreateEx(230,90,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    625          		Bed_Temp = TEXT_CreateEx(290, 90, 150, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,	GUI_ID_TEXT0, " ");
    626          	}
    627          	//buttonFanstate.btnHandle = BUTTON_CreateEx(625,225,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, 304);
    628          	//Fan_Pwm = TEXT_CreateEx(675, 225, 100, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, "255");
    629          	buttonFanstate.btnHandle = BUTTON_CreateEx(410,90,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    630          	Fan_Pwm = TEXT_CreateEx(470, 90, 160, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, " ");
    631          
    632          	buttonPrintSpeed.btnHandle = BUTTON_CreateEx(230,160,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    633          	Printing_speed = TEXT_CreateEx(290, 160, 150, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,	GUI_ID_TEXT0, " ");
    634          
    635          	buttonZpos.btnHandle = BUTTON_CreateEx(410,160,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    636          	Zpos = TEXT_CreateEx(470, 160, 160, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,	GUI_ID_TEXT0, " ");
    637          
    638          	printTimeLeft = TEXT_CreateEx(2, 240, 270, 40, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, " ");
    639          	//printZposRight = TEXT_CreateEx(270,240,270,40, hPrintingWnd, WM_CF_SHOW, TEXT_CF_RIGHT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, "Z:0.0");	
    640          	printingBar = PROGBAR_CreateEx(0,290, 592, 142, hPrintingWnd, WM_CF_SHOW, 0, 0);
    641          
    642          	//PROGBAR_SetBarColor(printingBar, 0, gCfgItems.printing_bar_color);//0xc88f75
    643          	//PROGBAR_SetTextColor(printingBar,  0, gCfgItems.printing_bar_text_color);
    644          	
    645          	PROGBAR_SetBarColor(printingBar, 0, gCfgItems.printing_bar_color_left);
    646          	PROGBAR_SetBarColor(printingBar, 1, gCfgItems.printing_bar_color_right);
    647          	PROGBAR_SetTextColor(printingBar, 0, gCfgItems.printing_bar_text_color_left);
    648          	PROGBAR_SetTextColor(printingBar, 1, gCfgItems.printing_bar_text_color_right);
    649          	
    650          	PROGBAR_SetFont(printingBar, &GUI_FontD36x48);
    651          	buttonPause.btnHandle = BUTTON_CreateEx(595,0,197,142,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());//alloc_win_id());
    652          	buttonStop.btnHandle = BUTTON_CreateEx(595,145,197,142,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());//alloc_win_id());
    653          	buttonOperat.btnHandle = BUTTON_CreateEx(595,290,197,142,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());//alloc_win_id());
    654          
    655          	BUTTON_SetBmpFileName(buttonExt1.btnHandle, "bmp_ext1_state.bin",0);
    656          	if(gCfgItems.sprayerNum == 2)
    657          	{
    658          		BUTTON_SetBmpFileName(buttonExt2.btnHandle, "bmp_ext2_state.bin",0);
    659          	}
    660          	//if(gCfgItems.custom_bed_flag == 1)
    661          	{
    662          		BUTTON_SetBmpFileName(buttonBedstate.btnHandle, "bmp_bed_state.bin",0);
    663          	}
    664          	BUTTON_SetBmpFileName(buttonFanstate.btnHandle, "bmp_fan_state.bin",0);
    665          	
    666          	BUTTON_SetBmpFileName(buttonPrintSpeed.btnHandle, "bmp_speed_state.bin",0);
    667          	
    668          	BUTTON_SetBmpFileName(buttonZpos.btnHandle, "bmp_zpos.bin",0);
    669          	
    670          	BUTTON_SetBitmapEx(buttonExt1.btnHandle, 0, &bmp_struct_50, 0, 0);	
    671          	if(gCfgItems.sprayerNum == 2)
    672          	{
    673          		BUTTON_SetBitmapEx(buttonExt2.btnHandle, 0, &bmp_struct_50, 0, 0);
    674          	}
    675          	//if(gCfgItems.custom_bed_flag == 1)
    676          	{
    677          		BUTTON_SetBitmapEx(buttonBedstate.btnHandle, 0, &bmp_struct_50, 0, 0);
    678          	}
    679          	BUTTON_SetBitmapEx(buttonFanstate.btnHandle, 0, &bmp_struct_50, 0, 0);
    680          	BUTTON_SetBitmapEx(buttonPrintSpeed.btnHandle, 0, &bmp_struct_50, 0, 0);
    681          	BUTTON_SetBitmapEx(buttonZpos.btnHandle, 0, &bmp_struct_50, 0, 0);
    682          	if((printerStaus == pr_reprint)||(printerStaus == pr_pause))
    683          	{
    684          		BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_resume.bin",1);
    685          	}
    686          	else
    687          	{
    688          		BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
    689          	}
    690          	BUTTON_SetBmpFileName(buttonStop.btnHandle, "bmp_stop.bin",1);
    691          	BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_operate.bin",1);
    692          	BUTTON_SetBkColor(buttonPause.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    693          	BUTTON_SetBkColor(buttonPause.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    694          	BUTTON_SetBkColor(buttonStop.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    695          	BUTTON_SetBkColor(buttonStop.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    696          	BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    697          	BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    698          
    699          	bmp_struct.XSize = 100;
    700          	bmp_struct.YSize = 100;
    701          	BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21); 
    702          	BUTTON_SetBitmapEx(buttonStop.btnHandle, 0, &bmp_struct, 48, 21);
    703          	BUTTON_SetBitmapEx(buttonOperat.btnHandle, 0, &bmp_struct, 48, 21);
    704          
    705          	TEXT_SetBkColor(Printing_speed,  gCfgItems.background_color);
    706          	TEXT_SetTextColor(Printing_speed, gCfgItems.state_text_color);
    707          	TEXT_SetBkColor(Zpos,  gCfgItems.background_color);
    708          	TEXT_SetTextColor(Zpos, gCfgItems.state_text_color);
    709          	TEXT_SetBkColor(printTimeLeft,  gCfgItems.background_color);
    710          	TEXT_SetTextColor(printTimeLeft, gCfgItems.state_text_color);	
    711          	TEXT_SetBkColor(E1_Temp,  gCfgItems.background_color);
    712          	TEXT_SetTextColor(E1_Temp, gCfgItems.state_text_color);
    713          	TEXT_SetBkColor(E2_Temp,  gCfgItems.background_color);
    714          	TEXT_SetTextColor(E2_Temp, gCfgItems.state_text_color);
    715          	TEXT_SetBkColor(Bed_Temp,  gCfgItems.background_color);
    716          	TEXT_SetTextColor(Bed_Temp, gCfgItems.state_text_color);
    717          	TEXT_SetBkColor(Fan_Pwm,  gCfgItems.background_color);
    718          	TEXT_SetTextColor(Fan_Pwm, gCfgItems.state_text_color);
    719          	TEXT_SetBkColor(Autoclose,  gCfgItems.background_color);
    720          	TEXT_SetTextColor(Autoclose, gCfgItems.state_text_color);
    721          	
    722          	disp_sprayer_tem_printing();
    723          	disp_bed_temp_printing();
    724          	disp_fan_speed_printing();
    725          	disp_printing_speed();
    726          
    727          	if(gCurFileState.file_open_flag != 0xaa)
    728          	{
    729          		if((from_flash_pic != 1)||(gCfgItems.breakpoint_reprint_flg == 1))
    730          		{
    731          			reset_file_info();
    732          			res = f_open(&curFile, curFileName, FA_OPEN_EXISTING | FA_READ);
    733          			if(res == FR_OK)
    734          			{
    735          				gCurFileState.file_open_flag = 0xaa;
    736          
    737          				bakup_file_path((uint8_t *)curFileName, strlen(curFileName));
    738          
    739          				srcfp = &curFile;
    740          				if(gCfgItems.breakpoint_reprint_flg == 1)
    741          				{
    742          					printerStaus = breakpoint_reprint;
    743          				}
    744          				else
    745          				{
    746          					printerStaus = pr_working;
    747          				}
    748          
    749          				once_flag = 0;
    750          			}
    751          		}
    752          
    753          	}
    754          	else
    755          	{
    756          		
    757          		//setProBarRate(gCurFileState.totalSend);
    758          		PROGBAR_SetValue(printingBar,gCurFileState.totalSend);
    759          		
    760          	}
    761          		
    762          }
    763          
    764          #else

   \                                 In section .text, align 4, keep-with-next
    765          void draw_printing()
    766          {
   \                     draw_printing: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
    767          	FRESULT res;
                 	        ^
Warning[Pe177]: variable "res" was declared but never referenced
    768          	int i;
                 	    ^
Warning[Pe177]: variable "i" was declared but never referenced

  static GUI_HWIN hPrintingWnd, hRetDlgWnd;
                                ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",42  Warning[Pe177]: 
          variable "hRetDlgWnd" was declared but never referenced

  static TEXT_Handle printTimeLeft, printSpeed, sprayTem1, sprayTem2, BedTem, fanSpeed;
                                    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",44  Warning[Pe177]: 
          variable "printSpeed" was declared but never referenced

  static TEXT_Handle printTimeLeft, printSpeed, sprayTem1, sprayTem2, BedTem, fanSpeed;
                                                ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",44  Warning[Pe177]: 
          variable "sprayTem1" was declared but never referenced

  static TEXT_Handle printTimeLeft, printSpeed, sprayTem1, sprayTem2, BedTem, fanSpeed;
                                                           ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",44  Warning[Pe177]: 
          variable "sprayTem2" was declared but never referenced

  static TEXT_Handle printTimeLeft, printSpeed, sprayTem1, sprayTem2, BedTem, fanSpeed;
                                                                      ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",44  Warning[Pe177]: 
          variable "BedTem" was declared but never referenced

  static TEXT_Handle printTimeLeft, printSpeed, sprayTem1, sprayTem2, BedTem, fanSpeed;
                                                                              ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",44  Warning[Pe177]: 
          variable "fanSpeed" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                       ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "button1" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "button2" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                        ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "button3" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "button4" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                        ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "button5" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                                ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "buttonE1" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                                          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "buttonE2" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                                                    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "buttonFan" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                                                               ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "buttonBed" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                                                                          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "buttonOk" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                                                                                    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "buttonCancle" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                                                                                                  ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "btnRetMainPage" was declared but never referenced

  static TEXT_Handle printRetDlgText;
                     ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",46  Warning[Pe177]: 
          variable "printRetDlgText" was declared but never referenced

  static BUTTON_STRUCT buttonPause,buttonStop,buttonOperat,buttonExt1, buttonExt2, buttonFanstate, buttonBedstate,buttonPrintSpeed,buttonTime,buttonZpos,buttonAutoclose;
                                                                                                                                                         ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",48  Warning[Pe177]: 
          variable "buttonAutoclose" was declared but never referenced

  static TEXT_Handle printZposRight,E1_Temp, E2_Temp, Fan_Pwm, Bed_Temp,Printing_speed,Zpos,Autoclose;
                     ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",49  Warning[Pe177]: 
          variable "printZposRight" was declared but never referenced

  static TEXT_Handle printZposRight,E1_Temp, E2_Temp, Fan_Pwm, Bed_Temp,Printing_speed,Zpos,Autoclose;
                                                                                            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",49  Warning[Pe177]: 
          variable "Autoclose" was declared but never referenced

  static CHECKBOX_Handle auto_close;
                         ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",50  Warning[Pe177]: 
          variable "auto_close" was declared but never referenced

  static FIL curFile;
             ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",53  Warning[Pe177]: 
          variable "curFile" was declared but never referenced
    769          
    770          	disp_state_stack._disp_index = 0;
   \   00000006   0x.... 0x....      LDR.W    R4,??DataTable36_3
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xF884 0x0064      STRB     R0,[R4, #+100]
    771          	memset(disp_state_stack._disp_state, 0, sizeof(disp_state_stack._disp_state));
   \   00000010   0x2264             MOVS     R2,#+100
   \   00000012   0x4601             MOV      R1,R0
   \   00000014   0x4620             MOV      R0,R4
   \   00000016   0x.... 0x....      BL       memset
    772          	disp_state_stack._disp_state[disp_state_stack._disp_index] = PRINTING_UI;
   \   0000001A   0x2003             MOVS     R0,#+3
   \   0000001C   0xF994 0x1064      LDRSB    R1,[R4, #+100]
   \   00000020   0x5508             STRB     R0,[R1, R4]
    773          
    774          	disp_state = PRINTING_UI;
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable36_4
   \   00000026   0x7008             STRB     R0,[R1, #+0]
    775          
    776          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000028   0x.... 0x....      LDR.W    R4,??DataTable36_5
   \   0000002C   0x6860             LDR      R0,[R4, #+4]
   \   0000002E   0x.... 0x....      BL       GUI_SetBkColor
    777          	GUI_SetColor(gCfgItems.title_color);
   \   00000032   0x1D25             ADDS     R5,R4,#+4
   \   00000034   0x6868             LDR      R0,[R5, #+4]
   \   00000036   0x.... 0x....      BL       GUI_SetColor
    778          	GUI_Clear();
   \   0000003A   0x.... 0x....      BL       GUI_Clear
    779          
    780          	GUI_UC_SetEncodeNone();
   \   0000003E   0x.... 0x....      BL       GUI_UC_SetEncodeNone
    781          	GUI_SetFont(&GUI_FontHZ16);
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable36_6
   \   00000046   0x.... 0x....      BL       GUI_SetFont
    782          	GUI_DispStringAt(creat_title_text(),  TITLE_XPOS, TITLE_YPOS);
   \   0000004A   0x.... 0x....      BL       creat_title_text
   \   0000004E   0x2205             MOVS     R2,#+5
   \   00000050   0x2103             MOVS     R1,#+3
   \   00000052   0x.... 0x....      BL       GUI_DispStringAt
    783          	GUI_SetFont(&FONT_TITLE);
   \   00000056   0x.... 0x....      LDR.W    R8,??DataTable36_7
   \   0000005A   0x4640             MOV      R0,R8
   \   0000005C   0x.... 0x....      BL       GUI_SetFont
    784          	GUI_UC_SetEncodeUTF8();
   \   00000060   0x.... 0x....      BL       GUI_UC_SetEncodeUTF8
    785          #if defined(TFT35)
    786          		hPrintingWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbPrintingWin, 0);
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x9002             STR      R0,[SP, #+8]
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable36_8
   \   0000006C   0x9001             STR      R0,[SP, #+4]
   \   0000006E   0x2002             MOVS     R0,#+2
   \   00000070   0x9000             STR      R0,[SP, #+0]
   \   00000072   0xF44F 0x738E      MOV      R3,#+284
   \   00000076   0xF44F 0x72F0      MOV      R2,#+480
   \   0000007A   0x2124             MOVS     R1,#+36
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x.... 0x....      BL       WM_CreateWindow
   \   00000082   0x.... 0x....      LDR.W    R6,??DataTable33
   \   00000086   0x8030             STRH     R0,[R6, #+0]
    787          		
    788          		buttonExt1.btnHandle = BUTTON_CreateEx(205,100,STATE_PIC_X_PIXEL,STATE_PIC_Y_PIXEL,hPrintingWnd, BUTTON_CF_SHOW, 0, 301);
   \   00000088   0x.... 0x....      LDR.W    R7,??DataTable36_9
   \   0000008C   0xF240 0x112D      MOVW     R1,#+301
   \   00000090   0x9103             STR      R1,[SP, #+12]
   \   00000092   0x2100             MOVS     R1,#+0
   \   00000094   0x9102             STR      R1,[SP, #+8]
   \   00000096   0x2102             MOVS     R1,#+2
   \   00000098   0x9101             STR      R1,[SP, #+4]
   \   0000009A   0x9000             STR      R0,[SP, #+0]
   \   0000009C   0x232D             MOVS     R3,#+45
   \   0000009E   0x461A             MOV      R2,R3
   \   000000A0   0x2164             MOVS     R1,#+100
   \   000000A2   0x20CD             MOVS     R0,#+205
   \   000000A4   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000A8   0x8038             STRH     R0,[R7, #+0]
    789          			E1_Temp = TEXT_CreateEx(205+STATE_PIC_X_PIXEL, 100, 80, STATE_PIC_Y_PIXEL, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, " ");
   \   000000AA   0xF20F 0x3A98      ADR.W    R10,??draw_printing_0  ;; " "
   \   000000AE   0xF8CD 0xA010      STR      R10,[SP, #+16]
   \   000000B2   0xF44F 0x70B0      MOV      R0,#+352
   \   000000B6   0x9003             STR      R0,[SP, #+12]
   \   000000B8   0x200C             MOVS     R0,#+12
   \   000000BA   0x9002             STR      R0,[SP, #+8]
   \   000000BC   0x2002             MOVS     R0,#+2
   \   000000BE   0x9001             STR      R0,[SP, #+4]
   \   000000C0   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000000C4   0x9000             STR      R0,[SP, #+0]
   \   000000C6   0x232D             MOVS     R3,#+45
   \   000000C8   0x2250             MOVS     R2,#+80
   \   000000CA   0x2164             MOVS     R1,#+100
   \   000000CC   0x20FA             MOVS     R0,#+250
   \   000000CE   0x.... 0x....      BL       TEXT_CreateEx
   \   000000D2   0x80F0             STRH     R0,[R6, #+6]
    790          			//if(gCfgItems.sprayerNum == 2)
    791          			{
    792          				buttonExt2.btnHandle = BUTTON_CreateEx(340+10,100,STATE_PIC_X_PIXEL,STATE_PIC_Y_PIXEL,hPrintingWnd, BUTTON_CF_SHOW, 0, 302);
   \   000000D4   0xF44F 0x7097      MOV      R0,#+302
   \   000000D8   0x9003             STR      R0,[SP, #+12]
   \   000000DA   0x2000             MOVS     R0,#+0
   \   000000DC   0x9002             STR      R0,[SP, #+8]
   \   000000DE   0x2002             MOVS     R0,#+2
   \   000000E0   0x9001             STR      R0,[SP, #+4]
   \   000000E2   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000000E6   0x9000             STR      R0,[SP, #+0]
   \   000000E8   0x232D             MOVS     R3,#+45
   \   000000EA   0x461A             MOV      R2,R3
   \   000000EC   0x2164             MOVS     R1,#+100
   \   000000EE   0xF44F 0x70AF      MOV      R0,#+350
   \   000000F2   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000F6   0x8338             STRH     R0,[R7, #+24]
    793          				E2_Temp = TEXT_CreateEx(340+STATE_PIC_X_PIXEL+10,100,80,STATE_PIC_Y_PIXEL, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, " ");
   \   000000F8   0xF240 0x1B8B      MOVW     R11,#+395
   \   000000FC   0xF8CD 0xA010      STR      R10,[SP, #+16]
   \   00000100   0xF44F 0x70B0      MOV      R0,#+352
   \   00000104   0x9003             STR      R0,[SP, #+12]
   \   00000106   0x200C             MOVS     R0,#+12
   \   00000108   0x9002             STR      R0,[SP, #+8]
   \   0000010A   0x2002             MOVS     R0,#+2
   \   0000010C   0x9001             STR      R0,[SP, #+4]
   \   0000010E   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000112   0x9000             STR      R0,[SP, #+0]
   \   00000114   0x232D             MOVS     R3,#+45
   \   00000116   0x2250             MOVS     R2,#+80
   \   00000118   0x2164             MOVS     R1,#+100
   \   0000011A   0x4658             MOV      R0,R11
   \   0000011C   0x.... 0x....      BL       TEXT_CreateEx
   \   00000120   0x8130             STRH     R0,[R6, #+8]
    794          			}
    795          			//if(gCfgItems.custom_bed_flag == 1)
    796          			{
    797          				buttonBedstate.btnHandle = BUTTON_CreateEx(205,150,STATE_PIC_X_PIXEL,STATE_PIC_Y_PIXEL,hPrintingWnd, BUTTON_CF_SHOW, 0, 303);
   \   00000122   0xF240 0x102F      MOVW     R0,#+303
   \   00000126   0x9003             STR      R0,[SP, #+12]
   \   00000128   0x2000             MOVS     R0,#+0
   \   0000012A   0x9002             STR      R0,[SP, #+8]
   \   0000012C   0x2002             MOVS     R0,#+2
   \   0000012E   0x9001             STR      R0,[SP, #+4]
   \   00000130   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000134   0x9000             STR      R0,[SP, #+0]
   \   00000136   0x232D             MOVS     R3,#+45
   \   00000138   0x461A             MOV      R2,R3
   \   0000013A   0x2196             MOVS     R1,#+150
   \   0000013C   0x20CD             MOVS     R0,#+205
   \   0000013E   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000142   0xF8A7 0x0048      STRH     R0,[R7, #+72]
    798          				Bed_Temp = TEXT_CreateEx(205+STATE_PIC_X_PIXEL,150,80,STATE_PIC_Y_PIXEL, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,	GUI_ID_TEXT0, " ");
   \   00000146   0xF8CD 0xA010      STR      R10,[SP, #+16]
   \   0000014A   0xF44F 0x70B0      MOV      R0,#+352
   \   0000014E   0x9003             STR      R0,[SP, #+12]
   \   00000150   0x200C             MOVS     R0,#+12
   \   00000152   0x9002             STR      R0,[SP, #+8]
   \   00000154   0x2002             MOVS     R0,#+2
   \   00000156   0x9001             STR      R0,[SP, #+4]
   \   00000158   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000015C   0x9000             STR      R0,[SP, #+0]
   \   0000015E   0x232D             MOVS     R3,#+45
   \   00000160   0x2250             MOVS     R2,#+80
   \   00000162   0x2196             MOVS     R1,#+150
   \   00000164   0x20FA             MOVS     R0,#+250
   \   00000166   0x.... 0x....      BL       TEXT_CreateEx
   \   0000016A   0x81B0             STRH     R0,[R6, #+12]
    799          			}
    800          			buttonFanstate.btnHandle = BUTTON_CreateEx(340+10,150,STATE_PIC_X_PIXEL,STATE_PIC_Y_PIXEL,hPrintingWnd, BUTTON_CF_SHOW, 0, 304);
   \   0000016C   0xF44F 0x7098      MOV      R0,#+304
   \   00000170   0x9003             STR      R0,[SP, #+12]
   \   00000172   0x2000             MOVS     R0,#+0
   \   00000174   0x9002             STR      R0,[SP, #+8]
   \   00000176   0x2002             MOVS     R0,#+2
   \   00000178   0x9001             STR      R0,[SP, #+4]
   \   0000017A   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000017E   0x9000             STR      R0,[SP, #+0]
   \   00000180   0x232D             MOVS     R3,#+45
   \   00000182   0x461A             MOV      R2,R3
   \   00000184   0x2196             MOVS     R1,#+150
   \   00000186   0xF44F 0x70AF      MOV      R0,#+350
   \   0000018A   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000018E   0x8638             STRH     R0,[R7, #+48]
    801          			Fan_Pwm = TEXT_CreateEx(340+STATE_PIC_X_PIXEL+10, 150, 80, STATE_PIC_Y_PIXEL, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, " ");
   \   00000190   0xF8CD 0xA010      STR      R10,[SP, #+16]
   \   00000194   0xF44F 0x70B0      MOV      R0,#+352
   \   00000198   0x9003             STR      R0,[SP, #+12]
   \   0000019A   0x200C             MOVS     R0,#+12
   \   0000019C   0x9002             STR      R0,[SP, #+8]
   \   0000019E   0x2002             MOVS     R0,#+2
   \   000001A0   0x9001             STR      R0,[SP, #+4]
   \   000001A2   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000001A6   0x9000             STR      R0,[SP, #+0]
   \   000001A8   0x232D             MOVS     R3,#+45
   \   000001AA   0x2250             MOVS     R2,#+80
   \   000001AC   0x2196             MOVS     R1,#+150
   \   000001AE   0x4658             MOV      R0,R11
   \   000001B0   0x.... 0x....      BL       TEXT_CreateEx
   \   000001B4   0x8170             STRH     R0,[R6, #+10]
    802          		
    803          			printingBar = PROGBAR_CreateEx(205,0, 270, 40, hPrintingWnd, WM_CF_SHOW, 0, 0);
   \   000001B6   0x2000             MOVS     R0,#+0
   \   000001B8   0x9003             STR      R0,[SP, #+12]
   \   000001BA   0x9002             STR      R0,[SP, #+8]
   \   000001BC   0x2002             MOVS     R0,#+2
   \   000001BE   0x9001             STR      R0,[SP, #+4]
   \   000001C0   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000001C4   0x9000             STR      R0,[SP, #+0]
   \   000001C6   0x2328             MOVS     R3,#+40
   \   000001C8   0xF44F 0x7287      MOV      R2,#+270
   \   000001CC   0x2100             MOVS     R1,#+0
   \   000001CE   0x20CD             MOVS     R0,#+205
   \   000001D0   0x.... 0x....      BL       PROGBAR_CreateEx
   \   000001D4   0x8070             STRH     R0,[R6, #+2]
    804          
    805          			buttonTime.btnHandle = BUTTON_CreateEx(205,50,STATE_PIC_X_PIXEL,STATE_PIC_Y_PIXEL,hPrintingWnd, BUTTON_CF_SHOW, 0, 305);		
   \   000001D6   0xF240 0x1931      MOVW     R9,#+305
   \   000001DA   0xF8CD 0x900C      STR      R9,[SP, #+12]
   \   000001DE   0x2000             MOVS     R0,#+0
   \   000001E0   0x9002             STR      R0,[SP, #+8]
   \   000001E2   0x2002             MOVS     R0,#+2
   \   000001E4   0x9001             STR      R0,[SP, #+4]
   \   000001E6   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000001EA   0x9000             STR      R0,[SP, #+0]
   \   000001EC   0x232D             MOVS     R3,#+45
   \   000001EE   0x461A             MOV      R2,R3
   \   000001F0   0x2132             MOVS     R1,#+50
   \   000001F2   0x20CD             MOVS     R0,#+205
   \   000001F4   0x.... 0x....      BL       BUTTON_CreateEx
   \   000001F8   0xF8A7 0x0060      STRH     R0,[R7, #+96]
    806          			printTimeLeft = TEXT_CreateEx(205+STATE_PIC_X_PIXEL,50,80, STATE_PIC_Y_PIXEL, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,	GUI_ID_TEXT0, " ");
   \   000001FC   0xF8CD 0xA010      STR      R10,[SP, #+16]
   \   00000200   0xF44F 0x70B0      MOV      R0,#+352
   \   00000204   0x9003             STR      R0,[SP, #+12]
   \   00000206   0x200C             MOVS     R0,#+12
   \   00000208   0x9002             STR      R0,[SP, #+8]
   \   0000020A   0x2002             MOVS     R0,#+2
   \   0000020C   0x9001             STR      R0,[SP, #+4]
   \   0000020E   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000212   0x9000             STR      R0,[SP, #+0]
   \   00000214   0x232D             MOVS     R3,#+45
   \   00000216   0x2250             MOVS     R2,#+80
   \   00000218   0x2132             MOVS     R1,#+50
   \   0000021A   0x20FA             MOVS     R0,#+250
   \   0000021C   0x.... 0x....      BL       TEXT_CreateEx
   \   00000220   0x80B0             STRH     R0,[R6, #+4]
    807          		
    808          			buttonZpos.btnHandle = BUTTON_CreateEx(340+10,50,STATE_PIC_X_PIXEL,STATE_PIC_Y_PIXEL,hPrintingWnd, BUTTON_CF_SHOW, 0, 306);
   \   00000222   0xF44F 0x7099      MOV      R0,#+306
   \   00000226   0x9003             STR      R0,[SP, #+12]
   \   00000228   0x2000             MOVS     R0,#+0
   \   0000022A   0x9002             STR      R0,[SP, #+8]
   \   0000022C   0x2002             MOVS     R0,#+2
   \   0000022E   0x9001             STR      R0,[SP, #+4]
   \   00000230   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000234   0x9000             STR      R0,[SP, #+0]
   \   00000236   0x232D             MOVS     R3,#+45
   \   00000238   0x461A             MOV      R2,R3
   \   0000023A   0x2132             MOVS     R1,#+50
   \   0000023C   0xF44F 0x70AF      MOV      R0,#+350
   \   00000240   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000244   0xF8A7 0x0078      STRH     R0,[R7, #+120]
    809          			Zpos = TEXT_CreateEx(340+STATE_PIC_X_PIXEL+10, 50, 80, STATE_PIC_Y_PIXEL, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER, GUI_ID_TEXT0, " ");
   \   00000248   0xF8CD 0xA010      STR      R10,[SP, #+16]
   \   0000024C   0xF44F 0x70B0      MOV      R0,#+352
   \   00000250   0x9003             STR      R0,[SP, #+12]
   \   00000252   0x200C             MOVS     R0,#+12
   \   00000254   0x9002             STR      R0,[SP, #+8]
   \   00000256   0x2002             MOVS     R0,#+2
   \   00000258   0x9001             STR      R0,[SP, #+4]
   \   0000025A   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000025E   0x9000             STR      R0,[SP, #+0]
   \   00000260   0x232D             MOVS     R3,#+45
   \   00000262   0x2250             MOVS     R2,#+80
   \   00000264   0x2132             MOVS     R1,#+50
   \   00000266   0x4658             MOV      R0,R11
   \   00000268   0x.... 0x....      BL       TEXT_CreateEx
   \   0000026C   0x81F0             STRH     R0,[R6, #+14]
    810          		
    811          			//printTimeLeft = TEXT_CreateEx(205+10,50,135, 30, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,	GUI_ID_TEXT0, " ");
    812          		
    813          			//buttonZpos.btnHandle = BUTTON_CreateEx(440,249,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, 303);
    814          			//Zpos = TEXT_CreateEx(340, 50, 135, 30, hPrintingWnd, WM_CF_SHOW, TEXT_CF_RIGHT|TEXT_CF_VCENTER, GUI_ID_TEXT0, " ");
    815          		
    816          			PROGBAR_SetBarColor(printingBar, 0, gCfgItems.printing_bar_color_left);
   \   0000026E   0x6C2A             LDR      R2,[R5, #+64]
   \   00000270   0x2100             MOVS     R1,#+0
   \   00000272   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   00000276   0x.... 0x....      BL       PROGBAR_SetBarColor
    817          			PROGBAR_SetBarColor(printingBar, 1, gCfgItems.printing_bar_color_right);
   \   0000027A   0x6C6A             LDR      R2,[R5, #+68]
   \   0000027C   0x2101             MOVS     R1,#+1
   \   0000027E   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   00000282   0x.... 0x....      BL       PROGBAR_SetBarColor
    818          			PROGBAR_SetTextColor(printingBar, 0, gCfgItems.printing_bar_text_color_left);
   \   00000286   0x6CAA             LDR      R2,[R5, #+72]
   \   00000288   0x2100             MOVS     R1,#+0
   \   0000028A   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   0000028E   0x.... 0x....      BL       PROGBAR_SetTextColor
    819          			PROGBAR_SetTextColor(printingBar, 1, gCfgItems.printing_bar_text_color_right);
   \   00000292   0x6CEA             LDR      R2,[R5, #+76]
   \   00000294   0x2101             MOVS     R1,#+1
   \   00000296   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   0000029A   0x.... 0x....      BL       PROGBAR_SetTextColor
    820          			
    821          			PROGBAR_SetFont(printingBar, &FONT_TITLE);
   \   0000029E   0x4641             MOV      R1,R8
   \   000002A0   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   000002A4   0x.... 0x....      BL       PROGBAR_SetFont
    822          			if((mksReprint.mks_printer_state == MKS_IDLE)  &&  (gCurFileState.totalSend == 100) )
   \   000002A8   0x.... 0x....      LDR.W    R8,??DataTable34_2
   \   000002AC   0xF898 0x00B4      LDRB     R0,[R8, #+180]
   \   000002B0   0x28A6             CMP      R0,#+166
   \   000002B2   0xD105             BNE.N    ??draw_printing_1
   \   000002B4   0x.... 0x....      LDR.W    R0,??DataTable34_3
   \   000002B8   0xF8D0 0x0238      LDR      R0,[R0, #+568]
   \   000002BC   0x2864             CMP      R0,#+100
   \   000002BE   0xD021             BEQ.N    ??draw_printing_2
    823          			{
    824          				
    825          			}
    826          			else
    827          			{
    828          				buttonPause.btnHandle = BUTTON_CreateEx(5,204,150,80,hPrintingWnd, BUTTON_CF_SHOW, 0, 306);//alloc_win_id());
   \                     ??draw_printing_1: (+1)
   \   000002C0   0xF44F 0x7099      MOV      R0,#+306
   \   000002C4   0x9003             STR      R0,[SP, #+12]
   \   000002C6   0x2000             MOVS     R0,#+0
   \   000002C8   0x9002             STR      R0,[SP, #+8]
   \   000002CA   0x2002             MOVS     R0,#+2
   \   000002CC   0x9001             STR      R0,[SP, #+4]
   \   000002CE   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000002D2   0x9000             STR      R0,[SP, #+0]
   \   000002D4   0x2350             MOVS     R3,#+80
   \   000002D6   0x2296             MOVS     R2,#+150
   \   000002D8   0x21CC             MOVS     R1,#+204
   \   000002DA   0x2005             MOVS     R0,#+5
   \   000002DC   0x.... 0x....      BL       BUTTON_CreateEx
   \   000002E0   0x8230             STRH     R0,[R6, #+16]
    829          				buttonStop.btnHandle = BUTTON_CreateEx(165,204,150,80,hPrintingWnd, BUTTON_CF_SHOW, 0, 307);//alloc_win_id());
   \   000002E2   0xF240 0x1033      MOVW     R0,#+307
   \   000002E6   0x9003             STR      R0,[SP, #+12]
   \   000002E8   0x2000             MOVS     R0,#+0
   \   000002EA   0x9002             STR      R0,[SP, #+8]
   \   000002EC   0x2002             MOVS     R0,#+2
   \   000002EE   0x9001             STR      R0,[SP, #+4]
   \   000002F0   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000002F4   0x9000             STR      R0,[SP, #+0]
   \   000002F6   0x2350             MOVS     R3,#+80
   \   000002F8   0x2296             MOVS     R2,#+150
   \   000002FA   0x21CC             MOVS     R1,#+204
   \   000002FC   0x20A5             MOVS     R0,#+165
   \   000002FE   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000302   0x8530             STRH     R0,[R6, #+40]
    830          			}
    831          			buttonOperat.btnHandle = BUTTON_CreateEx(325,204,150,80,hPrintingWnd, BUTTON_CF_SHOW, 0, 305);//alloc_win_id());
   \                     ??draw_printing_2: (+1)
   \   00000304   0xF8CD 0x900C      STR      R9,[SP, #+12]
   \   00000308   0x2000             MOVS     R0,#+0
   \   0000030A   0x9002             STR      R0,[SP, #+8]
   \   0000030C   0x2002             MOVS     R0,#+2
   \   0000030E   0x9001             STR      R0,[SP, #+4]
   \   00000310   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000314   0x9000             STR      R0,[SP, #+0]
   \   00000316   0x2350             MOVS     R3,#+80
   \   00000318   0x2296             MOVS     R2,#+150
   \   0000031A   0x21CC             MOVS     R1,#+204
   \   0000031C   0xF240 0x1045      MOVW     R0,#+325
   \   00000320   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000324   0xF8A6 0x0040      STRH     R0,[R6, #+64]
    832          
    833          			BUTTON_SetBmpFileName(buttonTime.btnHandle, "bmp_time_state.bin",0);
   \   00000328   0x2200             MOVS     R2,#+0
   \   0000032A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_time_state.bin">`
   \   0000032E   0xF9B7 0x0060      LDRSH    R0,[R7, #+96]
   \   00000332   0x.... 0x....      BL       BUTTON_SetBmpFileName
    834          			BUTTON_SetBmpFileName(buttonZpos.btnHandle, "bmp_zpos_state.bin",0);
   \   00000336   0x2200             MOVS     R2,#+0
   \   00000338   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_zpos_state.bin">`
   \   0000033C   0xF9B7 0x0078      LDRSH    R0,[R7, #+120]
   \   00000340   0x.... 0x....      BL       BUTTON_SetBmpFileName
    835          			
    836          
    837          		BUTTON_SetBmpFileName(buttonExt1.btnHandle, "bmp_ext1_state.bin",0);
   \   00000344   0x2200             MOVS     R2,#+0
   \   00000346   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_ext1_state.bin">`
   \   0000034A   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   0000034E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    838          		//if(gCfgItems.sprayerNum == 2)
    839          		{
    840          			BUTTON_SetBmpFileName(buttonExt2.btnHandle, "bmp_ext2_state.bin",0);
   \   00000352   0x2200             MOVS     R2,#+0
   \   00000354   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_ext2_state.bin">`
   \   00000358   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000035C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    841          		}
    842          		//if(gCfgItems.custom_bed_flag == 1)
    843          		{
    844          			BUTTON_SetBmpFileName(buttonBedstate.btnHandle, "bmp_bed_state.bin",0);
   \   00000360   0x2200             MOVS     R2,#+0
   \   00000362   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_bed_state.bin">`
   \   00000366   0xF9B7 0x0048      LDRSH    R0,[R7, #+72]
   \   0000036A   0x.... 0x....      BL       BUTTON_SetBmpFileName
    845          		}
    846          		BUTTON_SetBmpFileName(buttonFanstate.btnHandle, "bmp_fan_state.bin",0);
   \   0000036E   0x2200             MOVS     R2,#+0
   \   00000370   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_fan_state.bin">`
   \   00000374   0xF9B7 0x0030      LDRSH    R0,[R7, #+48]
   \   00000378   0x.... 0x....      BL       BUTTON_SetBmpFileName
    847          		
    848          		BUTTON_SetBmpFileName(buttonPrintSpeed.btnHandle, "bmp_speed_state.bin",0);
   \   0000037C   0x2200             MOVS     R2,#+0
   \   0000037E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_speed_state.bin">`
   \   00000382   0xF9B7 0x0090      LDRSH    R0,[R7, #+144]
   \   00000386   0x.... 0x....      BL       BUTTON_SetBmpFileName
    849          		
    850          		//BUTTON_SetBmpFileName(buttonZpos.btnHandle, "bmp_zpos.bin",0);
    851          		BUTTON_SetBitmapEx(buttonTime.btnHandle, 0, &bmp_struct_50, 0, 0);
   \   0000038A   0x.... 0x....      LDR.W    R9,??DataTable36_10
   \   0000038E   0x2000             MOVS     R0,#+0
   \   00000390   0x9000             STR      R0,[SP, #+0]
   \   00000392   0x4603             MOV      R3,R0
   \   00000394   0x464A             MOV      R2,R9
   \   00000396   0x4601             MOV      R1,R0
   \   00000398   0xF9B7 0x0060      LDRSH    R0,[R7, #+96]
   \   0000039C   0x.... 0x....      BL       BUTTON_SetBitmapEx
    852          		BUTTON_SetBitmapEx(buttonZpos.btnHandle, 0, &bmp_struct_50, 0, 0);				
   \   000003A0   0x2000             MOVS     R0,#+0
   \   000003A2   0x9000             STR      R0,[SP, #+0]
   \   000003A4   0x4603             MOV      R3,R0
   \   000003A6   0x464A             MOV      R2,R9
   \   000003A8   0x4601             MOV      R1,R0
   \   000003AA   0xF9B7 0x0078      LDRSH    R0,[R7, #+120]
   \   000003AE   0x.... 0x....      BL       BUTTON_SetBitmapEx
    853          		BUTTON_SetBitmapEx(buttonExt1.btnHandle, 0, &bmp_struct_50, 0, 0);	
   \   000003B2   0x2000             MOVS     R0,#+0
   \   000003B4   0x9000             STR      R0,[SP, #+0]
   \   000003B6   0x4603             MOV      R3,R0
   \   000003B8   0x464A             MOV      R2,R9
   \   000003BA   0x4601             MOV      R1,R0
   \   000003BC   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000003C0   0x.... 0x....      BL       BUTTON_SetBitmapEx
    854          		//if(gCfgItems.sprayerNum == 2)
    855          		{
    856          			BUTTON_SetBitmapEx(buttonExt2.btnHandle, 0, &bmp_struct_50, 0, 0);
   \   000003C4   0x2000             MOVS     R0,#+0
   \   000003C6   0x9000             STR      R0,[SP, #+0]
   \   000003C8   0x4603             MOV      R3,R0
   \   000003CA   0x464A             MOV      R2,R9
   \   000003CC   0x4601             MOV      R1,R0
   \   000003CE   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000003D2   0x.... 0x....      BL       BUTTON_SetBitmapEx
    857          		}
    858          		//if(gCfgItems.custom_bed_flag == 1)
    859          		{
    860          			BUTTON_SetBitmapEx(buttonBedstate.btnHandle, 0, &bmp_struct_50, 0, 0);
   \   000003D6   0x2000             MOVS     R0,#+0
   \   000003D8   0x9000             STR      R0,[SP, #+0]
   \   000003DA   0x4603             MOV      R3,R0
   \   000003DC   0x464A             MOV      R2,R9
   \   000003DE   0x4601             MOV      R1,R0
   \   000003E0   0xF9B7 0x0048      LDRSH    R0,[R7, #+72]
   \   000003E4   0x.... 0x....      BL       BUTTON_SetBitmapEx
    861          		}
    862          		BUTTON_SetBitmapEx(buttonFanstate.btnHandle, 0, &bmp_struct_50, 0, 0);
   \   000003E8   0x2000             MOVS     R0,#+0
   \   000003EA   0x9000             STR      R0,[SP, #+0]
   \   000003EC   0x4603             MOV      R3,R0
   \   000003EE   0x464A             MOV      R2,R9
   \   000003F0   0x4601             MOV      R1,R0
   \   000003F2   0xF9B7 0x0030      LDRSH    R0,[R7, #+48]
   \   000003F6   0x.... 0x....      BL       BUTTON_SetBitmapEx
    863          		BUTTON_SetBitmapEx(buttonPrintSpeed.btnHandle, 0, &bmp_struct_50, 0, 0);
   \   000003FA   0x2000             MOVS     R0,#+0
   \   000003FC   0x9000             STR      R0,[SP, #+0]
   \   000003FE   0x4603             MOV      R3,R0
   \   00000400   0x464A             MOV      R2,R9
   \   00000402   0x4601             MOV      R1,R0
   \   00000404   0xF9B7 0x0090      LDRSH    R0,[R7, #+144]
   \   00000408   0x.... 0x....      BL       BUTTON_SetBitmapEx
    864          		BUTTON_SetBitmapEx(buttonZpos.btnHandle, 0, &bmp_struct_50, 0, 0);
   \   0000040C   0x2000             MOVS     R0,#+0
   \   0000040E   0x9000             STR      R0,[SP, #+0]
   \   00000410   0x4603             MOV      R3,R0
   \   00000412   0x464A             MOV      R2,R9
   \   00000414   0x4601             MOV      R1,R0
   \   00000416   0xF9B7 0x0078      LDRSH    R0,[R7, #+120]
   \   0000041A   0x.... 0x....      BL       BUTTON_SetBitmapEx
   \   0000041E   0xF898 0x00B4      LDRB     R0,[R8, #+180]
   \   00000422   0x28A6             CMP      R0,#+166
   \   00000424   0xD110             BNE.N    ??draw_printing_3
   \   00000426   0x.... 0x....      LDR.W    R1,??DataTable34_3
   \   0000042A   0xF8D1 0x1238      LDR      R1,[R1, #+568]
   \   0000042E   0x2964             CMP      R1,#+100
   \   00000430   0xD10A             BNE.N    ??draw_printing_3
    865          		if((mksReprint.mks_printer_state == MKS_IDLE)  &&  (gCurFileState.totalSend == 100) )
    866          		{
    867          			BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_printing_back.bin",1);
   \   00000432   0x2201             MOVS     R2,#+1
   \   00000434   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_printing_back.bin">`
   \   00000438   0xF9B6 0x0040      LDRSH    R0,[R6, #+64]
   \   0000043C   0x.... 0x....      BL       BUTTON_SetBmpFileName
   \   00000440   0xE06B             B.N      ??draw_printing_4
   \   00000442   0xBF00             Nop      
   \                     ??draw_printing_0:
   \   00000444   0x20 0x00          DC8      " ",0x0,0x0
   \              0x00 0x00    
    868          		}
    869          		else
    870          		{
    871          			if((mksReprint.mks_printer_state == MKS_REPRINTING)
    872          				||(mksReprint.mks_printer_state == MKS_REPRINTED)
    873          				||(mksReprint.mks_printer_state == MKS_PAUSING)
    874          				||(mksReprint.mks_printer_state == MKS_PAUSED))
   \                     ??draw_printing_3: (+1)
   \   00000448   0x28AB             CMP      R0,#+171
   \   0000044A   0xD005             BEQ.N    ??draw_printing_5
   \   0000044C   0x28AC             CMP      R0,#+172
   \   0000044E   0xD003             BEQ.N    ??draw_printing_5
   \   00000450   0x28A9             CMP      R0,#+169
   \   00000452   0xD001             BEQ.N    ??draw_printing_5
   \   00000454   0x28AA             CMP      R0,#+170
   \   00000456   0xD107             BNE.N    ??draw_printing_6
    875          			{
    876          				BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_resume.bin",1);
   \                     ??draw_printing_5: (+1)
   \   00000458   0x2201             MOVS     R2,#+1
   \   0000045A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_resume.bin">`
   \   0000045E   0xF9B6 0x0010      LDRSH    R0,[R6, #+16]
   \   00000462   0x.... 0x....      BL       BUTTON_SetBmpFileName
   \   00000466   0xE006             B.N      ??draw_printing_7
    877          			}
    878          			else
    879          			{
    880          				BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
   \                     ??draw_printing_6: (+1)
   \   00000468   0x2201             MOVS     R2,#+1
   \   0000046A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pause.bin">`
   \   0000046E   0xF9B6 0x0010      LDRSH    R0,[R6, #+16]
   \   00000472   0x.... 0x....      BL       BUTTON_SetBmpFileName
    881          			}
    882          			BUTTON_SetBmpFileName(buttonStop.btnHandle, "bmp_stop.bin",1);
   \                     ??draw_printing_7: (+1)
   \   00000476   0x2201             MOVS     R2,#+1
   \   00000478   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_stop.bin">`
   \   0000047C   0xF9B6 0x0028      LDRSH    R0,[R6, #+40]
   \   00000480   0x.... 0x....      BL       BUTTON_SetBmpFileName
    883          			
    884          			
    885          			BUTTON_SetBkColor(buttonPause.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   00000484   0x6A2A             LDR      R2,[R5, #+32]
   \   00000486   0x2101             MOVS     R1,#+1
   \   00000488   0xF9B6 0x0010      LDRSH    R0,[R6, #+16]
   \   0000048C   0x.... 0x....      BL       BUTTON_SetBkColor
    886          			BUTTON_SetBkColor(buttonPause.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   00000490   0x6A2A             LDR      R2,[R5, #+32]
   \   00000492   0x2100             MOVS     R1,#+0
   \   00000494   0xF9B6 0x0010      LDRSH    R0,[R6, #+16]
   \   00000498   0x.... 0x....      BL       BUTTON_SetBkColor
    887          			BUTTON_SetBkColor(buttonStop.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   0000049C   0x6A2A             LDR      R2,[R5, #+32]
   \   0000049E   0x2101             MOVS     R1,#+1
   \   000004A0   0xF9B6 0x0028      LDRSH    R0,[R6, #+40]
   \   000004A4   0x.... 0x....      BL       BUTTON_SetBkColor
    888          			BUTTON_SetBkColor(buttonStop.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   000004A8   0x6A2A             LDR      R2,[R5, #+32]
   \   000004AA   0x2100             MOVS     R1,#+0
   \   000004AC   0xF9B6 0x0028      LDRSH    R0,[R6, #+40]
   \   000004B0   0x.... 0x....      BL       BUTTON_SetBkColor
    889          			
    890          			
    891          			BUTTON_SetTextColor(buttonPause.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   000004B4   0x6A6A             LDR      R2,[R5, #+36]
   \   000004B6   0x2101             MOVS     R1,#+1
   \   000004B8   0xF9B6 0x0010      LDRSH    R0,[R6, #+16]
   \   000004BC   0x.... 0x....      BL       BUTTON_SetTextColor
    892          			BUTTON_SetTextColor(buttonPause.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   000004C0   0x6A6A             LDR      R2,[R5, #+36]
   \   000004C2   0x2100             MOVS     R1,#+0
   \   000004C4   0xF9B6 0x0010      LDRSH    R0,[R6, #+16]
   \   000004C8   0x.... 0x....      BL       BUTTON_SetTextColor
    893          			BUTTON_SetTextColor(buttonStop.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   000004CC   0x6A6A             LDR      R2,[R5, #+36]
   \   000004CE   0x2101             MOVS     R1,#+1
   \   000004D0   0xF9B6 0x0028      LDRSH    R0,[R6, #+40]
   \   000004D4   0x.... 0x....      BL       BUTTON_SetTextColor
    894          			BUTTON_SetTextColor(buttonStop.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   000004D8   0x6A6A             LDR      R2,[R5, #+36]
   \   000004DA   0x2100             MOVS     R1,#+0
   \   000004DC   0xF9B6 0x0028      LDRSH    R0,[R6, #+40]
   \   000004E0   0x.... 0x....      BL       BUTTON_SetTextColor
    895          		
    896          			BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0); 
   \   000004E4   0x.... 0x....      LDR.W    R7,??DataTable34_11
   \   000004E8   0x2000             MOVS     R0,#+0
   \   000004EA   0x9000             STR      R0,[SP, #+0]
   \   000004EC   0x4603             MOV      R3,R0
   \   000004EE   0x463A             MOV      R2,R7
   \   000004F0   0x4601             MOV      R1,R0
   \   000004F2   0xF9B6 0x0010      LDRSH    R0,[R6, #+16]
   \   000004F6   0x.... 0x....      BL       BUTTON_SetBitmapEx
    897          			BUTTON_SetBitmapEx(buttonStop.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   000004FA   0x2000             MOVS     R0,#+0
   \   000004FC   0x9000             STR      R0,[SP, #+0]
   \   000004FE   0x4603             MOV      R3,R0
   \   00000500   0x463A             MOV      R2,R7
   \   00000502   0x4601             MOV      R1,R0
   \   00000504   0xF9B6 0x0028      LDRSH    R0,[R6, #+40]
   \   00000508   0x.... 0x....      BL       BUTTON_SetBitmapEx
    898          			
    899          			BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_operate.bin",1);
   \   0000050C   0x2201             MOVS     R2,#+1
   \   0000050E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_operate.bin">`
   \   00000512   0xF9B6 0x0040      LDRSH    R0,[R6, #+64]
   \   00000516   0x.... 0x....      BL       BUTTON_SetBmpFileName
    900          		}
    901          		
    902          		
    903          		BUTTON_SetTextColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \                     ??draw_printing_4: (+1)
   \   0000051A   0x6A6A             LDR      R2,[R5, #+36]
   \   0000051C   0x2101             MOVS     R1,#+1
   \   0000051E   0xF9B6 0x0040      LDRSH    R0,[R6, #+64]
   \   00000522   0x.... 0x....      BL       BUTTON_SetTextColor
    904          		BUTTON_SetTextColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   00000526   0x6A6A             LDR      R2,[R5, #+36]
   \   00000528   0x2100             MOVS     R1,#+0
   \   0000052A   0xF9B6 0x0040      LDRSH    R0,[R6, #+64]
   \   0000052E   0x.... 0x....      BL       BUTTON_SetTextColor
    905          		
    906          		BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   00000532   0x6A2A             LDR      R2,[R5, #+32]
   \   00000534   0x2101             MOVS     R1,#+1
   \   00000536   0xF9B6 0x0040      LDRSH    R0,[R6, #+64]
   \   0000053A   0x.... 0x....      BL       BUTTON_SetBkColor
    907          		BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   0000053E   0x6A2A             LDR      R2,[R5, #+32]
   \   00000540   0x2100             MOVS     R1,#+0
   \   00000542   0xF9B6 0x0040      LDRSH    R0,[R6, #+64]
   \   00000546   0x.... 0x....      BL       BUTTON_SetBkColor
    908          		BUTTON_SetBitmapEx(buttonOperat.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   0000054A   0x2000             MOVS     R0,#+0
   \   0000054C   0x9000             STR      R0,[SP, #+0]
   \   0000054E   0x4603             MOV      R3,R0
   \   00000550   0x.... 0x....      LDR.W    R2,??DataTable34_11
   \   00000554   0x4601             MOV      R1,R0
   \   00000556   0xF9B6 0x0040      LDRSH    R0,[R6, #+64]
   \   0000055A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    909          		
    910          		TEXT_SetBkColor(Printing_speed,  gCfgItems.state_background_color);
   \   0000055E   0x68A9             LDR      R1,[R5, #+8]
   \   00000560   0xF9B6 0x0058      LDRSH    R0,[R6, #+88]
   \   00000564   0x.... 0x....      BL       TEXT_SetBkColor
    911          		TEXT_SetTextColor(Printing_speed, gCfgItems.state_text_color);
   \   00000568   0x68E9             LDR      R1,[R5, #+12]
   \   0000056A   0xF9B6 0x0058      LDRSH    R0,[R6, #+88]
   \   0000056E   0x.... 0x....      BL       TEXT_SetTextColor
    912          		TEXT_SetBkColor(Zpos,  gCfgItems.state_background_color);
   \   00000572   0x68A9             LDR      R1,[R5, #+8]
   \   00000574   0xF9B6 0x000E      LDRSH    R0,[R6, #+14]
   \   00000578   0x.... 0x....      BL       TEXT_SetBkColor
    913          		TEXT_SetTextColor(Zpos, gCfgItems.state_text_color);
   \   0000057C   0x68E9             LDR      R1,[R5, #+12]
   \   0000057E   0xF9B6 0x000E      LDRSH    R0,[R6, #+14]
   \   00000582   0x.... 0x....      BL       TEXT_SetTextColor
    914          		TEXT_SetBkColor(printTimeLeft,	gCfgItems.state_background_color);
   \   00000586   0x68A9             LDR      R1,[R5, #+8]
   \   00000588   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   0000058C   0x.... 0x....      BL       TEXT_SetBkColor
    915          		TEXT_SetTextColor(printTimeLeft, gCfgItems.state_text_color);	
   \   00000590   0x68E9             LDR      R1,[R5, #+12]
   \   00000592   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   00000596   0x.... 0x....      BL       TEXT_SetTextColor
    916          		TEXT_SetBkColor(E1_Temp,  gCfgItems.state_background_color);
   \   0000059A   0x68A9             LDR      R1,[R5, #+8]
   \   0000059C   0xF9B6 0x0006      LDRSH    R0,[R6, #+6]
   \   000005A0   0x.... 0x....      BL       TEXT_SetBkColor
    917          		TEXT_SetTextColor(E1_Temp, gCfgItems.state_text_color);
   \   000005A4   0x68E9             LDR      R1,[R5, #+12]
   \   000005A6   0xF9B6 0x0006      LDRSH    R0,[R6, #+6]
   \   000005AA   0x.... 0x....      BL       TEXT_SetTextColor
    918          		TEXT_SetBkColor(E2_Temp,  gCfgItems.state_background_color);
   \   000005AE   0x68A9             LDR      R1,[R5, #+8]
   \   000005B0   0xF9B6 0x0008      LDRSH    R0,[R6, #+8]
   \   000005B4   0x.... 0x....      BL       TEXT_SetBkColor
    919          		TEXT_SetTextColor(E2_Temp, gCfgItems.state_text_color);
   \   000005B8   0x68E9             LDR      R1,[R5, #+12]
   \   000005BA   0xF9B6 0x0008      LDRSH    R0,[R6, #+8]
   \   000005BE   0x.... 0x....      BL       TEXT_SetTextColor
    920          		TEXT_SetBkColor(Bed_Temp,  gCfgItems.state_background_color);
   \   000005C2   0x68A9             LDR      R1,[R5, #+8]
   \   000005C4   0xF9B6 0x000C      LDRSH    R0,[R6, #+12]
   \   000005C8   0x.... 0x....      BL       TEXT_SetBkColor
    921          		TEXT_SetTextColor(Bed_Temp, gCfgItems.state_text_color);
   \   000005CC   0x68E9             LDR      R1,[R5, #+12]
   \   000005CE   0xF9B6 0x000C      LDRSH    R0,[R6, #+12]
   \   000005D2   0x.... 0x....      BL       TEXT_SetTextColor
    922          		TEXT_SetBkColor(Fan_Pwm,  gCfgItems.state_background_color);
   \   000005D6   0x68A9             LDR      R1,[R5, #+8]
   \   000005D8   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   000005DC   0x.... 0x....      BL       TEXT_SetBkColor
    923          		TEXT_SetTextColor(Fan_Pwm, gCfgItems.state_text_color);
   \   000005E0   0x68E9             LDR      R1,[R5, #+12]
   \   000005E2   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   000005E6   0x.... 0x....      BL       TEXT_SetTextColor
    924          		//TEXT_SetBkColor(Autoclose,	gCfgItems.state_background_color);
    925          		//TEXT_SetTextColor(Autoclose, gCfgItems.state_text_color);
    926          		
    927          		BUTTON_SetTextAlign(buttonOperat.btnHandle,GUI_TA_VCENTER | GUI_CUSTOM_POS);
   \   000005EA   0x211C             MOVS     R1,#+28
   \   000005EC   0xF9B6 0x0040      LDRSH    R0,[R6, #+64]
   \   000005F0   0x.... 0x....      BL       BUTTON_SetTextAlign
    928          		BUTTON_SetTextAlign(buttonStop.btnHandle,GUI_TA_VCENTER | GUI_CUSTOM_POS);
   \   000005F4   0x211C             MOVS     R1,#+28
   \   000005F6   0xF9B6 0x0028      LDRSH    R0,[R6, #+40]
   \   000005FA   0x.... 0x....      BL       BUTTON_SetTextAlign
    929          		BUTTON_SetTextAlign(buttonPause.btnHandle,GUI_TA_VCENTER | GUI_CUSTOM_POS);		
   \   000005FE   0x211C             MOVS     R1,#+28
   \   00000600   0xF9B6 0x0010      LDRSH    R0,[R6, #+16]
   \   00000604   0x.... 0x....      BL       BUTTON_SetTextAlign
    930          		if(gCfgItems.multiple_language != 0)
   \   00000608   0xF894 0x01BF      LDRB     R0,[R4, #+447]
   \   0000060C   0x2800             CMP      R0,#+0
   \   0000060E   0xD030             BEQ.N    ??draw_printing_8
    931          		{
    932          			
    933          			if((mksReprint.mks_printer_state == MKS_IDLE)  &&  (gCurFileState.totalSend == 100) )
   \   00000610   0xF898 0x00B4      LDRB     R0,[R8, #+180]
   \   00000614   0x28A6             CMP      R0,#+166
   \   00000616   0xD10C             BNE.N    ??draw_printing_9
   \   00000618   0x....             LDR.N    R0,??DataTable34_3
   \   0000061A   0xF8D0 0x0238      LDR      R0,[R0, #+568]
   \   0000061E   0x2864             CMP      R0,#+100
   \   00000620   0xD107             BNE.N    ??draw_printing_9
    934          			{
    935          				BUTTON_SetText(buttonOperat.btnHandle, common_menu.text_back);
   \   00000622   0x.... 0x....      LDR.W    R0,??DataTable36_11
   \   00000626   0x6801             LDR      R1,[R0, #+0]
   \   00000628   0xF9B6 0x0040      LDRSH    R0,[R6, #+64]
   \   0000062C   0x.... 0x....      BL       BUTTON_SetText
   \   00000630   0xE01F             B.N      ??draw_printing_8
    936          			}
    937          			else
    938          			{
    939          				BUTTON_SetText(buttonOperat.btnHandle, printing_menu.option);
   \                     ??draw_printing_9: (+1)
   \   00000632   0x....             LDR.N    R4,??DataTable34_12
   \   00000634   0x6861             LDR      R1,[R4, #+4]
   \   00000636   0xF9B6 0x0040      LDRSH    R0,[R6, #+64]
   \   0000063A   0x.... 0x....      BL       BUTTON_SetText
    940          				BUTTON_SetText(buttonStop.btnHandle,printing_menu.stop);
   \   0000063E   0x6A21             LDR      R1,[R4, #+32]
   \   00000640   0xF9B6 0x0028      LDRSH    R0,[R6, #+40]
   \   00000644   0x.... 0x....      BL       BUTTON_SetText
   \   00000648   0xF898 0x00B4      LDRB     R0,[R8, #+180]
   \   0000064C   0x28AB             CMP      R0,#+171
   \   0000064E   0xD005             BEQ.N    ??draw_printing_10
   \   00000650   0x28AC             CMP      R0,#+172
   \   00000652   0xD003             BEQ.N    ??draw_printing_10
   \   00000654   0x28A9             CMP      R0,#+169
   \   00000656   0xD001             BEQ.N    ??draw_printing_10
   \   00000658   0x28AA             CMP      R0,#+170
   \   0000065A   0xD105             BNE.N    ??draw_printing_11
    941          				//if((mksReprint.mks_printer_state == MKS_REPRINTING)||(mksReprint.mks_printer_state == MKS_PAUSING))
    942          		      	      if((mksReprint.mks_printer_state == MKS_REPRINTING)
    943          		                ||(mksReprint.mks_printer_state == MKS_REPRINTED)
    944          		                ||(mksReprint.mks_printer_state == MKS_PAUSING)
    945          		                ||(mksReprint.mks_printer_state == MKS_PAUSED))
    946          
    947                          			BUTTON_SetText(buttonPause.btnHandle, printing_menu.resume);
   \                     ??draw_printing_10: (+1)
   \   0000065C   0x69E1             LDR      R1,[R4, #+28]
   \   0000065E   0xF9B6 0x0010      LDRSH    R0,[R6, #+16]
   \   00000662   0x.... 0x....      BL       BUTTON_SetText
   \   00000666   0xE004             B.N      ??draw_printing_8
    948          				else
    949          					BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);
   \                     ??draw_printing_11: (+1)
   \   00000668   0x69A1             LDR      R1,[R4, #+24]
   \   0000066A   0xF9B6 0x0010      LDRSH    R0,[R6, #+16]
   \   0000066E   0x.... 0x....      BL       BUTTON_SetText
    950          			}
    951          			
    952          		}
    953          		
    954          		disp_sprayer_tem_printing();
   \                     ??draw_printing_8: (+1)
   \   00000672   0x.... 0x....      BL       disp_sprayer_tem_printing
    955          		disp_bed_temp_printing();
   \   00000676   0x.... 0x....      BL       disp_bed_temp_printing
    956          		disp_fan_speed_printing();
   \   0000067A   0x.... 0x....      BL       disp_fan_speed_printing
    957          		disp_printing_speed();
   \   0000067E   0xB005             ADD      SP,SP,#+20
   \   00000680   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   00000684   0x....             B.N      disp_printing_speed
    958          
    959          #else
    960          
    961          
    962                  hPrintingWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight / 2, WM_CF_SHOW, cbPrintingWin, 0);
    963          
    964                  printingBar = PROGBAR_CreateEx(10, 20, LCD_WIDTH * 3 / 4 - 20, 30, hPrintingWnd, WM_CF_SHOW, 0, 0);
    965          
    966                  PROGBAR_SetBarColor(printingBar, 0, GUI_GREEN);
    967          
    968                  PROGBAR_SetTextColor(printingBar, 0, GUI_BLACK);
    969                  PROGBAR_SetFont(printingBar, &GUI_FontHZ_fontHz14);
    970          
    971                  buttonOperat.btnHandle = BUTTON_CreateEx(LCD_WIDTH * 3 / 4 , 0, LCD_WIDTH / 4 - 2, imgHeight / 2 - 1, hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    972          
    973                  BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    974                  BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    975                  BUTTON_SetTextColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED,gCfgItems.btn_textcolor);
    976                  BUTTON_SetTextColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.btn_textcolor);
    977                  
    978          
    979                  BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_menu.bin",0);
    980                  BUTTON_SetBitmapEx(buttonOperat.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);    
    981                  if(gCfgItems.multiple_language != 0)
    982                  {
    983                      BUTTON_SetText(buttonOperat.btnHandle,printing_menu.option);
    984                  }
    985          
    986                  printTimeLeft = TEXT_CreateEx(10, imgHeight * 3/ 8 - 5, LCD_WIDTH * 3 / 4 -10, imgHeight / 10, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT,  GUI_ID_TEXT0, "");
    987          
    988                  sprayTem1 = TEXT_CreateEx(10, imgHeight - 30, 160, 25, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT,  GUI_ID_TEXT2, "");
    989          
    990                  sprayTem2 = TEXT_CreateEx(10+78, imgHeight - 30, 160, 25, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT,  GUI_ID_TEXT2, "");
    991          
    992                  BedTem = TEXT_CreateEx(170, imgHeight - 30, 80, 25, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT,  GUI_ID_TEXT2, "");
    993          
    994                  fanSpeed = TEXT_CreateEx(300, imgHeight - 30, 60, 25, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT,  GUI_ID_TEXT2, "");
    995          
    996                  start_print_time();
    997          
    998                  disp_print_time();
    999          
   1000                  TEXT_SetBkColor(printTimeLeft, gCfgItems.background_color); 
   1001          
   1002                  Pic_Read((uint8_t *)"bmp_extru1_no_words.bin",bmp_public_buf);
   1003                  GUI_DrawBitmap(&bmp_struct,  5, titleHeight + imgHeight/2 + 2);
   1004                  if(mksCfg.extruders == 2)
   1005                  {
   1006                      Pic_Read((uint8_t *)"bmp_extru2_no_words.bin",bmp_public_buf);
   1007                      GUI_DrawBitmap(&bmp_struct,  83, titleHeight + imgHeight/2 + 2);
   1008          
   1009                  }
   1010                  if(mksCfg.has_temp_bed == 1)
   1011                  {
   1012                      Pic_Read((uint8_t *)"bmp_bed_no_words.bin",bmp_public_buf);
   1013                      GUI_DrawBitmap(&bmp_struct,  161, titleHeight + imgHeight/2 + 2);
   1014                  }
   1015          
   1016                  Pic_Read((uint8_t *)"bmp_fan_no_words.bin",bmp_public_buf);
   1017                  GUI_DrawBitmap(&bmp_struct,  239, titleHeight + imgHeight/2 + 2);
   1018          
   1019                  disp_sprayer_tem_printing();
   1020                  disp_bed_temp_printing();
   1021                  disp_fan_speed_printing();  
   1022          #endif
   1023          	
   1024          	
   1025          }
   1026          #endif

   \                                 In section .text, align 2, keep-with-next
   1027          void reset_print_time()
   1028          {
   1029          	//print_time.days = 0;
   1030          	print_time.hours = 0;
   \                     reset_print_time: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable36_12
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x8041             STRH     R1,[R0, #+2]
   1031          	print_time.minutes = 0;
   \   00000008   0x7101             STRB     R1,[R0, #+4]
   1032          	print_time.seconds = 0;
   \   0000000A   0x7141             STRB     R1,[R0, #+5]
   1033          	print_time.ms_10 = 0;
   \   0000000C   0x7181             STRB     R1,[R0, #+6]
   1034          	//print_time.start = 1;
   1035          }
   \   0000000E   0x4770             BX       LR               ;; return
   1036          

   \                                 In section .text, align 2, keep-with-next
   1037          void start_print_time()
   1038          {
   1039          	print_time.start = 1;
   \                     start_print_time: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable36_12
   \   00000006   0x71C8             STRB     R0,[R1, #+7]
   1040          }
   \   00000008   0x4770             BX       LR               ;; return
   1041          

   \                                 In section .text, align 2, keep-with-next
   1042          void stop_print_time()
   1043          {
   1044          	print_time.start = 0;
   \                     stop_print_time: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable36_12
   \   00000006   0x71C8             STRB     R0,[R1, #+7]
   1045          }
   \   00000008   0x4770             BX       LR               ;; return
   1046          #if defined(TFT35)
   1047          extern uint32_t rcv_ok_nums;

   \                                 In section .text, align 2, keep-with-next
   1048          void disp_print_time()		//disp timer -- skyblue
   1049          {
   \                     disp_print_time: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB08D             SUB      SP,SP,#+52
   1050          	char buf[30] = {0};
   \   00000004   0xA804             ADD      R0,SP,#+16
   \   00000006   0x2120             MOVS     R1,#+32
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
   1051          	
   1052          	TEXT_SetBkColor(printTimeLeft,  gCfgItems.state_background_color);
   \   0000000C   0x....             LDR.N    R4,??DataTable33
   \   0000000E   0x....             LDR.N    R5,??DataTable34_5
   \   00000010   0x68E9             LDR      R1,[R5, #+12]
   \   00000012   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000016   0x.... 0x....      BL       TEXT_SetBkColor
   1053          	TEXT_SetTextColor(printTimeLeft, gCfgItems.state_text_color);
   \   0000001A   0x6929             LDR      R1,[R5, #+16]
   \   0000001C   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000020   0x.... 0x....      BL       TEXT_SetTextColor
   1054          	TEXT_SetBkColor(Zpos,gCfgItems.state_background_color);
   \   00000024   0x68E9             LDR      R1,[R5, #+12]
   \   00000026   0xF9B4 0x000E      LDRSH    R0,[R4, #+14]
   \   0000002A   0x.... 0x....      BL       TEXT_SetBkColor
   1055          	TEXT_SetTextColor(Zpos,gCfgItems.state_text_color);
   \   0000002E   0x6929             LDR      R1,[R5, #+16]
   \   00000030   0xF9B4 0x000E      LDRSH    R0,[R4, #+14]
   \   00000034   0x.... 0x....      BL       TEXT_SetTextColor
   1056          		
   1057          	//TEXT_SetFont(printTimeLeft, &FONT_TITLE);
   1058          	//TEXT_SetFont(Zpos, &FONT_TITLE);
   1059          	memset(buf, 0, sizeof(buf));
   \   00000038   0x221E             MOVS     R2,#+30
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0xA804             ADD      R0,SP,#+16
   \   0000003E   0x.... 0x....      BL       memset
   1060          	//sprintf(buf, "T: %d%d:%d%d:%d%d  Z:", print_time.hours/10, print_time.hours%10, print_time.minutes/10, print_time.minutes%10,  print_time.seconds/10, print_time.seconds%10);
   1061          	sprintf(buf, "%d%d:%d%d:%d%d", print_time.hours/10, print_time.hours%10, print_time.minutes/10, print_time.minutes%10,  print_time.seconds/10, print_time.seconds%10);
   \   00000042   0x.... 0x....      LDR.W    R2,??DataTable36_12
   \   00000046   0xF992 0x5005      LDRSB    R5,[R2, #+5]
   \   0000004A   0xF992 0x0005      LDRSB    R0,[R2, #+5]
   \   0000004E   0x7911             LDRB     R1,[R2, #+4]
   \   00000050   0x8853             LDRH     R3,[R2, #+2]
   \   00000052   0x220A             MOVS     R2,#+10
   \   00000054   0xFB93 0xF2F2      SDIV     R2,R3,R2
   \   00000058   0x260A             MOVS     R6,#+10
   \   0000005A   0xFB91 0xF6F6      SDIV     R6,R1,R6
   \   0000005E   0x270A             MOVS     R7,#+10
   \   00000060   0x46BC             MOV      R12,R7
   \   00000062   0xFB95 0xFCFC      SDIV     R12,R5,R12
   \   00000066   0xFB07 0x551C      MLS      R5,R7,R12,R5
   \   0000006A   0x9503             STR      R5,[SP, #+12]
   \   0000006C   0x463D             MOV      R5,R7
   \   0000006E   0xFB90 0xF0F5      SDIV     R0,R0,R5
   \   00000072   0x9002             STR      R0,[SP, #+8]
   \   00000074   0xFB07 0x1016      MLS      R0,R7,R6,R1
   \   00000078   0x9001             STR      R0,[SP, #+4]
   \   0000007A   0x9600             STR      R6,[SP, #+0]
   \   0000007C   0xFB07 0x3312      MLS      R3,R7,R2,R3
   \   00000080   0x.... 0x....      ADR.W    R1,`?<Constant "%d%d:%d%d:%d%d">`
   \   00000084   0xA804             ADD      R0,SP,#+16
   \   00000086   0x.... 0x....      BL       sprintf
   1062          	//if((printerStaus == pr_idle)  &&  (gCurFileState.totalSend == 100))memset((void *)gCfgItems.z_display_pos,0,sizeof(gCfgItems.z_display_pos));
   1063          	//strcat(buf,(const char *)gCfgItems.z_display_pos);
   1064          	TEXT_SetText(printTimeLeft, buf);
   \   0000008A   0xA904             ADD      R1,SP,#+16
   \   0000008C   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000090   0x.... 0x....      BL       TEXT_SetText
   1065          	memset(buf, ' ', sizeof(buf)-1);
   \   00000094   0x221D             MOVS     R2,#+29
   \   00000096   0x2120             MOVS     R1,#+32
   \   00000098   0xA804             ADD      R0,SP,#+16
   \   0000009A   0x.... 0x....      BL       memset
   1066          	TEXT_SetText(Zpos, buf);
   \   0000009E   0xA904             ADD      R1,SP,#+16
   \   000000A0   0xF9B4 0x000E      LDRSH    R0,[R4, #+14]
   \   000000A4   0x.... 0x....      BL       TEXT_SetText
   1067          	memset(buf, 0, sizeof(buf));
   \   000000A8   0x221E             MOVS     R2,#+30
   \   000000AA   0x2100             MOVS     R1,#+0
   \   000000AC   0xA804             ADD      R0,SP,#+16
   \   000000AE   0x.... 0x....      BL       memset
   1068          	//sprintf(buf,"Z: %s",(const char *)gCfgItems.z_display_pos);
   1069          	sprintf(buf,"%.3f",current_position[Z_AXIS]);
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable36_13
   \   000000B6   0x6880             LDR      R0,[R0, #+8]
   \   000000B8   0x.... 0x....      BL       __aeabi_f2d
   \   000000BC   0x4602             MOV      R2,R0
   \   000000BE   0x460B             MOV      R3,R1
   \   000000C0   0x.... 0x....      ADR.W    R1,`?<Constant "%.3f">`
   \   000000C4   0xA804             ADD      R0,SP,#+16
   \   000000C6   0x.... 0x....      BL       sprintf
   1070          	TEXT_SetText(Zpos, buf);
   \   000000CA   0xA904             ADD      R1,SP,#+16
   \   000000CC   0xF9B4 0x000E      LDRSH    R0,[R4, #+14]
   \   000000D0   0x.... 0x....      BL       TEXT_SetText
   1071          }
   \   000000D4   0xB00D             ADD      SP,SP,#+52
   \   000000D6   0xBDF0             POP      {R4-R7,PC}       ;; return
   1072          #else
   1073          void disp_print_time()
   1074          {
   1075          	char buf[30] = {0};
   1076          	
   1077          	TEXT_SetTextColor(printTimeLeft, gCfgItems.state_text_color);
   1078          	TEXT_SetBkColor(printTimeLeft,  gCfgItems.state_background_color);
   1079          	memset(buf, 0, sizeof(buf));
   1080          	sprintf(buf, "T: %d%d:%d%d:%d%d  Z:%0.2f", print_time.hours/10, print_time.hours%10, print_time.minutes/10, print_time.minutes%10,  print_time.seconds/10, print_time.seconds%10,current_position[Z_AXIS]);
   1081          	//sprintf(buf, "ok nums:  %d%d%d:%d%d", wan,qian, bai,shi,ge);
   1082          	
   1083          	TEXT_SetText(printTimeLeft, buf);
   1084          }
   1085          #endif

   \                                 In section .text, align 2, keep-with-next
   1086          void print_time_run()
   1087          {
   \                     print_time_run: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1088          	static uint8_t lastSec = 0;
   1089          	
   1090          	if(print_time.seconds >= 60)
   \   00000002   0x.... 0x....      LDR.W    R4,??DataTable36_12
   \   00000006   0xF994 0x0005      LDRSB    R0,[R4, #+5]
   \   0000000A   0x283C             CMP      R0,#+60
   \   0000000C   0xDB0C             BLT.N    ??print_time_run_0
   1091          	{
   1092          		print_time.seconds = 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x7160             STRB     R0,[R4, #+5]
   1093          		print_time.minutes++;
   \   00000012   0x7920             LDRB     R0,[R4, #+4]
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x7120             STRB     R0,[R4, #+4]
   1094          		if(print_time.minutes >= 60)
   \   00000018   0xB2C0             UXTB     R0,R0
   \   0000001A   0x283C             CMP      R0,#+60
   \   0000001C   0xDB04             BLT.N    ??print_time_run_0
   1095          		{
   1096          			print_time.minutes = 0;
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x7120             STRB     R0,[R4, #+4]
   1097          			print_time.hours++;
   \   00000022   0x8860             LDRH     R0,[R4, #+2]
   \   00000024   0x1C40             ADDS     R0,R0,#+1
   \   00000026   0x8060             STRH     R0,[R4, #+2]
   1098          			/*if(print_time.hours >= 24)
   1099          			{
   1100          				print_time.hours = 0;
   1101          				print_time.days++;
   1102          			}*/
   1103          		}
   1104          		
   1105          	}
   1106          	if(disp_state == PRINTING_UI)
   \                     ??print_time_run_0: (+1)
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable36_4
   \   0000002C   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000030   0x2803             CMP      R0,#+3
   \   00000032   0xD108             BNE.N    ??print_time_run_1
   1107          	{
   1108          		if(lastSec != print_time.seconds)
   \   00000034   0x7A20             LDRB     R0,[R4, #+8]
   \   00000036   0xF994 0x1005      LDRSB    R1,[R4, #+5]
   \   0000003A   0x4288             CMP      R0,R1
   \   0000003C   0xD001             BEQ.N    ??print_time_run_2
   1109          		{
   1110          			disp_print_time();
   \   0000003E   0x.... 0x....      BL       disp_print_time
   1111          		}
   1112          		lastSec =  print_time.seconds;
   \                     ??print_time_run_2: (+1)
   \   00000042   0x7960             LDRB     R0,[R4, #+5]
   \   00000044   0x7220             STRB     R0,[R4, #+8]
   1113          	}
   1114          }
   \                     ??print_time_run_1: (+1)
   \   00000046   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 4
   \                     print_time:
   \   00000000                      DS8 8
   \   00000008                      DS8 1

   \                                 In section .bss, align 4
   \                     buttonExt1:
   \   00000000                      DS8 24
   \   00000018                      DS8 24
   \   00000030                      DS8 24
   \   00000048                      DS8 24
   \   00000060                      DS8 24
   \   00000078                      DS8 24
   \   00000090                      DS8 24

   \                                 In section .bss, align 1
   \                     print_start_flg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     pause_resum:
   \   00000000                      DS8 1
   1115          #if defined(TFT35)

   \                                 In section .text, align 2, keep-with-next
   1116          void disp_sprayer_tem_printing()
   1117          {
   \                     disp_sprayer_tem_printing: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB08A             SUB      SP,SP,#+40
   1118          	char buf[30] = {0};
   \   00000006   0xA801             ADD      R0,SP,#+4
   \   00000008   0x2120             MOVS     R1,#+32
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
   1119          	volatile uint8_t i0 = 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xF88D 0x0000      STRB     R0,[SP, #+0]
   1120          	
   1121          	//if(gCfgItems.sprayerNum == 2)
   1122          	{		
   1123          		TEXT_SetBkColor(E1_Temp,0x000000);
   \   00000014   0x....             LDR.N    R4,??DataTable33
   \   00000016   0x4601             MOV      R1,R0
   \   00000018   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \   0000001C   0x.... 0x....      BL       TEXT_SetBkColor
   1124          		TEXT_SetTextColor(E1_Temp,gCfgItems.title_color);
   \   00000020   0x....             LDR.N    R5,??DataTable34_5
   \   00000022   0x68A9             LDR      R1,[R5, #+8]
   \   00000024   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \   00000028   0x.... 0x....      BL       TEXT_SetTextColor
   1125          		//TEXT_SetFont(E1_Temp, &FONT_TITLE);
   1126          		TEXT_SetBkColor(E2_Temp,0x000000);
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0xF9B4 0x0008      LDRSH    R0,[R4, #+8]
   \   00000032   0x.... 0x....      BL       TEXT_SetBkColor
   1127          		TEXT_SetTextColor(E2_Temp,gCfgItems.title_color);
   \   00000036   0x68A9             LDR      R1,[R5, #+8]
   \   00000038   0xF9B4 0x0008      LDRSH    R0,[R4, #+8]
   \   0000003C   0x.... 0x....      BL       TEXT_SetTextColor
   1128          		//TEXT_SetFont(E2_Temp, &FONT_TITLE);
   1129          
   1130          		memset(buf, 0, sizeof(buf));
   \   00000040   0x221E             MOVS     R2,#+30
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0xA801             ADD      R0,SP,#+4
   \   00000046   0x.... 0x....      BL       memset
   1131          		sprintf(buf, printing_menu.temp1, (int)thermalManager.current_temperature[0], (int)thermalManager.target_temperature[0]);
   \   0000004A   0x....             LDR.N    R5,??DataTable34_12
   \   0000004C   0x....             LDR.N    R6,??DataTable36_14
   \   0000004E   0x....             LDR.N    R7,??DataTable36_15
   \   00000050   0x683B             LDR      R3,[R7, #+0]
   \   00000052   0x4698             MOV      R8,R3
   \   00000054   0x6830             LDR      R0,[R6, #+0]
   \   00000056   0x.... 0x....      BL       __aeabi_f2iz
   \   0000005A   0x4602             MOV      R2,R0
   \   0000005C   0x4643             MOV      R3,R8
   \   0000005E   0x68A9             LDR      R1,[R5, #+8]
   \   00000060   0xA801             ADD      R0,SP,#+4
   \   00000062   0x.... 0x....      BL       sprintf
   1132          		TEXT_SetText(E1_Temp, buf);	
   \   00000066   0xA901             ADD      R1,SP,#+4
   \   00000068   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \   0000006C   0x.... 0x....      BL       TEXT_SetText
   1133          		
   1134          		memset(buf,0,sizeof(buf));
   \   00000070   0x221E             MOVS     R2,#+30
   \   00000072   0x2100             MOVS     R1,#+0
   \   00000074   0xA801             ADD      R0,SP,#+4
   \   00000076   0x.... 0x....      BL       memset
   1135          		sprintf(buf, printing_menu.temp2, (int)thermalManager.current_temperature[1], (int)thermalManager.target_temperature[1]);
   \   0000007A   0x687B             LDR      R3,[R7, #+4]
   \   0000007C   0x461F             MOV      R7,R3
   \   0000007E   0x6870             LDR      R0,[R6, #+4]
   \   00000080   0x.... 0x....      BL       __aeabi_f2iz
   \   00000084   0x4602             MOV      R2,R0
   \   00000086   0x463B             MOV      R3,R7
   \   00000088   0x68E9             LDR      R1,[R5, #+12]
   \   0000008A   0xA801             ADD      R0,SP,#+4
   \   0000008C   0x.... 0x....      BL       sprintf
   1136          		TEXT_SetText(E2_Temp, buf);
   \   00000090   0xA901             ADD      R1,SP,#+4
   \   00000092   0xF9B4 0x0008      LDRSH    R0,[R4, #+8]
   \   00000096   0x.... 0x....      BL       TEXT_SetText
   1137          	}
   1138          	#if 0
   1139          	else
   1140          	{
   1141          		TEXT_SetBkColor(E1_Temp,0x000000);
   1142          		TEXT_SetTextColor(E1_Temp,gCfgItems.title_color);
   1143          		//TEXT_SetFont(E1_Temp, &FONT_TITLE);
   1144          
   1145          		memset(buf, 0, sizeof(buf));
   1146          		sprintf(buf, printing_menu.temp1, (int)thermalManager.current_temperature[gCfgItems.curSprayerChoose],  (int)thermalManager.target_temperature[gCfgItems.curSprayerChoose]);
   1147          		TEXT_SetText(E1_Temp, buf);
   1148          	}
   1149          	#endif
   1150          }
   \   0000009A   0xB00A             ADD      SP,SP,#+40
   \   0000009C   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   1151          #else
   1152          void disp_sprayer_tem_printing()
   1153          {
   1154          	char buf[30] = {0};
   1155          	volatile uint8_t i0 = 0;
   1156          	volatile uint8_t extruder_bak;
   1157          	
   1158          	TEXT_SetTextColor(sprayTem1, gCfgItems.printingstate_word_background_color);
   1159          	TEXT_SetBkColor(sprayTem1,  gCfgItems.printingstate_word_color);
   1160          	TEXT_SetTextColor(sprayTem2, gCfgItems.printingstate_word_background_color);
   1161          	TEXT_SetBkColor(sprayTem2,  gCfgItems.printingstate_word_color);
   1162          
   1163          	if(mksCfg.extruders == 2)
   1164          	{
   1165          		GUI_SetBkColor(gCfgItems.background_color);
   1166          
   1167          		memset(buf, ' ', sizeof(buf));
   1168          		GUI_DispStringAt(buf, 10, titleHeight + imgHeight - 20);
   1169                  if((thermalManager.current_temperature[0] - ((int)thermalManager.current_temperature[0]))>=0.5)
   1170          		{
   1171          			thermalManager.current_temperature[0] += 1;
   1172          		}
   1173          		sprintf(buf, "%3d/%d", (int)thermalManager.current_temperature[0], (int)thermalManager.target_temperature[0]);
   1174                  GUI_DispStringAt(buf, 10, titleHeight + imgHeight - 20);	
   1175          
   1176              
   1177          		memset(buf,' ',sizeof(buf));
   1178          		GUI_DispStringAt(buf, 10+78, titleHeight + imgHeight - 20);
   1179          		if((thermalManager.current_temperature[1] - ((int)thermalManager.current_temperature[1]))>=0.5)
   1180          		{
   1181          			thermalManager.current_temperature[1] += 1;
   1182          		}
   1183          		sprintf(buf, "%3d/%d", (int)thermalManager.current_temperature[1], (int)thermalManager.target_temperature[1]);
   1184          		GUI_DispStringAt(buf, 10+78, titleHeight + imgHeight - 20);	
   1185             
   1186          	}
   1187          	else
   1188          	{
   1189          		GUI_SetBkColor(gCfgItems.background_color);
   1190          		memset(buf, ' ', sizeof(buf));
   1191          		GUI_DispStringAt(buf, 10, titleHeight + imgHeight - 20);
   1192          		if((thermalManager.current_temperature[0] - ((int)thermalManager.current_temperature[0]))>=0.5)
   1193          		{
   1194          			thermalManager.current_temperature[0] += 1;
   1195          		}
   1196          		sprintf(buf, "%3d/%d", (int)thermalManager.current_temperature[0], (int)thermalManager.target_temperature[0]);
   1197          		GUI_DispStringAt(buf, 10, titleHeight + imgHeight - 20);
   1198          	}
   1199          }
   1200          #endif
   1201          
   1202          static int8_t fan_dir = 0;
                               ^
Warning[Pe177]: variable "fan_dir" was declared but never referenced

  	sprintf(buf, "%d%d:%d%d:%d%d", print_time.hours/10, print_time.hours%10, print_time.minutes/10, print_time.minutes%10,  print_time.seconds/10, print_time.seconds%10);
  	^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_printing.cpp",1061  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement
   1203          
   1204          #if VERSION_WITH_PIC
   1205          

   \                                 In section .text, align 2, keep-with-next
   1206          void disp_fan_move_printing()
   1207          {
   1208          	#if !defined(TFT35)
   1209          	if(gCfgItems.fanOnoff == 1)
   1210          	{
   1211          		fan_dir++;
   1212          		if(fan_dir%2)
   1213          		{
   1214          			BUTTON_SetBmpFileName(buttonFanstate.btnHandle, "bmp_fan_move.bin",1);
   1215          			BUTTON_SetBitmapEx(buttonFanstate.btnHandle, 0, &bmp_struct, 0, 0);	
   1216          		}
   1217          		else
   1218          		{
   1219          			BUTTON_SetBmpFileName(buttonFanstate.btnHandle, "bmp_fan_no_words.bin",1);
   1220          			BUTTON_SetBitmapEx(buttonFanstate.btnHandle, 0, &bmp_struct, 0, 0);	
   1221          		}
   1222          	}
   1223          	#endif
   1224          	disp_fan_speed_printing();
   \                     disp_fan_move_printing: (+1)
   \   00000000   0x....             B.N      disp_fan_speed_printing
   1225          }
   1226          #endif
   1227          #if defined(TFT35)

   \                                 In section .text, align 2, keep-with-next
   1228          void disp_bed_temp_printing()
   1229          {
   \                     disp_bed_temp_printing: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
   1230          	char buf[30] = {0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2120             MOVS     R1,#+32
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
   1231          
   1232          	//if(gCfgItems.custom_bed_flag == 1)
   1233          	{
   1234          		TEXT_SetBkColor(Bed_Temp,0x000000);
   \   0000000C   0x....             LDR.N    R4,??DataTable33
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0xF9B4 0x000C      LDRSH    R0,[R4, #+12]
   \   00000014   0x.... 0x....      BL       TEXT_SetBkColor
   1235          		TEXT_SetTextColor(Bed_Temp,gCfgItems.title_color);
   \   00000018   0x....             LDR.N    R0,??DataTable34_5
   \   0000001A   0x6881             LDR      R1,[R0, #+8]
   \   0000001C   0xF9B4 0x000C      LDRSH    R0,[R4, #+12]
   \   00000020   0x.... 0x....      BL       TEXT_SetTextColor
   1236          		//TEXT_SetFont(Bed_Temp, &FONT_TITLE);
   1237          
   1238          		
   1239          		memset(buf, 0, sizeof(buf));
   \   00000024   0x221E             MOVS     R2,#+30
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0xA800             ADD      R0,SP,#+0
   \   0000002A   0x.... 0x....      BL       memset
   1240          		sprintf(buf, printing_menu.bed_temp, (int)thermalManager.current_temperature_bed,  (int)thermalManager.target_temperature_bed);
   \   0000002E   0x....             LDR.N    R0,??DataTable36_16
   \   00000030   0xF9B0 0x3000      LDRSH    R3,[R0, #+0]
   \   00000034   0x461D             MOV      R5,R3
   \   00000036   0x....             LDR.N    R0,??DataTable36_17
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x.... 0x....      BL       __aeabi_f2iz
   \   0000003E   0x4602             MOV      R2,R0
   \   00000040   0x462B             MOV      R3,R5
   \   00000042   0x....             LDR.N    R0,??DataTable34_12
   \   00000044   0x6901             LDR      R1,[R0, #+16]
   \   00000046   0xA800             ADD      R0,SP,#+0
   \   00000048   0x.... 0x....      BL       sprintf
   1241          		TEXT_SetText(Bed_Temp, buf);
   \   0000004C   0xA900             ADD      R1,SP,#+0
   \   0000004E   0xF9B4 0x000C      LDRSH    R0,[R4, #+12]
   \   00000052   0x.... 0x....      BL       TEXT_SetText
   1242          	}
   1243          
   1244          }
   \   00000056   0xB009             ADD      SP,SP,#+36
   \   00000058   0xBD30             POP      {R4,R5,PC}       ;; return
   1245          #else
   1246          void disp_bed_temp_printing()
   1247          {
   1248          	char buf[30] = {0};
   1249          	volatile uint8_t i1 = 0;	
   1250          	
   1251          	TEXT_SetTextColor(BedTem, gCfgItems.printingstate_word_background_color);
   1252          	TEXT_SetBkColor(BedTem,  gCfgItems.printingstate_word_color);
   1253          	GUI_SetBkColor(gCfgItems.background_color);
   1254          	if(mksCfg.has_temp_bed == 1)
   1255          	{
   1256          		memset(buf, ' ', sizeof(buf));
   1257          		GUI_DispStringAt(buf, 165, titleHeight + imgHeight - 20);
   1258          		sprintf(buf, "%3d/%d", (int)thermalManager.current_temperature_bed, (int)thermalManager.target_temperature_bed);
   1259          		GUI_DispStringAt(buf, 165, titleHeight + imgHeight - 20);
   1260          	}
   1261          }
   1262          #endif
   1263          
   1264          #if defined(TFT35)

   \                                 In section .text, align 2, keep-with-next
   1265          void disp_fan_speed_printing()
   1266          {
   \                     disp_fan_speed_printing: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB088             SUB      SP,SP,#+32
   1267          	char buf[30] = {0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2120             MOVS     R1,#+32
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
   1268          	
   1269          	TEXT_SetBkColor(Fan_Pwm,0x000000);
   \   0000000C   0x....             LDR.N    R4,??DataTable33
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0xF9B4 0x000A      LDRSH    R0,[R4, #+10]
   \   00000014   0x.... 0x....      BL       TEXT_SetBkColor
   1270          	TEXT_SetTextColor(Fan_Pwm,gCfgItems.title_color);
   \   00000018   0x....             LDR.N    R0,??DataTable34_5
   \   0000001A   0x6881             LDR      R1,[R0, #+8]
   \   0000001C   0xF9B4 0x000A      LDRSH    R0,[R4, #+10]
   \   00000020   0x.... 0x....      BL       TEXT_SetTextColor
   1271          	//TEXT_SetFont(Fan_Pwm, &FONT_TITLE);
   1272          
   1273          
   1274          	memset(buf, 0, sizeof(buf));
   \   00000024   0x221E             MOVS     R2,#+30
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0xA800             ADD      R0,SP,#+0
   \   0000002A   0x.... 0x....      BL       memset
   1275          	//sprintf(buf, "%3d", gCfgItems.fanSpeed);
   1276          	sprintf(buf, "%3d", fanSpeeds[0]);
   \   0000002E   0x....             LDR.N    R0,??DataTable36_18
   \   00000030   0x6802             LDR      R2,[R0, #+0]
   \   00000032   0x....             ADR.N    R1,??DataTable36  ;; "%3d"
   \   00000034   0xA800             ADD      R0,SP,#+0
   \   00000036   0x.... 0x....      BL       sprintf
   1277          	TEXT_SetText(Fan_Pwm, buf);
   \   0000003A   0xA900             ADD      R1,SP,#+0
   \   0000003C   0xF9B4 0x000A      LDRSH    R0,[R4, #+10]
   \   00000040   0x.... 0x....      BL       TEXT_SetText
   1278          }
   \   00000044   0xB008             ADD      SP,SP,#+32
   \   00000046   0xBD10             POP      {R4,PC}          ;; return
   1279          #else
   1280          void disp_fan_speed_printing()
   1281          {
   1282          	char buf[30] = {0};
   1283          	volatile uint8_t i2 = 0;
   1284          	
   1285          	TEXT_SetTextColor(fanSpeed, gCfgItems.printingstate_word_background_color);
   1286          	TEXT_SetBkColor(fanSpeed,  gCfgItems.printingstate_word_color);
   1287              GUI_SetBkColor(gCfgItems.background_color);
   1288          
   1289          	memset(buf, ' ', sizeof(buf));
   1290          	GUI_DispStringAt(buf, 255, titleHeight + imgHeight - 20);
   1291          
   1292          	sprintf(buf, "%3d", fanSpeeds[0]);
   1293          	GUI_DispStringAt(buf, 255, titleHeight + imgHeight - 20);
   1294          }
   1295          #endif

   \                                 In section .text, align 2, keep-with-next
   1296          void disp_printing_speed()
   1297          {
   \                     disp_printing_speed: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
   1298          	char buf[30] = {0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2120             MOVS     R1,#+32
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
   1299          	
   1300          	TEXT_SetBkColor(Printing_speed,0x000000);
   \   0000000C   0x....             LDR.N    R4,??DataTable36_19
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0xF9B4 0x0058      LDRSH    R0,[R4, #+88]
   \   00000014   0x.... 0x....      BL       TEXT_SetBkColor
   1301          	TEXT_SetTextColor(Printing_speed,gCfgItems.title_color);
   \   00000018   0x....             LDR.N    R5,??DataTable36_5
   \   0000001A   0x68A9             LDR      R1,[R5, #+8]
   \   0000001C   0xF9B4 0x0058      LDRSH    R0,[R4, #+88]
   \   00000020   0x.... 0x....      BL       TEXT_SetTextColor
   1302          	//TEXT_SetFont(Printing_speed, &FONT_TITLE);
   1303          
   1304          
   1305          	memset(buf, 0, sizeof(buf));
   \   00000024   0x221E             MOVS     R2,#+30
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0xA800             ADD      R0,SP,#+0
   \   0000002A   0x.... 0x....      BL       memset
   1306          	sprintf(buf, "%3d%%", gCfgItems.printSpeed);
   \   0000002E   0xF8B5 0x20A4      LDRH     R2,[R5, #+164]
   \   00000032   0x.... 0x....      ADR.W    R1,`?<Constant "%3d%%">`
   \   00000036   0xA800             ADD      R0,SP,#+0
   \   00000038   0x.... 0x....      BL       sprintf
   1307          	TEXT_SetText(Printing_speed, buf);
   \   0000003C   0xA900             ADD      R1,SP,#+0
   \   0000003E   0xF9B4 0x0058      LDRSH    R0,[R4, #+88]
   \   00000042   0x.... 0x....      BL       TEXT_SetText
   1308          }
   \   00000046   0xB009             ADD      SP,SP,#+36
   \   00000048   0xBD30             POP      {R4,R5,PC}       ;; return
   1309          

   \                                 In section .text, align 2, keep-with-next
   1310          void setProBarValue(int added)
   1311          {
   1312          	if(added <= 0)
   1313          		return;
   1314          #if 0	
   1315          	gCurFileState.totalSend += added;
   1316          	if(disp_state == PRINTING_UI)
   1317          	{
   1318          		PROGBAR_SetValue(printingBar, gCurFileState.totalSend * 100 / gCurFileState.fileSize );
   1319          	}
   1320          #endif
   1321          }
   \                     setProBarValue: (+1)
   \   00000000   0x4770             BX       LR               ;; return
   1322          
   1323          
   1324          #if 0
   1325          void setProBarRate(int rate)
   1326          {
   1327          	if(rate <= 0)
   1328          		return;
   1329          
   1330          	if((mksReprint.mks_printer_state != MKS_IDLE)  &&  (rate == 100))
   1331          	{	
   1332          		rate = 99;
   1333          	}
   1334          
   1335          	gCurFileState.totalSend = rate;
   1336          
   1337          	
   1338          	if(disp_state == PRINTING_UI)
   1339          	{
   1340          		PROGBAR_SetValue(printingBar, rate );
   1341          
   1342          		if((mksReprint.mks_printer_state == MKS_IDLE)  &&  (rate == 100) )
   1343          		{
   1344          			//memset((char *)gCfgItems.z_display_pos,0,sizeof(gCfgItems.z_display_pos));
   1345          			if(once_flag == 0)
   1346          			{					
   1347          				stop_print_time();				
   1348          				#if VERSION_WITH_PIC	
   1349          				#if defined(TFT70)
   1350          				BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_return.bin",1);
   1351          				#elif defined(TFT35)
   1352                          #if defined(MKS_ROBIN_MINI)||defined(MKS_ROBIN_NANO)
   1353                          BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_return.bin",1);
   1354                          #else
   1355          				BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_back.bin",1);
   1356                          #endif
   1357          				#endif
   1358          				BUTTON_SetBitmapEx(buttonOperat.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   1359          				BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED,gCfgItems.back_btn_color);
   1360          				BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.back_btn_color);
   1361          				#endif
   1362          				once_flag = 1;
   1363          			}					
   1364          		}
   1365          		
   1366          	}
   1367          	
   1368          }
   1369          #else

   \                                 In section .text, align 2, keep-with-next
   1370          void setProBarRate()
   1371          {
   \                     setProBarRate: (+1)
   \   00000000   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   1372          	int rate;
   1373          	volatile long long rate_tmp_r;
   1374          	
   1375          	if(from_flash_pic != 1)
   \   00000004   0x....             LDR.N    R2,??DataTable36_20
   \   00000006   0xF202 0x405C      ADDW     R0,R2,#+1116
   \   0000000A   0x6840             LDR      R0,[R0, #+4]
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0xF8D2 0x245C      LDR      R2,[R2, #+1116]
   \   00000012   0x2464             MOVS     R4,#+100
   \   00000014   0x....             LDR.N    R3,??DataTable36_21
   \   00000016   0x781B             LDRB     R3,[R3, #+0]
   \   00000018   0x2B01             CMP      R3,#+1
   \   0000001A   0xD00A             BEQ.N    ??setProBarRate_0
   1376          	{
   1377          		rate_tmp_r =(long long)card.sdpos * 100;
   \   0000001C   0xFBA4 0x6700      UMULL    R6,R7,R4,R0
   \   00000020   0xE9CD 0x6700      STRD     R6,R7,[SP, #+0]
   1378          		rate = rate_tmp_r / card.filesize;
   \   00000024   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   00000028   0x2300             MOVS     R3,#+0
   \   0000002A   0x.... 0x....      BL       __aeabi_ldivmod
   \   0000002E   0x4604             MOV      R4,R0
   \   00000030   0xE014             B.N      ??setProBarRate_1
   1379          	}
   1380          	else
   1381          	{
   1382          		rate_tmp_r =(long long)card.sdpos;
   \                     ??setProBarRate_0: (+1)
   \   00000032   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   1383          		rate = (rate_tmp_r-(PREVIEW_SIZE+To_pre_view))* 100 / (card.filesize-(PREVIEW_SIZE+To_pre_view));
   \   00000036   0x....             LDR.N    R0,??DataTable36_22
   \   00000038   0x6803             LDR      R3,[R0, #+0]
   \   0000003A   0xE9DD 0x6700      LDRD     R6,R7,[SP, #+0]
   \   0000003E   0x....             LDR.N    R0,??DataTable36_23  ;; 0x317e0
   \   00000040   0x18C0             ADDS     R0,R0,R3
   \   00000042   0x1A36             SUBS     R6,R6,R0
   \   00000044   0x418F             SBCS     R7,R7,R1
   \   00000046   0xFBA4 0x0106      UMULL    R0,R1,R4,R6
   \   0000004A   0xFB04 0x1107      MLA      R1,R4,R7,R1
   \   0000004E   0x1AD2             SUBS     R2,R2,R3
   \   00000050   0x....             LDR.N    R3,??DataTable36_24  ;; 0xfffce820
   \   00000052   0x189A             ADDS     R2,R3,R2
   \   00000054   0x2300             MOVS     R3,#+0
   \   00000056   0x.... 0x....      BL       __aeabi_ldivmod
   \   0000005A   0x4604             MOV      R4,R0
   1384          	}
   1385          	gCurFileState.totalSend = rate;
   \                     ??setProBarRate_1: (+1)
   \   0000005C   0x....             LDR.N    R0,??DataTable36_25
   \   0000005E   0xF8C0 0x4238      STR      R4,[R0, #+568]
   1386          	
   1387          	if(rate <= 0)
   \   00000062   0x2C01             CMP      R4,#+1
   \   00000064   0xF2C0 0x8085      BLT.W    ??setProBarRate_2
   1388          		return;
   1389          
   1390          	if(disp_state == PRINTING_UI)
   \   00000068   0x....             LDR.N    R0,??DataTable36_4
   \   0000006A   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000006E   0x2803             CMP      R0,#+3
   \   00000070   0xF040 0x807F      BNE.W    ??setProBarRate_2
   1391          	{
   1392          		PROGBAR_SetValue(printingBar, rate );
   \   00000074   0x....             LDR.N    R5,??DataTable36_19
   \   00000076   0x4621             MOV      R1,R4
   \   00000078   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   0000007C   0x.... 0x....      BL       PROGBAR_SetValue
   1393          
   1394          		if((mksReprint.mks_printer_state == MKS_IDLE)  &&  (rate == 100) )
   \   00000080   0x....             LDR.N    R0,??DataTable36_26
   \   00000082   0xF890 0x00B4      LDRB     R0,[R0, #+180]
   \   00000086   0x28A6             CMP      R0,#+166
   \   00000088   0xD173             BNE.N    ??setProBarRate_2
   \   0000008A   0x2C64             CMP      R4,#+100
   \   0000008C   0xD171             BNE.N    ??setProBarRate_2
   1395          		{
   1396          			//memset((char *)gCfgItems.z_display_pos,0,sizeof(gCfgItems.z_display_pos));
   1397          			if(once_flag == 0)
   \   0000008E   0x6DE8             LDR      R0,[R5, #+92]
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xD16E             BNE.N    ??setProBarRate_2
   1398          			{					
   1399          				stop_print_time();				
   \   00000094   0x.... 0x....      BL       stop_print_time
   1400          				#if VERSION_WITH_PIC	
   1401          				#if defined(TFT70)
   1402          				BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_return.bin",1);
   1403          				BUTTON_SetBitmapEx(buttonOperat.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   1404          				BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED,gCfgItems.back_btn_color);
   1405          				BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.back_btn_color);				
   1406          				#elif defined(TFT35)
   1407                          #if defined(MKS_ROBIN_MINI)||defined(MKS_ROBIN_NANO)
   1408          				BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_printing_back.bin",1);
   \   00000098   0x2201             MOVS     R2,#+1
   \   0000009A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_printing_back.bin">`
   \   0000009E   0xF9B5 0x0040      LDRSH    R0,[R5, #+64]
   \   000000A2   0x.... 0x....      BL       BUTTON_SetBmpFileName
   1409          					BUTTON_SetBitmapEx(buttonOperat.btnHandle, 0, &bmp_struct_150, BMP_PIC_X, BMP_PIC_Y);
   \   000000A6   0x....             LDR.N    R4,??DataTable36_27
   \   000000A8   0x....             LDR.N    R6,??DataTable36_28
   \   000000AA   0xF996 0x0000      LDRSB    R0,[R6, #+0]
   \   000000AE   0x9000             STR      R0,[SP, #+0]
   \   000000B0   0xF994 0x3000      LDRSB    R3,[R4, #+0]
   \   000000B4   0x....             LDR.N    R2,??DataTable36_29
   \   000000B6   0x2100             MOVS     R1,#+0
   \   000000B8   0xF9B5 0x0040      LDRSH    R0,[R5, #+64]
   \   000000BC   0x.... 0x....      BL       BUTTON_SetBitmapEx
   1410          					BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED,gCfgItems.btn_color);
   \   000000C0   0x....             LDR.N    R7,??DataTable36_5
   \   000000C2   0x6A7A             LDR      R2,[R7, #+36]
   \   000000C4   0x2101             MOVS     R1,#+1
   \   000000C6   0xF9B5 0x0040      LDRSH    R0,[R5, #+64]
   \   000000CA   0x.... 0x....      BL       BUTTON_SetBkColor
   1411          					BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.btn_color);
   \   000000CE   0x6A7A             LDR      R2,[R7, #+36]
   \   000000D0   0x2100             MOVS     R1,#+0
   \   000000D2   0xF9B5 0x0040      LDRSH    R0,[R5, #+64]
   \   000000D6   0x.... 0x....      BL       BUTTON_SetBkColor
   1412          	                BUTTON_SetTextColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED,gCfgItems.btn_textcolor);
   \   000000DA   0xF107 0x0824      ADD      R8,R7,#+36
   \   000000DE   0xF8D8 0x2004      LDR      R2,[R8, #+4]
   \   000000E2   0x2101             MOVS     R1,#+1
   \   000000E4   0xF9B5 0x0040      LDRSH    R0,[R5, #+64]
   \   000000E8   0x.... 0x....      BL       BUTTON_SetTextColor
   1413          	                BUTTON_SetTextColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.btn_textcolor);
   \   000000EC   0xF8D8 0x2004      LDR      R2,[R8, #+4]
   \   000000F0   0x2100             MOVS     R1,#+0
   \   000000F2   0xF9B5 0x0040      LDRSH    R0,[R5, #+64]
   \   000000F6   0x.... 0x....      BL       BUTTON_SetTextColor
   1414          
   1415          				BUTTON_SetBmpFileName(buttonPause.btnHandle,NULL,1);
   \   000000FA   0x2201             MOVS     R2,#+1
   \   000000FC   0x2100             MOVS     R1,#+0
   \   000000FE   0xF9B5 0x0010      LDRSH    R0,[R5, #+16]
   \   00000102   0x.... 0x....      BL       BUTTON_SetBmpFileName
   1416          				BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_0_0, BMP_PIC_X, BMP_PIC_Y);
   \   00000106   0xF996 0x0000      LDRSB    R0,[R6, #+0]
   \   0000010A   0x9000             STR      R0,[SP, #+0]
   \   0000010C   0xF994 0x3000      LDRSB    R3,[R4, #+0]
   \   00000110   0xF105 0x0260      ADD      R2,R5,#+96
   \   00000114   0x2100             MOVS     R1,#+0
   \   00000116   0xF9B5 0x0010      LDRSH    R0,[R5, #+16]
   \   0000011A   0x.... 0x....      BL       BUTTON_SetBitmapEx
   1417          				BUTTON_SetText(buttonPause.btnHandle,"");
   \   0000011E   0x.... 0x....      ADR.W    R8,??DataTable36_2  ;; ""
   \   00000122   0x4641             MOV      R1,R8
   \   00000124   0xF9B5 0x0010      LDRSH    R0,[R5, #+16]
   \   00000128   0x.... 0x....      BL       BUTTON_SetText
   1418          				
   1419          
   1420          				BUTTON_SetBmpFileName(buttonStop.btnHandle,NULL,1);
   \   0000012C   0x2201             MOVS     R2,#+1
   \   0000012E   0x2100             MOVS     R1,#+0
   \   00000130   0xF9B5 0x0028      LDRSH    R0,[R5, #+40]
   \   00000134   0x.... 0x....      BL       BUTTON_SetBmpFileName
   1421          				BUTTON_SetBitmapEx(buttonStop.btnHandle, 0, &bmp_struct_0_0, BMP_PIC_X, BMP_PIC_Y);
   \   00000138   0xF996 0x0000      LDRSB    R0,[R6, #+0]
   \   0000013C   0x9000             STR      R0,[SP, #+0]
   \   0000013E   0xF994 0x3000      LDRSB    R3,[R4, #+0]
   \   00000142   0xF105 0x0260      ADD      R2,R5,#+96
   \   00000146   0x2100             MOVS     R1,#+0
   \   00000148   0xF9B5 0x0028      LDRSH    R0,[R5, #+40]
   \   0000014C   0x.... 0x....      BL       BUTTON_SetBitmapEx
   1422          				BUTTON_SetText(buttonStop.btnHandle,"");
   \   00000150   0x4641             MOV      R1,R8
   \   00000152   0xF9B5 0x0028      LDRSH    R0,[R5, #+40]
   \   00000156   0x.... 0x....      BL       BUTTON_SetText
   1423                          #else
   1424          				BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_printing_back.bin",1);
   1425          				BUTTON_SetBitmapEx(buttonOperat.btnHandle, 0, &bmp_struct_150, BMP_PIC_X, BMP_PIC_Y);
   1426          				BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED,gCfgItems.back_btn_color);
   1427          				BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.back_btn_textcolor);
   1428                          #endif
   1429          				if(gCfgItems.multiple_language != 0)
   \   0000015A   0xF897 0x01BF      LDRB     R0,[R7, #+447]
   \   0000015E   0x2800             CMP      R0,#+0
   \   00000160   0xD005             BEQ.N    ??setProBarRate_3
   1430          				{
   1431          					BUTTON_SetText(buttonOperat.btnHandle, common_menu.text_back);	
   \   00000162   0x....             LDR.N    R0,??DataTable36_11
   \   00000164   0x6801             LDR      R1,[R0, #+0]
   \   00000166   0xF9B5 0x0040      LDRSH    R0,[R5, #+64]
   \   0000016A   0x.... 0x....      BL       BUTTON_SetText
   1432          				}				
   1433          				#endif
   1434          
   1435          				#endif
   1436          				once_flag = 1;
   \                     ??setProBarRate_3: (+1)
   \   0000016E   0x2001             MOVS     R0,#+1
   \   00000170   0x65E8             STR      R0,[R5, #+92]
   1437          			}					
   1438          		}
   1439          		
   1440          	}	
   1441          }
   \                     ??setProBarRate_2: (+1)
   \   00000172   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
   1442          
   1443          #endif

   \                                 In section .text, align 2, keep-with-next
   1444          void Clear_printing()
   1445          {
   \                     Clear_printing: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1446          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable36_5
   \   00000004   0x6840             LDR      R0,[R0, #+4]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
   1447          	if(WM_IsWindow(hPrintingWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable36_19
   \   0000000C   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD005             BEQ.N    ??Clear_printing_0
   1448          	{
   1449          		WM_DeleteWindow(hPrintingWnd);
   \   00000018   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000001C   0xE8BD 0x4010      POP      {R4,LR}
   \   00000020   0x.... 0x....      B.W      WM_DeleteWindow
   1450          		//GUI_Exec();
   1451          	}
   1452          	
   1453          	//GUI_Clear();
   1454          }
   \                     ??Clear_printing_0: (+1)
   \   00000024   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_resume.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_resume.bin"
   \              0x70 0x5F    
   \              0x72 0x65    
   \              0x73 0x75    
   \              0x6D 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_pause.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_pause.bin"
   \              0x70 0x5F    
   \              0x70 0x61    
   \              0x75 0x73    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   0x........         DC32     hPrintingWnd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34:
   \   00000000   0x........         DC32     gcode_preview_over

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_1:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_2:
   \   00000000   0x........         DC32     mksReprint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_3:
   \   00000000   0x........         DC32     gCurFileState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_4:
   \   00000000   0x........         DC32     srcfp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_5:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_6:
   \   00000000   0x........         DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_7:
   \   00000000   0x........         DC32     active_extruder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_8:
   \   00000000   0x........         DC32     feedrate_mm_s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_9:
   \   00000000   0x........         DC32     card

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_10:
   \   00000000   0x........         DC32     print_job_timer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_11:
   \   00000000   0x........         DC32     bmp_struct_150

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_12:
   \   00000000   0x........         DC32     printing_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_13:
   \   00000000   0x........         DC32     pause_from_high_level

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_14:
   \   00000000   0x42210110         DC32     0x42210110

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_15:
   \   00000000   0x42230118         DC32     0x42230118

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_16:
   \   00000000   0x........         DC32     pause_resum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36:
   \   00000000   0x25 0x33          DC8      "%3d"
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_1:
   \   00000000   0x........         DC32     gCfgItems+0x1BD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_2:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_3:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_4:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_5:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_6:
   \   00000000   0x........         DC32     GUI_FontHZ16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_7:
   \   00000000   0x........         DC32     GUI_FontHZ_fontHz14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_8:
   \   00000000   0x........         DC32     _Z13cbPrintingWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_9:
   \   00000000   0x........         DC32     buttonExt1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_10:
   \   00000000   0x........         DC32     bmp_struct_50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_11:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_12:
   \   00000000   0x........         DC32     print_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_13:
   \   00000000   0x........         DC32     current_position

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_14:
   \   00000000   0x........         DC32     _ZN11Temperature19current_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_15:
   \   00000000   0x........         DC32     _ZN11Temperature18target_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_16:
   \   00000000   0x........         DC32     _ZN11Temperature22target_temperature_bedE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_17:
   \   00000000   0x........         DC32     _ZN11Temperature23current_temperature_bedE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_18:
   \   00000000   0x........         DC32     fanSpeeds

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_19:
   \   00000000   0x........         DC32     hPrintingWnd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_20:
   \   00000000   0x........         DC32     card

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_21:
   \   00000000   0x........         DC32     from_flash_pic

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_22:
   \   00000000   0x........         DC32     To_pre_view

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_23:
   \   00000000   0x000317E0         DC32     0x317e0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_24:
   \   00000000   0xFFFCE820         DC32     0xfffce820

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_25:
   \   00000000   0x........         DC32     gCurFileState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_26:
   \   00000000   0x........         DC32     mksReprint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_27:
   \   00000000   0x........         DC32     BMP_PIC_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_28:
   \   00000000   0x........         DC32     BMP_PIC_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_29:
   \   00000000   0x........         DC32     bmp_struct_150

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_time_state.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_time_state.bin"
   \              0x70 0x5F    
   \              0x74 0x69    
   \              0x6D 0x65    
   \              0x5F 0x73    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_zpos_state.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_zpos_state.bin"
   \              0x70 0x5F    
   \              0x7A 0x70    
   \              0x6F 0x73    
   \              0x5F 0x73    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_ext1_state.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_ext1_state.bin"
   \              0x70 0x5F    
   \              0x65 0x78    
   \              0x74 0x31    
   \              0x5F 0x73    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_ext2_state.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_ext2_state.bin"
   \              0x70 0x5F    
   \              0x65 0x78    
   \              0x74 0x32    
   \              0x5F 0x73    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_bed_state.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_bed_state.bin"
   \              0x70 0x5F    
   \              0x62 0x65    
   \              0x64 0x5F    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_fan_state.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_fan_state.bin"
   \              0x70 0x5F    
   \              0x66 0x61    
   \              0x6E 0x5F    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_speed_state.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_speed_state.bin"
   \              0x70 0x5F    
   \              0x73 0x70    
   \              0x65 0x65    
   \              0x64 0x5F    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_printing_back.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_printing_back.bin"
   \              0x70 0x5F    
   \              0x70 0x72    
   \              0x69 0x6E    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x5F 0x62    
   \              0x61 0x63    
   \              0x6B 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_stop.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_stop.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x6F 0x70    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_operate.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_operate.bin"
   \              0x70 0x5F    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x61 0x74    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%d%d:%d%d:%d%d">`:
   \   00000000   0x25 0x64          DC8 "%d%d:%d%d:%d%d"
   \              0x25 0x64    
   \              0x3A 0x25    
   \              0x64 0x25    
   \              0x64 0x3A    
   \              0x25 0x64    
   \              0x25 0x64    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%.3f">`:
   \   00000000   0x25 0x2E          DC8 "%.3f"
   \              0x33 0x66    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%3d%%">`:
   \   00000000   0x25 0x33          DC8 "%3d%%"
   \              0x64 0x25    
   \              0x25 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant " ">`:
   \   00000000   0x20 0x00          DC8 " "

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>_1`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>_2`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>_3`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "%3d">`:
   \   00000000   0x25 0x33          DC8 "%3d"
   \              0x64 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>_4`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 1, keep-with-next
   \                     `?<Constant "">`:
   \   00000000   0x00               DC8 ""

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clear_printing
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      32   cbPrintingWin(WM_MESSAGE *)
        32   -> BUTTON_SetBitmapEx
        32   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
        32   -> CardReader::pauseSDPrint()
        32   -> Clear_printing
        32   -> Stopwatch::pause()
         0   -> WM_DefaultProc
        32   -> __aeabi_f2iz
         0   -> draw_dialog
         0   -> draw_operate
         0   -> draw_ready_print
        32   -> f_close
        32   -> reset_file_info
        32   -> start_print_time
        32   -> stop_print_time
      48   disp_bed_temp_printing
        48   -> TEXT_SetBkColor
        48   -> TEXT_SetText
        48   -> TEXT_SetTextColor
        48   -> __aeabi_f2iz
        48   -> __aeabi_memclr4
        48   -> memset
        48   -> sprintf
       0   disp_fan_move_printing
         0   -> disp_fan_speed_printing
      40   disp_fan_speed_printing
        40   -> TEXT_SetBkColor
        40   -> TEXT_SetText
        40   -> TEXT_SetTextColor
        40   -> __aeabi_memclr4
        40   -> memset
        40   -> sprintf
      72   disp_print_time
        72   -> TEXT_SetBkColor
        72   -> TEXT_SetText
        72   -> TEXT_SetTextColor
        72   -> __aeabi_f2d
        72   -> __aeabi_memclr4
        72   -> memset
        72   -> sprintf
      48   disp_printing_speed
        48   -> TEXT_SetBkColor
        48   -> TEXT_SetText
        48   -> TEXT_SetTextColor
        48   -> __aeabi_memclr4
        48   -> memset
        48   -> sprintf
      64   disp_sprayer_tem_printing
        64   -> TEXT_SetBkColor
        64   -> TEXT_SetText
        64   -> TEXT_SetTextColor
        64   -> __aeabi_f2iz
        64   -> __aeabi_memclr4
        64   -> memset
        64   -> sprintf
      56   draw_printing
        56   -> BUTTON_CreateEx
        56   -> BUTTON_SetBitmapEx
        56   -> BUTTON_SetBkColor
        56   -> BUTTON_SetBmpFileName
        56   -> BUTTON_SetText
        56   -> BUTTON_SetTextAlign
        56   -> BUTTON_SetTextColor
        56   -> GUI_Clear
        56   -> GUI_DispStringAt
        56   -> GUI_SetBkColor
        56   -> GUI_SetColor
        56   -> GUI_SetFont
        56   -> GUI_UC_SetEncodeNone
        56   -> GUI_UC_SetEncodeUTF8
        56   -> PROGBAR_CreateEx
        56   -> PROGBAR_SetBarColor
        56   -> PROGBAR_SetFont
        56   -> PROGBAR_SetTextColor
        56   -> TEXT_CreateEx
        56   -> TEXT_SetBkColor
        56   -> TEXT_SetTextColor
        56   -> WM_CreateWindow
        56   -> creat_title_text
        56   -> disp_bed_temp_printing
        56   -> disp_fan_speed_printing
         0   -> disp_printing_speed
        56   -> disp_sprayer_tem_printing
        56   -> memset
       8   print_time_run
         8   -> disp_print_time
       0   reset_file_info
       0   reset_print_time
      32   setProBarRate
        32   -> BUTTON_SetBitmapEx
        32   -> BUTTON_SetBkColor
        32   -> BUTTON_SetBmpFileName
        32   -> BUTTON_SetText
        32   -> BUTTON_SetTextColor
        32   -> PROGBAR_SetValue
        32   -> __aeabi_ldivmod
        32   -> stop_print_time
       0   setProBarValue
       0   start_print_time
       0   stop_print_time


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  ?<Constant " ">
       1  ?<Constant "">
       8  ?<Constant "%.3f">
       4  ?<Constant "%3d">
       8  ?<Constant "%3d%%">
      16  ?<Constant "%d%d:%d%d:%d%d">
      20  ?<Constant "bmp_bed_state.bin">
      20  ?<Constant "bmp_ext1_state.bin">
      20  ?<Constant "bmp_ext2_state.bin">
      20  ?<Constant "bmp_fan_state.bin">
      16  ?<Constant "bmp_operate.bin">
      16  ?<Constant "bmp_pause.bin">
      24  ?<Constant "bmp_printing_back.bin">
      16  ?<Constant "bmp_resume.bin">
      20  ?<Constant "bmp_speed_state.bin">
      16  ?<Constant "bmp_stop.bin">
      20  ?<Constant "bmp_time_state.bin">
      20  ?<Constant "bmp_zpos_state.bin">
      32  ?<Constant {'\000'}>
      32  ?<Constant {'\000'}>_1
      32  ?<Constant {'\000'}>_2
      32  ?<Constant {'\000'}>_3
      32  ?<Constant {'\000'}>_4
       4  ??DataTable33
       4  ??DataTable34
       4  ??DataTable34_1
       4  ??DataTable34_10
       4  ??DataTable34_11
       4  ??DataTable34_12
       4  ??DataTable34_13
       4  ??DataTable34_14
       4  ??DataTable34_15
       4  ??DataTable34_16
       4  ??DataTable34_2
       4  ??DataTable34_3
       4  ??DataTable34_4
       4  ??DataTable34_5
       4  ??DataTable34_6
       4  ??DataTable34_7
       4  ??DataTable34_8
       4  ??DataTable34_9
       4  ??DataTable36
       4  ??DataTable36_1
       4  ??DataTable36_10
       4  ??DataTable36_11
       4  ??DataTable36_12
       4  ??DataTable36_13
       4  ??DataTable36_14
       4  ??DataTable36_15
       4  ??DataTable36_16
       4  ??DataTable36_17
       4  ??DataTable36_18
       4  ??DataTable36_19
       4  ??DataTable36_2
       4  ??DataTable36_20
       4  ??DataTable36_21
       4  ??DataTable36_22
       4  ??DataTable36_23
       4  ??DataTable36_24
       4  ??DataTable36_25
       4  ??DataTable36_26
       4  ??DataTable36_27
       4  ??DataTable36_28
       4  ??DataTable36_29
       4  ??DataTable36_3
       4  ??DataTable36_4
       4  ??DataTable36_5
       4  ??DataTable36_6
       4  ??DataTable36_7
       4  ??DataTable36_8
       4  ??DataTable36_9
      38  Clear_printing
     168  buttonExt1
          buttonExt2
          buttonFanstate
          buttonBedstate
          buttonTime
          buttonZpos
          buttonPrintSpeed
     952  cbPrintingWin(WM_MESSAGE *)
      32  curFilePath
      90  disp_bed_temp_printing
       2  disp_fan_move_printing
      72  disp_fan_speed_printing
     216  disp_print_time
      74  disp_printing_speed
     160  disp_sprayer_tem_printing
    1670  draw_printing
     116  hPrintingWnd
          printingBar
          printTimeLeft
          E1_Temp
          E2_Temp
          Fan_Pwm
          Bed_Temp
          Zpos
          buttonPause
          buttonStop
          buttonOperat
          Printing_speed
          once_flag
          bmp_struct_0_0
       1  pause_resum
       1  print_start_flg
       9  print_time
          lastSec
      72  print_time_run
      26  reset_file_info
      16  reset_print_time
     374  setProBarRate
       2  setProBarValue
      10  start_print_time
      10  stop_print_time
       1  -- Other

 
   211 bytes in section .bss
   116 bytes in section .data
   168 bytes in section .rodata
 4 236 bytes in section .text
 
 4 236 bytes of CODE  memory
   167 bytes of CONST memory (+ 1 byte shared)
   327 bytes of DATA  memory

Errors: none
Warnings: 65
