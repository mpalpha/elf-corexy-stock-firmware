###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:00:40
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\LCDAA.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\LCDAA.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\LCDAA.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\LCDAA.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\LCDAA.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : LCDAA.c
     16          Purpose     : Low level antialiasing routines.
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #define LCD_C
     21          
     22          #include <stddef.h>           /* needed for definition of NULL */
     23          #include "LCD.h"
     24          #include "GUI_Private.h"
     25          #include "LCD_Private.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Defines
     30          *
     31          **********************************************************************
     32          */
     33          
     34          #define RETURN_IF_Y_OUT() \
     35            if (y < GUI_Context.ClipRect.y0)                     \
     36              return;                                            \
     37            if (y > GUI_Context.ClipRect.y1)                     \
     38              return;
     39          
     40          #define RETURN_IF_X_OUT() \
     41            if (x < GUI_Context.ClipRect.x0) return;             \
     42            if (x > GUI_Context.ClipRect.x1) return;
     43          
     44          #define CLIP_X() \
     45            if (x0 < GUI_Context.ClipRect.x0) { x0 = GUI_Context.ClipRect.x0; } \
     46            if (x1 > GUI_Context.ClipRect.x1) { x1 = GUI_Context.ClipRect.x1; }
     47          
     48          #define CLIP_Y() \
     49            if (y0 < GUI_Context.ClipRect.y0) { y0 = GUI_Context.ClipRect.y0; } \
     50            if (y1 > GUI_Context.ClipRect.y1) { y1 = GUI_Context.ClipRect.y1; }
     51          
     52          /*********************************************************************
     53          *
     54          *       Public code
     55          *
     56          **********************************************************************
     57          */
     58          /*********************************************************************
     59          *
     60          *       LCD_AA_MixColors
     61          */

   \                                 In section .text, align 2, keep-with-next
     62          LCD_COLOR LCD_AA_MixColors(LCD_COLOR Color, LCD_COLOR BkColor, U8 Intens) {
   \                     LCD_AA_MixColors: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
     63            /* Calc Color seperations for FgColor first */
     64            I32 R = (Color&0xff)*Intens;
   \   00000002   0xB2C3             UXTB     R3,R0
   \   00000004   0x4353             MULS     R3,R2,R3
     65            I32 G = (Color&0xff00)*Intens;
   \   00000006   0xF400 0x447F      AND      R4,R0,#0xFF00
   \   0000000A   0x4354             MULS     R4,R2,R4
     66            I32 B = (Color&0xff0000)*Intens;
   \   0000000C   0xF400 0x007F      AND      R0,R0,#0xFF0000
   \   00000010   0x4350             MULS     R0,R2,R0
     67            /* Add Color seperations for BkColor */
     68            Intens = 15-Intens;
   \   00000012   0xF1C2 0x020F      RSB      R2,R2,#+15
     69            R += (BkColor&0xff)*Intens;
     70            G += (BkColor&0xff00)*Intens;
     71            B += (BkColor&0xff0000)*Intens;
     72            R = (R/15)&0xff;
     73            G = (G/15)&0xff00;
     74            B = (B/15)&0xff0000;
     75            Color = R+G+B;
     76            return Color;
   \   00000016   0xB2D2             UXTB     R2,R2
   \   00000018   0xB2CD             UXTB     R5,R1
   \   0000001A   0xFB02 0x3305      MLA      R3,R2,R5,R3
   \   0000001E   0x250F             MOVS     R5,#+15
   \   00000020   0xFB93 0xF3F5      SDIV     R3,R3,R5
   \   00000024   0xB2DB             UXTB     R3,R3
   \   00000026   0xF401 0x457F      AND      R5,R1,#0xFF00
   \   0000002A   0xFB02 0x4405      MLA      R4,R2,R5,R4
   \   0000002E   0x250F             MOVS     R5,#+15
   \   00000030   0xFB94 0xF4F5      SDIV     R4,R4,R5
   \   00000034   0xF404 0x447F      AND      R4,R4,#0xFF00
   \   00000038   0x18E3             ADDS     R3,R4,R3
   \   0000003A   0xF401 0x017F      AND      R1,R1,#0xFF0000
   \   0000003E   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000042   0x4629             MOV      R1,R5
   \   00000044   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000048   0xF400 0x007F      AND      R0,R0,#0xFF0000
   \   0000004C   0x18C0             ADDS     R0,R0,R3
   \   0000004E   0xBC30             POP      {R4,R5}
   \   00000050   0x4770             BX       LR               ;; return
     77          }
     78          
     79          /*********************************************************************
     80          *
     81          *       LCD_SetPixelAA
     82          */

   \                                 In section .text, align 2, keep-with-next
     83          void LCD_SetPixelAA(int x, int y, U8 Intens) {
   \                     LCD_SetPixelAA: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x0016             MOVS     R6,R2
     84            if (Intens == 0)
   \   00000008   0xD02F             BEQ.N    ??LCD_SetPixelAA_0
     85              return;
     86            RETURN_IF_Y_OUT();
   \   0000000A   0x....             LDR.N    R0,??DataTable1
   \   0000000C   0xF9B0 0x1006      LDRSH    R1,[R0, #+6]
   \   00000010   0x428D             CMP      R5,R1
   \   00000012   0xDB2A             BLT.N    ??LCD_SetPixelAA_0
   \   00000014   0xF9B0 0x100A      LDRSH    R1,[R0, #+10]
   \   00000018   0x42A9             CMP      R1,R5
   \   0000001A   0xDB26             BLT.N    ??LCD_SetPixelAA_0
     87            RETURN_IF_X_OUT();
   \   0000001C   0xF9B0 0x1004      LDRSH    R1,[R0, #+4]
   \   00000020   0x428C             CMP      R4,R1
   \   00000022   0xDB22             BLT.N    ??LCD_SetPixelAA_0
   \   00000024   0xF9B0 0x1008      LDRSH    R1,[R0, #+8]
   \   00000028   0x42A1             CMP      R1,R4
   \   0000002A   0xDB1E             BLT.N    ??LCD_SetPixelAA_0
   \   0000002C   0x8840             LDRH     R0,[R0, #+2]
   \   0000002E   0x2E0F             CMP      R6,#+15
   \   00000030   0xDB06             BLT.N    ??LCD_SetPixelAA_1
     88            if (Intens >= 15) {
     89              LCDDEV_L0_SetPixelIndex(x,y, LCD_COLORINDEX);
   \   00000032   0x4602             MOV      R2,R0
   \   00000034   0x4629             MOV      R1,R5
   \   00000036   0x4620             MOV      R0,R4
   \   00000038   0xE8BD 0x40F8      POP      {R3-R7,LR}
   \   0000003C   0x.... 0x....      B.W      LCD_L0_SetPixelIndex
     90            } else {
     91              LCD_COLOR Color = LCD_Index2Color(LCD_COLORINDEX);
   \                     ??LCD_SetPixelAA_1: (+1)
   \   00000040   0x.... 0x....      BL       LCD_Index2Color
   \   00000044   0x4607             MOV      R7,R0
     92              LCD_COLOR BkColor =  LCD_GetPixelColor(x,y);
   \   00000046   0x4629             MOV      R1,R5
   \   00000048   0x4620             MOV      R0,R4
   \   0000004A   0x.... 0x....      BL       LCD_GetPixelColor
   \   0000004E   0x4601             MOV      R1,R0
     93              Color = LCD_AA_MixColors(Color, BkColor, Intens);
   \   00000050   0x4632             MOV      R2,R6
   \   00000052   0x4638             MOV      R0,R7
   \   00000054   0x.... 0x....      BL       LCD_AA_MixColors
     94              LCDDEV_L0_SetPixelIndex(x,y, LCD_Color2Index(Color));
   \   00000058   0x.... 0x....      BL       LCD_Color2Index
   \   0000005C   0x4602             MOV      R2,R0
   \   0000005E   0x4629             MOV      R1,R5
   \   00000060   0x4620             MOV      R0,R4
   \   00000062   0xE8BD 0x40F8      POP      {R3-R7,LR}
   \   00000066   0x.... 0x....      B.W      LCD_L0_SetPixelIndex
     95            }
     96          }
   \                     ??LCD_SetPixelAA_0: (+1)
   \   0000006A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
     97          
     98          /*********************************************************************
     99          *
    100          *       LCD_SetPixelAA_NoTrans
    101          */

   \                                 In section .text, align 2, keep-with-next
    102          void LCD_SetPixelAA_NoTrans(int x, int y, U8 Intens) {
   \                     LCD_SetPixelAA_NoTrans: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4616             MOV      R6,R2
    103            RETURN_IF_Y_OUT();
   \   0000000A   0x....             LDR.N    R7,??DataTable1
   \   0000000C   0xF9B7 0x0006      LDRSH    R0,[R7, #+6]
   \   00000010   0x4285             CMP      R5,R0
   \   00000012   0xDB2F             BLT.N    ??LCD_SetPixelAA_NoTrans_0
   \   00000014   0xF9B7 0x000A      LDRSH    R0,[R7, #+10]
   \   00000018   0x42A8             CMP      R0,R5
   \   0000001A   0xDB2B             BLT.N    ??LCD_SetPixelAA_NoTrans_0
    104            RETURN_IF_X_OUT();
   \   0000001C   0xF9B7 0x0004      LDRSH    R0,[R7, #+4]
   \   00000020   0x4284             CMP      R4,R0
   \   00000022   0xDB27             BLT.N    ??LCD_SetPixelAA_NoTrans_0
   \   00000024   0xF9B7 0x0008      LDRSH    R0,[R7, #+8]
   \   00000028   0x42A0             CMP      R0,R4
   \   0000002A   0xDB23             BLT.N    ??LCD_SetPixelAA_NoTrans_0
    105            if (Intens == 0) {
   \   0000002C   0x2E00             CMP      R6,#+0
   \   0000002E   0xD105             BNE.N    ??LCD_SetPixelAA_NoTrans_1
    106              LCDDEV_L0_SetPixelIndex(x,y, LCD_BKCOLORINDEX);
   \   00000030   0x883A             LDRH     R2,[R7, #+0]
   \   00000032   0x4620             MOV      R0,R4
   \   00000034   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000038   0x.... 0x....      B.W      LCD_L0_SetPixelIndex
    107            } else if (Intens == 15) {
   \                     ??LCD_SetPixelAA_NoTrans_1: (+1)
   \   0000003C   0x2E0F             CMP      R6,#+15
   \   0000003E   0xD105             BNE.N    ??LCD_SetPixelAA_NoTrans_2
    108              LCDDEV_L0_SetPixelIndex(x,y, LCD_COLORINDEX);
   \   00000040   0x887A             LDRH     R2,[R7, #+2]
   \   00000042   0x4620             MOV      R0,R4
   \   00000044   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000048   0x.... 0x....      B.W      LCD_L0_SetPixelIndex
    109            } else {
    110              LCD_COLOR Color = LCD_AA_MixColors(LCD_Index2Color(LCD_COLORINDEX),
    111                                             LCD_Index2Color(LCD_BKCOLORINDEX),
    112                                             Intens);
   \                     ??LCD_SetPixelAA_NoTrans_2: (+1)
   \   0000004C   0x8838             LDRH     R0,[R7, #+0]
   \   0000004E   0x.... 0x....      BL       LCD_Index2Color
   \   00000052   0x4680             MOV      R8,R0
   \   00000054   0x8878             LDRH     R0,[R7, #+2]
   \   00000056   0x.... 0x....      BL       LCD_Index2Color
   \   0000005A   0x4632             MOV      R2,R6
   \   0000005C   0x4641             MOV      R1,R8
   \   0000005E   0x.... 0x....      BL       LCD_AA_MixColors
    113              LCDDEV_L0_SetPixelIndex(x,y,LCD_Color2Index(Color));
   \   00000062   0x.... 0x....      BL       LCD_Color2Index
   \   00000066   0x4602             MOV      R2,R0
   \   00000068   0x4629             MOV      R1,R5
   \   0000006A   0x4620             MOV      R0,R4
   \   0000006C   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000070   0x.... 0x....      B.W      LCD_L0_SetPixelIndex
    114            }
    115          }
   \                     ??LCD_SetPixelAA_NoTrans_0: (+1)
   \   00000074   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     GUI_Context
    116          
    117          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   LCD_AA_MixColors
      24   LCD_SetPixelAA
        24   -> LCD_AA_MixColors
        24   -> LCD_Color2Index
        24   -> LCD_GetPixelColor
        24   -> LCD_Index2Color
         0   -> LCD_L0_SetPixelIndex
      24   LCD_SetPixelAA_NoTrans
        24   -> LCD_AA_MixColors
        24   -> LCD_Color2Index
        24   -> LCD_Index2Color
         0   -> LCD_L0_SetPixelIndex


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      82  LCD_AA_MixColors
     108  LCD_SetPixelAA
     120  LCD_SetPixelAA_NoTrans

 
 314 bytes in section .text
 
 314 bytes of CODE memory

Errors: none
Warnings: none
