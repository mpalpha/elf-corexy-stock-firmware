###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:20
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_GetInsideRectExScrollbar.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_GetInsideRectExScrollbar.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\WM_GetInsideRectExScrollbar.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WM_GetInsideRectExScrollbar.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_GetInsideRectExScrollbar.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_GetInsideRect.c
     16          Purpose     : Windows manager, submodule
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "WM_Intern.h"
     21          
     22          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     23          
     24          /*********************************************************************
     25          *
     26          *       Public code
     27          *
     28          **********************************************************************
     29          */
     30          /*********************************************************************
     31          *
     32          *       WM_GetInsideRectExScrollbar
     33          *
     34            Purpose:
     35              Return the inside rectangle in client coordinates.
     36              The inside rectangle is the client rectangle minus the effect,
     37              which typically reduces the rectangle by 0 - 3 pixels on either side
     38              (2 for the standard 3D effect).
     39          */      

   \                                 In section .text, align 2, keep-with-next
     40          void WM_GetInsideRectExScrollbar(WM_HWIN hWin, GUI_RECT* pRect) {
   \                     WM_GetInsideRectExScrollbar: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
   \   00000004   0x4606             MOV      R6,R0
   \   00000006   0x460C             MOV      R4,R1
     41            GUI_RECT rWin, rInside, rScrollbar;
     42            WM_HWIN hBarV, hBarH;
     43            U16 WinFlags;
     44            if (hWin) {
   \   00000008   0x2E00             CMP      R6,#+0
   \   0000000A   0xD04E             BEQ.N    ??WM_GetInsideRectExScrollbar_0
     45              if (pRect) {
   \   0000000C   0x2C00             CMP      R4,#+0
   \   0000000E   0xD04C             BEQ.N    ??WM_GetInsideRectExScrollbar_0
     46                hBarH = WM_GetDialogItem(hWin, GUI_ID_HSCROLL);
   \   00000010   0x21FF             MOVS     R1,#+255
   \   00000012   0x.... 0x....      BL       WM_GetDialogItem
   \   00000016   0x4605             MOV      R5,R0
     47                hBarV = WM_GetDialogItem(hWin, GUI_ID_VSCROLL);
   \   00000018   0x21FE             MOVS     R1,#+254
   \   0000001A   0x4630             MOV      R0,R6
   \   0000001C   0x.... 0x....      BL       WM_GetDialogItem
   \   00000020   0x4607             MOV      R7,R0
     48                WM_GetWindowRectEx(hWin, &rWin);     /* The entire window in screen coordinates */
   \   00000022   0xA902             ADD      R1,SP,#+8
   \   00000024   0x4630             MOV      R0,R6
   \   00000026   0x.... 0x....      BL       WM_GetWindowRectEx
     49                WM_GetInsideRectEx(hWin, &rInside);
   \   0000002A   0xA904             ADD      R1,SP,#+16
   \   0000002C   0x4630             MOV      R0,R6
   \   0000002E   0x.... 0x....      BL       WM_GetInsideRectEx
     50                if (hBarV) {
   \   00000032   0x2F00             CMP      R7,#+0
   \   00000034   0xD018             BEQ.N    ??WM_GetInsideRectExScrollbar_1
     51                   WM_GetWindowRectEx(hBarV, &rScrollbar);
   \   00000036   0xA900             ADD      R1,SP,#+0
   \   00000038   0x4638             MOV      R0,R7
   \   0000003A   0x.... 0x....      BL       WM_GetWindowRectEx
     52                   GUI_MoveRect(&rScrollbar, -rWin.x0, -rWin.y0);
   \   0000003E   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   00000042   0x4242             RSBS     R2,R0,#+0
   \   00000044   0xF9BD 0x0008      LDRSH    R0,[SP, #+8]
   \   00000048   0x4241             RSBS     R1,R0,#+0
   \   0000004A   0xA800             ADD      R0,SP,#+0
   \   0000004C   0x.... 0x....      BL       GUI_MoveRect
     53                   WinFlags = WM_GetFlags(hBarV);
   \   00000050   0x4638             MOV      R0,R7
   \   00000052   0x.... 0x....      BL       WM_GetFlags
     54                   if ((WinFlags & WM_SF_ANCHOR_RIGHT) && (WinFlags & WM_SF_ISVIS)) {
   \   00000056   0xF000 0x0082      AND      R0,R0,#0x82
   \   0000005A   0x2882             CMP      R0,#+130
   \   0000005C   0xD104             BNE.N    ??WM_GetInsideRectExScrollbar_1
     55                     rInside.x1 = rScrollbar.x0 - 1;
   \   0000005E   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000062   0x1E40             SUBS     R0,R0,#+1
   \   00000064   0xF8AD 0x0014      STRH     R0,[SP, #+20]
     56                   }
     57                }
     58                if (hBarH) {
   \                     ??WM_GetInsideRectExScrollbar_1: (+1)
   \   00000068   0x2D00             CMP      R5,#+0
   \   0000006A   0xD019             BEQ.N    ??WM_GetInsideRectExScrollbar_2
     59                   WM_GetWindowRectEx(hBarH, &rScrollbar);
   \   0000006C   0xA900             ADD      R1,SP,#+0
   \   0000006E   0x4628             MOV      R0,R5
   \   00000070   0x.... 0x....      BL       WM_GetWindowRectEx
     60                   GUI_MoveRect(&rScrollbar, -rWin.x0, -rWin.y0);
   \   00000074   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   00000078   0x4242             RSBS     R2,R0,#+0
   \   0000007A   0xF9BD 0x0008      LDRSH    R0,[SP, #+8]
   \   0000007E   0x4241             RSBS     R1,R0,#+0
   \   00000080   0xA800             ADD      R0,SP,#+0
   \   00000082   0x.... 0x....      BL       GUI_MoveRect
     61                   WinFlags = WM_GetFlags(hBarH);
   \   00000086   0x4628             MOV      R0,R5
   \   00000088   0x.... 0x....      BL       WM_GetFlags
     62                   if ((WinFlags & WM_SF_ANCHOR_BOTTOM) && (WinFlags & WM_SF_ISVIS)) {
   \   0000008C   0xF400 0x7081      AND      R0,R0,#0x102
   \   00000090   0xF5B0 0x7F81      CMP      R0,#+258
   \   00000094   0xD104             BNE.N    ??WM_GetInsideRectExScrollbar_2
     63                     rInside.y1 = rScrollbar.y0 - 1;
   \   00000096   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   0000009A   0x1E40             SUBS     R0,R0,#+1
   \   0000009C   0xF8AD 0x0016      STRH     R0,[SP, #+22]
     64                   }
     65                }
     66                *pRect = rInside;
   \                     ??WM_GetInsideRectExScrollbar_2: (+1)
   \   000000A0   0x4620             MOV      R0,R4
   \   000000A2   0xA904             ADD      R1,SP,#+16
   \   000000A4   0x2208             MOVS     R2,#+8
   \   000000A6   0x.... 0x....      BL       __aeabi_memcpy
     67              }
     68            }
     69          }
   \                     ??WM_GetInsideRectExScrollbar_0: (+1)
   \   000000AA   0xB007             ADD      SP,SP,#+28
   \   000000AC   0xBDF0             POP      {R4-R7,PC}       ;; return
     70          
     71          #else
     72            void WM_GetInsideRectExScrollbar(void) {} /* avoid empty object files */
     73          #endif   /* GUI_WINSUPPORT */
     74          
     75          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      48   WM_GetInsideRectExScrollbar
        48   -> GUI_MoveRect
        48   -> WM_GetDialogItem
        48   -> WM_GetFlags
        48   -> WM_GetInsideRectEx
        48   -> WM_GetWindowRectEx
        48   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     174  WM_GetInsideRectExScrollbar

 
 174 bytes in section .text
 
 174 bytes of CODE memory

Errors: none
Warnings: none
