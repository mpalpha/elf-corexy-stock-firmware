###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:28
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI__IntersectRects.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI__IntersectRects.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\GUI__IntersectRects.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\GUI__IntersectRects.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI__IntersectRects.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_IntersectRects.c
     16          Purpose     : Implementation of GUI_IntersectRects
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "GUI_Protected.h"
     21          
     22          /*********************************************************************
     23          *
     24          *       Macros
     25          *
     26          **********************************************************************
     27          */
     28          
     29          #define MIN(v0,v1) ((v0>v1) ? v1 : v0)
     30          #define MAX(v0,v1) ((v0>v1) ? v0 : v1)
     31          
     32          /*********************************************************************
     33          *
     34          *       Public code
     35          *
     36          **********************************************************************
     37          */
     38          /*********************************************************************
     39          *
     40          *       GUI__IntersectRects
     41          *
     42          * Purpose:
     43          *   Calc intersection of rectangles
     44          *
     45          * Return value:
     46          *   1 if they do intersect,
     47          *   0 if there is no intersection
     48          *
     49          * Add. info:
     50          *   Rectangles are passed as pointers. These pointers need to be valid;
     51          *   a NULL pointer may not be passed. There is no check for NULL pointers
     52          *   implemented in order to avoid avoid performance penalty.
     53          */

   \                                 In section .text, align 2, keep-with-next
     54          int GUI__IntersectRects(GUI_RECT* pDest, const GUI_RECT* pr0, const GUI_RECT* pr1) {
   \                     GUI__IntersectRects: (+1)
   \   00000000   0xB410             PUSH     {R4}
     55            pDest->x0 = MAX (pr0->x0, pr1->x0);
   \   00000002   0xF9B1 0x3000      LDRSH    R3,[R1, #+0]
   \   00000006   0xF9B2 0x4000      LDRSH    R4,[R2, #+0]
   \   0000000A   0x429C             CMP      R4,R3
   \   0000000C   0xDB00             BLT.N    ??GUI__IntersectRects_0
   \   0000000E   0x4623             MOV      R3,R4
   \                     ??GUI__IntersectRects_0: (+1)
   \   00000010   0x8003             STRH     R3,[R0, #+0]
     56            pDest->y0 = MAX (pr0->y0, pr1->y0);
   \   00000012   0xF9B2 0x3002      LDRSH    R3,[R2, #+2]
   \   00000016   0xF9B1 0x4002      LDRSH    R4,[R1, #+2]
   \   0000001A   0x42A3             CMP      R3,R4
   \   0000001C   0xDA00             BGE.N    ??GUI__IntersectRects_1
   \   0000001E   0x4623             MOV      R3,R4
   \                     ??GUI__IntersectRects_1: (+1)
   \   00000020   0x8043             STRH     R3,[R0, #+2]
     57            pDest->x1 = MIN (pr0->x1, pr1->x1);
   \   00000022   0xF9B2 0x3004      LDRSH    R3,[R2, #+4]
   \   00000026   0xF9B1 0x4004      LDRSH    R4,[R1, #+4]
   \   0000002A   0x42A3             CMP      R3,R4
   \   0000002C   0xDD00             BLE.N    ??GUI__IntersectRects_2
   \   0000002E   0x4623             MOV      R3,R4
   \                     ??GUI__IntersectRects_2: (+1)
   \   00000030   0x8083             STRH     R3,[R0, #+4]
     58            pDest->y1 = MIN (pr0->y1, pr1->y1);
   \   00000032   0xF9B2 0x3006      LDRSH    R3,[R2, #+6]
   \   00000036   0xF9B1 0x4006      LDRSH    R4,[R1, #+6]
   \   0000003A   0x42A3             CMP      R3,R4
   \   0000003C   0xDD00             BLE.N    ??GUI__IntersectRects_3
   \   0000003E   0x4623             MOV      R3,R4
   \                     ??GUI__IntersectRects_3: (+1)
   \   00000040   0x80C3             STRH     R3,[R0, #+6]
     59            if (pDest->x1 < pDest->x0) {
   \   00000042   0xF9B0 0x1004      LDRSH    R1,[R0, #+4]
   \   00000046   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000004A   0x4291             CMP      R1,R2
   \   0000004C   0xDA01             BGE.N    ??GUI__IntersectRects_4
     60              return 0;
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0xE008             B.N      ??GUI__IntersectRects_5
     61            }
     62            if (pDest->y1 < pDest->y0) {
   \                     ??GUI__IntersectRects_4: (+1)
   \   00000052   0xF9B0 0x1006      LDRSH    R1,[R0, #+6]
   \   00000056   0xF9B0 0x0002      LDRSH    R0,[R0, #+2]
   \   0000005A   0x4281             CMP      R1,R0
   \   0000005C   0xDA01             BGE.N    ??GUI__IntersectRects_6
     63              return 0;
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0xE000             B.N      ??GUI__IntersectRects_5
     64            }
     65            return 1;
   \                     ??GUI__IntersectRects_6: (+1)
   \   00000062   0x2001             MOVS     R0,#+1
   \                     ??GUI__IntersectRects_5: (+1)
   \   00000064   0xBC10             POP      {R4}
   \   00000066   0x4770             BX       LR               ;; return
     66          }
     67          
     68          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   GUI__IntersectRects


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     104  GUI__IntersectRects

 
 104 bytes in section .text
 
 104 bytes of CODE memory

Errors: none
Warnings: none
