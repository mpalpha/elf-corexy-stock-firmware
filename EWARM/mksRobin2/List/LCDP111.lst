###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:00:42
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\ConvertColor\LCDP111.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\ConvertColor\LCDP111.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\LCDP111.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\LCDP111.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\ConvertColor\LCDP111.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : LCD111.C
     16          Purpose     : Color conversion routines for 111 color mode
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "LCD_Protected.h"    /* inter modul definitions */
     21          
     22          /*********************************************************************
     23          *
     24          *       Public code, LCD_FIXEDPALETTE == 111, 8 basic colors
     25          *
     26          **********************************************************************
     27          */
     28          /*********************************************************************
     29          *
     30          *       LCD_Color2Index_111
     31          */

   \                                 In section .text, align 2, keep-with-next
     32          unsigned LCD_Color2Index_111(LCD_COLOR Color) {
     33            int r,g,b;
     34            r = (Color>>(0+7))  &1;
     35            g = (Color>>(8+7))  &1;
     36            b = (Color>>(16+7)) &1;
     37            return r+(g<<1)+(b<<2);
   \                     LCD_Color2Index_111: (+1)
   \   00000000   0xF3C0 0x11C0      UBFX     R1,R0,#+7,#+1
   \   00000004   0xF3C0 0x32C0      UBFX     R2,R0,#+15,#+1
   \   00000008   0xEB01 0x0142      ADD      R1,R1,R2, LSL #+1
   \   0000000C   0xF3C0 0x50C0      UBFX     R0,R0,#+23,#+1
   \   00000010   0xEB01 0x0080      ADD      R0,R1,R0, LSL #+2
   \   00000014   0x4770             BX       LR               ;; return
     38          }
     39          
     40          /*********************************************************************
     41          *
     42          *       LCD_Index2Color_111
     43          */

   \                                 In section .text, align 2, keep-with-next
     44          LCD_COLOR LCD_Index2Color_111(int Index) {
     45            U16 r,g,b;
     46            r = (((Index>>0)&1)*0xff);
     47            g = (((Index>>1)&1)*0xff);
     48            b =   (Index>>2)   *0xff;
     49            return r | (g<<8) | ((U32)b<<16);
   \                     LCD_Index2Color_111: (+1)
   \   00000000   0xF000 0x0101      AND      R1,R0,#0x1
   \   00000004   0xEBC1 0x2101      RSB      R1,R1,R1, LSL #+8
   \   00000008   0xB289             UXTH     R1,R1
   \   0000000A   0xF3C0 0x0240      UBFX     R2,R0,#+1,#+1
   \   0000000E   0xEBC2 0x2202      RSB      R2,R2,R2, LSL #+8
   \   00000012   0xB292             UXTH     R2,R2
   \   00000014   0xEA41 0x2102      ORR      R1,R1,R2, LSL #+8
   \   00000018   0x1080             ASRS     R0,R0,#+2
   \   0000001A   0xEBC0 0x2000      RSB      R0,R0,R0, LSL #+8
   \   0000001E   0xB280             UXTH     R0,R0
   \   00000020   0xEA41 0x4000      ORR      R0,R1,R0, LSL #+16
   \   00000024   0x4770             BX       LR               ;; return
     50          }
     51          
     52          /*********************************************************************
     53          *
     54          *       LCD_GetIndexMask_111
     55          */

   \                                 In section .text, align 2, keep-with-next
     56          unsigned LCD_GetIndexMask_111(void) {
     57            return 0x0007;
   \                     LCD_GetIndexMask_111: (+1)
   \   00000000   0x2007             MOVS     R0,#+7
   \   00000002   0x4770             BX       LR               ;; return
     58          }
     59          
     60          /*********************************************************************
     61          *
     62          *       Public code, LCD_FIXEDPALETTE == 111, 8 basic colors, SWAP_RB
     63          *
     64          **********************************************************************
     65          */
     66          /*********************************************************************
     67          *
     68          *       LCD_Color2Index_M111
     69          */

   \                                 In section .text, align 2, keep-with-next
     70          unsigned LCD_Color2Index_M111(LCD_COLOR Color) {
     71            int r,g,b;
     72            r = (Color>>(0+7))  &1;
     73            g = (Color>>(8+7))  &1;
     74            b = (Color>>(16+7)) &1;
     75            return b+(g<<1)+(r<<2); 
   \                     LCD_Color2Index_M111: (+1)
   \   00000000   0xF3C0 0x51C0      UBFX     R1,R0,#+23,#+1
   \   00000004   0xF3C0 0x32C0      UBFX     R2,R0,#+15,#+1
   \   00000008   0xEB01 0x0142      ADD      R1,R1,R2, LSL #+1
   \   0000000C   0xF3C0 0x10C0      UBFX     R0,R0,#+7,#+1
   \   00000010   0xEB01 0x0080      ADD      R0,R1,R0, LSL #+2
   \   00000014   0x4770             BX       LR               ;; return
     76          }
     77          
     78          /*********************************************************************
     79          *
     80          *       LCD_Index2Color_M111
     81          */

   \                                 In section .text, align 2, keep-with-next
     82          LCD_COLOR LCD_Index2Color_M111(int Index) {
     83            U16 r,g,b;
     84            r = (((Index>>0)&1)*0xff);
     85            g = (((Index>>1)&1)*0xff);
     86            b =   (Index>>2)   *0xff;
     87            return b | (g<<8) | ((U32)r<<16);
   \                     LCD_Index2Color_M111: (+1)
   \   00000000   0x1081             ASRS     R1,R0,#+2
   \   00000002   0xEBC1 0x2101      RSB      R1,R1,R1, LSL #+8
   \   00000006   0xB289             UXTH     R1,R1
   \   00000008   0xF3C0 0x0240      UBFX     R2,R0,#+1,#+1
   \   0000000C   0xEBC2 0x2202      RSB      R2,R2,R2, LSL #+8
   \   00000010   0xB292             UXTH     R2,R2
   \   00000012   0xEA41 0x2102      ORR      R1,R1,R2, LSL #+8
   \   00000016   0xF000 0x0001      AND      R0,R0,#0x1
   \   0000001A   0xEBC0 0x2000      RSB      R0,R0,R0, LSL #+8
   \   0000001E   0xB280             UXTH     R0,R0
   \   00000020   0xEA41 0x4000      ORR      R0,R1,R0, LSL #+16
   \   00000024   0x4770             BX       LR               ;; return
     88          }
     89          
     90          /*********************************************************************
     91          *
     92          *       LCD_GetIndexMask_M111
     93          */

   \                                 In section .text, align 2, keep-with-next
     94          unsigned LCD_GetIndexMask_M111(void) {
     95            return 0x0007;
   \                     LCD_GetIndexMask_M111: (+1)
   \   00000000   0x2007             MOVS     R0,#+7
   \   00000002   0x4770             BX       LR               ;; return
     96          }
     97          
     98          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   LCD_Color2Index_111
       0   LCD_Color2Index_M111
       0   LCD_GetIndexMask_111
       0   LCD_GetIndexMask_M111
       0   LCD_Index2Color_111
       0   LCD_Index2Color_M111


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      22  LCD_Color2Index_111
      22  LCD_Color2Index_M111
       4  LCD_GetIndexMask_111
       4  LCD_GetIndexMask_M111
      38  LCD_Index2Color_111
      38  LCD_Index2Color_M111

 
 128 bytes in section .text
 
 128 bytes of CODE memory

Errors: none
Warnings: none
