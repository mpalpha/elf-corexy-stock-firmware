###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:08
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\DROPDOWN.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\DROPDOWN.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\DROPDOWN.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\DROPDOWN.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\DROPDOWN.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : DROPDOWN.c
     16          Purpose     : Implementation of dropdown widget
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "GUI_ARRAY.h"
     21          #include <stdlib.h>
     22          #include <string.h>
     23          #include "DROPDOWN.h"
     24          #include "DROPDOWN_Private.h"
     25          #include "SCROLLBAR.h"
     26          #include "WIDGET.h"
     27          #include "GUIDebug.h"
     28          #include "GUI_Protected.h"
     29          #include "WM_Intern.h"
     30          #include "LISTBOX.h"
     31          
     32          #if GUI_WINSUPPORT
     33          
     34          /*********************************************************************
     35          *
     36          *       Private config defaults
     37          *
     38          **********************************************************************
     39          */
     40          
     41          /* Define default fonts */
     42          #ifndef DROPDOWN_FONT_DEFAULT
     43            #define DROPDOWN_FONT_DEFAULT &GUI_Font13_1
     44          #endif
     45          
     46          /* Define colors */
     47          #ifndef DROPDOWN_BKCOLOR0_DEFAULT
     48            #define DROPDOWN_BKCOLOR0_DEFAULT GUI_WHITE     /* Not selected */
     49          #endif
     50          
     51          #ifndef DROPDOWN_BKCOLOR1_DEFAULT
     52            #define DROPDOWN_BKCOLOR1_DEFAULT GUI_GRAY      /* Selected, no focus */
     53          #endif
     54          
     55          #ifndef DROPDOWN_BKCOLOR2_DEFAULT
     56            #define DROPDOWN_BKCOLOR2_DEFAULT GUI_BLUE      /* Selected, focus */
     57          #endif
     58          
     59          #ifndef DROPDOWN_TEXTCOLOR0_DEFAULT
     60            #define DROPDOWN_TEXTCOLOR0_DEFAULT GUI_BLACK   /* Not selected */
     61          #endif
     62          
     63          #ifndef DROPDOWN_TEXTCOLOR1_DEFAULT
     64            #define DROPDOWN_TEXTCOLOR1_DEFAULT GUI_WHITE   /* Selected, no focus */
     65          #endif
     66          
     67          #ifndef DROPDOWN_TEXTCOLOR2_DEFAULT
     68            #define DROPDOWN_TEXTCOLOR2_DEFAULT GUI_WHITE   /* Selected, focus */
     69          #endif
     70          
     71          #ifndef DROPDOWN_BORDER_DEFAULT
     72            #define DROPDOWN_BORDER_DEFAULT 2
     73          #endif
     74          
     75          #ifndef DROPDOWN_ALIGN_DEFAULT
     76            #define DROPDOWN_ALIGN_DEFAULT GUI_TA_LEFT      /* Default text alignment */
     77          #endif
     78          
     79          /*********************************************************************
     80          *
     81          *       Static data
     82          *
     83          **********************************************************************
     84          */
     85          

   \                                 In section .data, align 4
     86          DROPDOWN_PROPS DROPDOWN__DefaultProps = {
   \                     DROPDOWN__DefaultProps:
   \   00000000   0x........         DC32 GUI_Font13_1, 16777215, 8421504, 16711680, 0, 16777215, 16777215
   \              0x00FFFFFF   
   \              0x00808080   
   \              0x00FF0000   
   \              0x00000000   
   \              0x00FFFFFF   
   \              0x00FFFFFF   
   \   0000001C   0x0002 0x0000      DC16 2, 0
     87            DROPDOWN_FONT_DEFAULT,
     88            DROPDOWN_BKCOLOR0_DEFAULT,
     89            DROPDOWN_BKCOLOR1_DEFAULT,
     90            DROPDOWN_BKCOLOR2_DEFAULT,
     91            DROPDOWN_TEXTCOLOR0_DEFAULT,
     92            DROPDOWN_TEXTCOLOR1_DEFAULT,
     93            DROPDOWN_TEXTCOLOR2_DEFAULT,
     94            DROPDOWN_BORDER_DEFAULT,
     95            DROPDOWN_ALIGN_DEFAULT
     96          };
     97          
     98          /*********************************************************************
     99          *
    100          *       Macros for internal use
    101          *
    102          **********************************************************************
    103          */
    104          
    105          #if GUI_DEBUG_LEVEL >1
    106            #define OBJECT_ID 0x4444   /* Magic numer, should be unique if possible */
    107            #define ASSERT_IS_VALID_PTR(p) GUI_DEBUG_ERROROUT_IF(p->DebugId != OBJECT_ID, "DROPDOWN.C: Wrong handle type or Object not init'ed")
    108            #define INIT_ID(p)   p->DebugId = OBJECT_ID
    109            #define DEINIT_ID(p) p->DebugId = 0
    110          #else
    111            #define ASSERT_IS_VALID_PTR(p)
    112            #define INIT_ID(p)
    113            #define DEINIT_ID(p)
    114          #endif
    115          
    116          /*********************************************************************
    117          *
    118          *       Static routines
    119          *
    120          **********************************************************************
    121          */
    122          
    123          /*********************************************************************
    124          *
    125          *       _GetNumItems
    126          
    127            Returns:
    128              Number of fully or partially visible items
    129          */

   \                                 In section .text, align 2, keep-with-next
    130          static int _GetNumItems(DROPDOWN_Obj* pObj) {
    131            return pObj->Handles.NumItems;
   \                     _GetNumItems: (+1)
   \   00000000   0x8DC0             LDRH     R0,[R0, #+46]
   \   00000002   0x4770             BX       LR               ;; return
    132          }
    133          
    134          /*********************************************************************
    135          *
    136          *       _GethItem
    137          
    138            Returns:
    139              Handle of the specified item
    140          */

   \                                 In section .text, align 2, keep-with-next
    141          static WM_HMEM _GethItem(DROPDOWN_Obj* pObj, int Index) {
    142            return GUI_ARRAY_GethItem(&pObj->Handles, Index);
   \                     _GethItem: (+1)
   \   00000000   0x302E             ADDS     R0,R0,#+46
   \   00000002   0x.... 0x....      B.W      GUI_ARRAY_GethItem
    143          }
    144          
    145          /*********************************************************************
    146          *
    147          *       _DrawTriangleDown
    148          */

   \                                 In section .text, align 2, keep-with-next
    149          static void _DrawTriangleDown(int x, int y, int Size) {
   \                     _DrawTriangleDown: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
   \   00000008   0xE006             B.N      ??_DrawTriangleDown_0
    150            for (; Size >= 0; Size--, y++ ) {
    151              GUI_DrawHLine(y, x - Size, x + Size);
   \                     ??_DrawTriangleDown_1: (+1)
   \   0000000A   0x1932             ADDS     R2,R6,R4
   \   0000000C   0x1BA1             SUBS     R1,R4,R6
   \   0000000E   0x4628             MOV      R0,R5
   \   00000010   0x.... 0x....      BL       GUI_DrawHLine
    152            }
   \   00000014   0x1E76             SUBS     R6,R6,#+1
   \   00000016   0x1C6D             ADDS     R5,R5,#+1
   \                     ??_DrawTriangleDown_0: (+1)
   \   00000018   0x2E00             CMP      R6,#+0
   \   0000001A   0xD5F6             BPL.N    ??_DrawTriangleDown_1
    153          }
   \   0000001C   0xBD70             POP      {R4-R6,PC}       ;; return
    154          /*********************************************************************
    155          *
    156          *       _GetpItem
    157          
    158            Returns:
    159              Pointer to the specified item
    160          */

   \                                 In section .text, align 2, keep-with-next
    161          static const char* _GetpItem(DROPDOWN_Obj* pObj, int Index) {
   \                     _GetpItem: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    162            const char* s = NULL;
   \   00000002   0x2400             MOVS     R4,#+0
    163            WM_HMEM h = _GethItem(pObj, Index);
   \   00000004   0x.... 0x....      BL       _GethItem
    164            if (h) {
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD002             BEQ.N    ??_GetpItem_0
    165              s = (const char*) GUI_ALLOC_h2p(h);
   \   0000000C   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000010   0x4604             MOV      R4,R0
    166            }
    167            return s;
   \                     ??_GetpItem_0: (+1)
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    168          }
    169          
    170          /*********************************************************************
    171          *
    172          *       _Tolower
    173          */

   \                                 In section .text, align 2, keep-with-next
    174          static int _Tolower(int Key) {
    175            if ((Key >= 0x41) && (Key <= 0x5a)) {
   \                     _Tolower: (+1)
   \   00000000   0xF1A0 0x0141      SUB      R1,R0,#+65
   \   00000004   0x291A             CMP      R1,#+26
   \   00000006   0xD200             BCS.N    ??_Tolower_0
    176              Key += 0x20;
   \   00000008   0x3020             ADDS     R0,R0,#+32
    177            }
    178            return Key;
   \                     ??_Tolower_0: (+1)
   \   0000000A   0x4770             BX       LR               ;; return
    179          }
    180          
    181          /*********************************************************************
    182          *
    183          *       _SelectByKey
    184          */

   \                                 In section .text, align 2, keep-with-next
    185          static void _SelectByKey(DROPDOWN_Handle hObj, int Key) {
   \                     _SelectByKey: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    186            int i;
    187            DROPDOWN_Obj* pObj;
    188            pObj = DROPDOWN_H2P(hObj);
   \   00000006   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000000A   0x4606             MOV      R6,R0
    189            Key = _Tolower(Key);
   \   0000000C   0x4628             MOV      R0,R5
   \   0000000E   0x.... 0x....      BL       _Tolower
   \   00000012   0x4605             MOV      R5,R0
    190            for (i = 0; i < _GetNumItems(pObj); i++) {
   \   00000014   0x2700             MOVS     R7,#+0
   \   00000016   0xE000             B.N      ??_SelectByKey_0
   \                     ??_SelectByKey_1: (+1)
   \   00000018   0x1C7F             ADDS     R7,R7,#+1
   \                     ??_SelectByKey_0: (+1)
   \   0000001A   0x4630             MOV      R0,R6
   \   0000001C   0x.... 0x....      BL       _GetNumItems
   \   00000020   0x4287             CMP      R7,R0
   \   00000022   0xDA0F             BGE.N    ??_SelectByKey_2
    191              char c = _Tolower(*_GetpItem(pObj, i));
   \   00000024   0x4639             MOV      R1,R7
   \   00000026   0x4630             MOV      R0,R6
   \   00000028   0x.... 0x....      BL       _GetpItem
   \   0000002C   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000030   0x.... 0x....      BL       _Tolower
    192              if (c == Key) {
   \   00000034   0xB240             SXTB     R0,R0
   \   00000036   0x42A8             CMP      R0,R5
   \   00000038   0xD1EE             BNE.N    ??_SelectByKey_1
    193                DROPDOWN_SetSel(hObj, i);
   \   0000003A   0x4639             MOV      R1,R7
   \   0000003C   0x4620             MOV      R0,R4
   \   0000003E   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   00000042   0x....             B.N      DROPDOWN_SetSel
    194                break;
    195              }
    196            }
    197          }
   \                     ??_SelectByKey_2: (+1)
   \   00000044   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    198          
    199          /*********************************************************************
    200          *
    201          *       _FreeAttached
    202          */

   \                                 In section .text, align 2, keep-with-next
    203          static void _FreeAttached(DROPDOWN_Obj* pObj) {
   \                     _FreeAttached: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    204            GUI_ARRAY_Delete(&pObj->Handles);
   \   00000004   0xF104 0x002E      ADD      R0,R4,#+46
   \   00000008   0x.... 0x....      BL       GUI_ARRAY_Delete
    205            WM_DeleteWindow(pObj->hListWin);
   \   0000000C   0xF9B4 0x0060      LDRSH    R0,[R4, #+96]
   \   00000010   0xE8BD 0x4010      POP      {R4,LR}
   \   00000014   0x.... 0x....      B.W      WM_DeleteWindow
    206          }
    207          
    208          /*********************************************************************
    209          *
    210          *       _Paint
    211          */

   \                                 In section .text, align 2, keep-with-next
    212          static void _Paint(DROPDOWN_Handle hObj) {
   \                     _Paint: (+1)
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB083             SUB      SP,SP,#+12
    213            int Border;
    214            GUI_RECT r;
    215            const char* s;
    216            int InnerSize, ColorIndex;
    217            DROPDOWN_Obj* pObj;
    218            int TextBorderSize;
    219            /* Do some initial calculations */
    220            pObj = DROPDOWN_H2P(hObj);
   \   00000006   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000000A   0x4604             MOV      R4,R0
    221            Border = pObj->Widget.pEffect->EffectSize;
   \   0000000C   0x6A20             LDR      R0,[R4, #+32]
   \   0000000E   0x6945             LDR      R5,[R0, #+20]
    222            TextBorderSize = pObj->Props.TextBorderSize;
   \   00000010   0xF9B4 0x805C      LDRSH    R8,[R4, #+92]
    223            GUI_SetFont(pObj->Props.pFont);
   \   00000014   0x6C20             LDR      R0,[R4, #+64]
   \   00000016   0x.... 0x....      BL       GUI_SetFont
    224            ColorIndex = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? 2 : 1;
   \   0000001A   0xF894 0x0026      LDRB     R0,[R4, #+38]
   \   0000001E   0x07C0             LSLS     R0,R0,#+31
   \   00000020   0xD502             BPL.N    ??_Paint_0
   \   00000022   0xF04F 0x0902      MOV      R9,#+2
   \   00000026   0xE001             B.N      ??_Paint_1
   \                     ??_Paint_0: (+1)
   \   00000028   0xF04F 0x0901      MOV      R9,#+1
    225            s = _GetpItem(pObj, pObj->Sel);
   \                     ??_Paint_1: (+1)
   \   0000002C   0xF9B4 0x1028      LDRSH    R1,[R4, #+40]
   \   00000030   0x4620             MOV      R0,R4
   \   00000032   0x.... 0x....      BL       _GetpItem
   \   00000036   0x4606             MOV      R6,R0
    226            WM_GetClientRect(&r);
   \   00000038   0xA800             ADD      R0,SP,#+0
   \   0000003A   0x.... 0x....      BL       WM_GetClientRect
    227            GUI__ReduceRect(&r, &r, Border);
   \   0000003E   0x462A             MOV      R2,R5
   \   00000040   0xA900             ADD      R1,SP,#+0
   \   00000042   0xA800             ADD      R0,SP,#+0
   \   00000044   0x.... 0x....      BL       GUI__ReduceRect
    228            InnerSize = r.y1 - r.y0 + 1;
   \   00000048   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   0000004C   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   00000050   0x1A40             SUBS     R0,R0,R1
   \   00000052   0x1C47             ADDS     R7,R0,#+1
    229            /* Draw the 3D effect (if configured) */
    230            WIDGET__EFFECT_DrawDown(&pObj->Widget);
   \   00000054   0x4620             MOV      R0,R4
   \   00000056   0x.... 0x....      BL       WIDGET__EFFECT_DrawDown
    231            /* Draw the outer text frames */
    232            r.x1 -= InnerSize;     /* Spare square area to the right */
   \   0000005A   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   0000005E   0x1BC0             SUBS     R0,R0,R7
   \   00000060   0xF8AD 0x0004      STRH     R0,[SP, #+4]
    233            LCD_SetColor(pObj->Props.aBackColor[ColorIndex]);
   \   00000064   0xEB04 0x0989      ADD      R9,R4,R9, LSL #+2
   \   00000068   0xF8D9 0x0044      LDR      R0,[R9, #+68]
   \   0000006C   0x.... 0x....      BL       LCD_SetColor
    234            /* Draw the text */
    235            LCD_SetBkColor(pObj->Props.aBackColor[ColorIndex]);
   \   00000070   0xF8D9 0x0044      LDR      R0,[R9, #+68]
   \   00000074   0x.... 0x....      BL       LCD_SetBkColor
    236            GUI_FillRectEx(&r);
   \   00000078   0xA800             ADD      R0,SP,#+0
   \   0000007A   0x.... 0x....      BL       GUI_FillRectEx
    237            r.x0 += TextBorderSize;
   \   0000007E   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000082   0x4440             ADD      R0,R8,R0
   \   00000084   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    238            r.x1 -= TextBorderSize;
   \   00000088   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   0000008C   0xEBA0 0x0008      SUB      R0,R0,R8
   \   00000090   0xF8AD 0x0004      STRH     R0,[SP, #+4]
    239            LCD_SetColor  (pObj->Props.aTextColor[ColorIndex]);
   \   00000094   0xF8D9 0x0050      LDR      R0,[R9, #+80]
   \   00000098   0x.... 0x....      BL       LCD_SetColor
    240            GUI_DispStringInRect(s, &r, pObj->Props.Align);/**/
   \   0000009C   0xF9B4 0x205E      LDRSH    R2,[R4, #+94]
   \   000000A0   0xA900             ADD      R1,SP,#+0
   \   000000A2   0x4630             MOV      R0,R6
   \   000000A4   0x.... 0x....      BL       GUI_DispStringInRect
    241            /* Draw arrow */
    242            WM_GetClientRect(&r);
   \   000000A8   0xA800             ADD      R0,SP,#+0
   \   000000AA   0x.... 0x....      BL       WM_GetClientRect
    243            GUI__ReduceRect(&r, &r, Border);
   \   000000AE   0x462A             MOV      R2,R5
   \   000000B0   0xA900             ADD      R1,SP,#+0
   \   000000B2   0xA800             ADD      R0,SP,#+0
   \   000000B4   0x.... 0x....      BL       GUI__ReduceRect
    244            r.x0 = r.x1 + 1 - InnerSize;
   \   000000B8   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   000000BC   0x1C40             ADDS     R0,R0,#+1
   \   000000BE   0x1BC0             SUBS     R0,R0,R7
   \   000000C0   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    245            LCD_SetColor(0xc0c0c0);
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0xc0c0c0
   \   000000C8   0x.... 0x....      BL       LCD_SetColor
    246            GUI_FillRectEx(&r);
   \   000000CC   0xA800             ADD      R0,SP,#+0
   \   000000CE   0x.... 0x....      BL       GUI_FillRectEx
    247            LCD_SetColor(GUI_BLACK);
   \   000000D2   0x2000             MOVS     R0,#+0
   \   000000D4   0x.... 0x....      BL       LCD_SetColor
    248            _DrawTriangleDown((r.x1 + r.x0) / 2, r.y0 + 5, (r.y1 - r.y0 - 8) / 2);
   \   000000D8   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   000000DC   0xF9BD 0x1006      LDRSH    R1,[SP, #+6]
   \   000000E0   0x1A09             SUBS     R1,R1,R0
   \   000000E2   0x3908             SUBS     R1,R1,#+8
   \   000000E4   0xF9BD 0x2004      LDRSH    R2,[SP, #+4]
   \   000000E8   0xF9BD 0x3000      LDRSH    R3,[SP, #+0]
   \   000000EC   0x189B             ADDS     R3,R3,R2
   \   000000EE   0xEB01 0x71D1      ADD      R1,R1,R1, LSR #+31
   \   000000F2   0x104A             ASRS     R2,R1,#+1
   \   000000F4   0x1D41             ADDS     R1,R0,#+5
   \   000000F6   0xEB03 0x70D3      ADD      R0,R3,R3, LSR #+31
   \   000000FA   0x1040             ASRS     R0,R0,#+1
   \   000000FC   0x.... 0x....      BL       _DrawTriangleDown
    249            WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
   \   00000100   0xA900             ADD      R1,SP,#+0
   \   00000102   0x4620             MOV      R0,R4
   \   00000104   0x.... 0x....      BL       WIDGET__EFFECT_DrawUpRect
    250          }
   \   00000108   0xE8BD 0x83F7      POP      {R0-R2,R4-R9,PC}  ;; return
    251          
    252          /*********************************************************************
    253          *
    254          *       _OnTouch
    255          */

   \                                 In section .text, align 2, keep-with-next
    256          static int _OnTouch(DROPDOWN_Handle hObj, WM_MESSAGE*pMsg) {
   \                     _OnTouch: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    257            const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
    258            if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
   \   00000002   0x6889             LDR      R1,[R1, #+8]
   \   00000004   0x2900             CMP      R1,#+0
   \   00000006   0xD00A             BEQ.N    ??_OnTouch_0
    259              if (pState->Pressed) {
   \   00000008   0x7A09             LDRB     R1,[R1, #+8]
   \   0000000A   0x2900             CMP      R1,#+0
   \   0000000C   0xD003             BEQ.N    ??_OnTouch_1
    260                WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x.... 0x....      BL       WM_NotifyParent
   \   00000014   0xE006             B.N      ??_OnTouch_2
    261              } else {
    262                WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
   \                     ??_OnTouch_1: (+1)
   \   00000016   0x2102             MOVS     R1,#+2
   \   00000018   0x.... 0x....      BL       WM_NotifyParent
   \   0000001C   0xE002             B.N      ??_OnTouch_2
    263              }
    264            } else {     /* Mouse moved out */
    265              WM_NotifyParent(hObj, WM_NOTIFICATION_MOVED_OUT);
   \                     ??_OnTouch_0: (+1)
   \   0000001E   0x2103             MOVS     R1,#+3
   \   00000020   0x.... 0x....      BL       WM_NotifyParent
    266            }
    267            return 0; /* Message handled */
   \                     ??_OnTouch_2: (+1)
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0xBD02             POP      {R1,PC}          ;; return
    268          }
    269          
    270          /*********************************************************************
    271          *
    272          *       DROPDOWN__AdjustHeight
    273          */

   \                                 In section .text, align 2, keep-with-next
    274          void DROPDOWN__AdjustHeight(DROPDOWN_Handle hObj, DROPDOWN_Obj* pObj) {
   \                     DROPDOWN__AdjustHeight: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    275            int Height;
    276            Height = pObj->TextHeight;
   \   00000006   0xF9B5 0x002C      LDRSH    R0,[R5, #+44]
    277            if (!Height) {
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD102             BNE.N    ??DROPDOWN__AdjustHeight_0
    278              Height = GUI_GetYDistOfFont(pObj->Props.pFont);
   \   0000000E   0x6C28             LDR      R0,[R5, #+64]
   \   00000010   0x.... 0x....      BL       GUI_GetYDistOfFont
    279            }
    280            Height += pObj->Widget.pEffect->EffectSize + 2 *  pObj->Props.TextBorderSize;
   \                     ??DROPDOWN__AdjustHeight_0: (+1)
   \   00000014   0x6A29             LDR      R1,[R5, #+32]
   \   00000016   0x6949             LDR      R1,[R1, #+20]
   \   00000018   0xF9B5 0x205C      LDRSH    R2,[R5, #+92]
   \   0000001C   0xEB01 0x0142      ADD      R1,R1,R2, LSL #+1
   \   00000020   0x180E             ADDS     R6,R1,R0
    281            WM_SetSize(hObj, WM__GetWindowSizeX(&pObj->Widget.Win), Height);
   \   00000022   0x4628             MOV      R0,R5
   \   00000024   0x.... 0x....      BL       WM__GetWindowSizeX
   \   00000028   0x4601             MOV      R1,R0
   \   0000002A   0x4632             MOV      R2,R6
   \   0000002C   0x4620             MOV      R0,R4
   \   0000002E   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000032   0x.... 0x....      B.W      WM_SetSize
    282          }
    283          
    284          /*********************************************************************
    285          *
    286          *       _DROPDOWN_Callback
    287          */

   \                                 In section .text, align 2, keep-with-next
    288          static void _DROPDOWN_Callback (WM_MESSAGE*pMsg) {
   \                     _DROPDOWN_Callback: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
    289            DROPDOWN_Handle hObj = pMsg->hWin;
   \   00000004   0xF9B4 0x5004      LDRSH    R5,[R4, #+4]
    290            DROPDOWN_Obj* pObj = DROPDOWN_H2P(hObj);
   \   00000008   0x4628             MOV      R0,R5
   \   0000000A   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000000E   0x4606             MOV      R6,R0
    291            char IsExpandedBeforeMsg;
    292            IsExpandedBeforeMsg = pObj->hListWin ? 1 : 0;
   \   00000010   0xF9B6 0x0060      LDRSH    R0,[R6, #+96]
   \   00000014   0x1E47             SUBS     R7,R0,#+1
   \   00000016   0x41BF             SBCS     R7,R7,R7
   \   00000018   0x43FF             MVNS     R7,R7
   \   0000001A   0x0FFF             LSRS     R7,R7,#+31
    293            /* Let widget handle the standard messages */
    294            if (WIDGET_HandleActive(hObj, pMsg) == 0) {
   \   0000001C   0x4621             MOV      R1,R4
   \   0000001E   0x4628             MOV      R0,R5
   \   00000020   0x.... 0x....      BL       WIDGET_HandleActive
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD01D             BEQ.N    ??_DROPDOWN_Callback_0
    295              return;
    296            }
    297            switch (pMsg->MsgId) {
   \   00000028   0x6820             LDR      R0,[R4, #+0]
   \   0000002A   0x280B             CMP      R0,#+11
   \   0000002C   0xD041             BEQ.N    ??_DROPDOWN_Callback_1
   \   0000002E   0x280C             CMP      R0,#+12
   \   00000030   0xD034             BEQ.N    ??_DROPDOWN_Callback_2
   \   00000032   0x280E             CMP      R0,#+14
   \   00000034   0xD041             BEQ.N    ??_DROPDOWN_Callback_3
   \   00000036   0x280F             CMP      R0,#+15
   \   00000038   0xD037             BEQ.N    ??_DROPDOWN_Callback_4
   \   0000003A   0x2811             CMP      R0,#+17
   \   0000003C   0xD023             BEQ.N    ??_DROPDOWN_Callback_5
   \   0000003E   0x2826             CMP      R0,#+38
   \   00000040   0xD10B             BNE.N    ??_DROPDOWN_Callback_6
    298            case WM_NOTIFY_PARENT:
    299              switch (pMsg->Data.v) {
   \   00000042   0x68A0             LDR      R0,[R4, #+8]
   \   00000044   0x2801             CMP      R0,#+1
   \   00000046   0xD00E             BEQ.N    ??_DROPDOWN_Callback_7
   \   00000048   0x280A             CMP      R0,#+10
   \   0000004A   0xD002             BEQ.N    ??_DROPDOWN_Callback_8
   \   0000004C   0x280B             CMP      R0,#+11
   \   0000004E   0xD016             BEQ.N    ??_DROPDOWN_Callback_9
   \   00000050   0xE003             B.N      ??_DROPDOWN_Callback_6
    300              case WM_NOTIFICATION_SCROLL_CHANGED:
    301                WM_NotifyParent(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
   \                     ??_DROPDOWN_Callback_8: (+1)
   \   00000052   0x210A             MOVS     R1,#+10
   \   00000054   0x4628             MOV      R0,R5
   \   00000056   0x.... 0x....      BL       WM_NotifyParent
    302                break;
    303              case WM_NOTIFICATION_CLICKED:
    304                DROPDOWN_SetSel(hObj, LISTBOX_GetSel(pObj->hListWin));
    305                WM_SetFocus(hObj);
    306                break;
    307              case LISTBOX_NOTIFICATION_LOST_FOCUS:
    308                DROPDOWN_Collapse(hObj);
    309                break;
    310              }
    311              break;
    312            case WM_PID_STATE_CHANGED:
    313              if (IsExpandedBeforeMsg == 0) {    /* Make sure we do not react a second time */
    314                const WM_PID_STATE_CHANGED_INFO * pInfo = (const WM_PID_STATE_CHANGED_INFO*)pMsg->Data.p;
    315                if (pInfo->State) {
    316                  DROPDOWN_Expand(hObj);
    317                }
    318              }
    319              break;
    320            case WM_TOUCH:
    321              if (_OnTouch(hObj, pMsg) == 0) {
    322                return;
    323              }
    324              break;
    325            case WM_PAINT:
    326              _Paint(hObj);
    327              break;
    328            case WM_DELETE:
    329              _FreeAttached(pObj);
    330              break;       /* No return here ... WM_DefaultProc needs to be called */
    331            case WM_KEY:
    332              if ( ((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt >0) {
    333                int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
    334                switch (Key) {
    335                  case GUI_KEY_TAB:
    336                    break;                    /* Send to parent by not doing anything */
    337                  default:
    338                    DROPDOWN_AddKey(hObj, Key);
    339                    return;
    340                }
    341              }
    342              break;
    343            }
    344            WM_DefaultProc(pMsg);
   \                     ??_DROPDOWN_Callback_6: (+1)
   \   0000005A   0x4620             MOV      R0,R4
   \   0000005C   0xE8BD 0x40F2      POP      {R1,R4-R7,LR}
   \   00000060   0x.... 0x....      B.W      WM_DefaultProc
   \                     ??_DROPDOWN_Callback_0: (+1)
   \   00000064   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   \                     ??_DROPDOWN_Callback_7: (+1)
   \   00000066   0xF9B6 0x0060      LDRSH    R0,[R6, #+96]
   \   0000006A   0x.... 0x....      BL       LISTBOX_GetSel
   \   0000006E   0x4601             MOV      R1,R0
   \   00000070   0x4628             MOV      R0,R5
   \   00000072   0x.... 0x....      BL       DROPDOWN_SetSel
   \   00000076   0x4628             MOV      R0,R5
   \   00000078   0x.... 0x....      BL       WM_SetFocus
   \   0000007C   0xE7ED             B.N      ??_DROPDOWN_Callback_6
   \                     ??_DROPDOWN_Callback_9: (+1)
   \   0000007E   0x4628             MOV      R0,R5
   \   00000080   0x.... 0x....      BL       DROPDOWN_Collapse
   \   00000084   0xE7E9             B.N      ??_DROPDOWN_Callback_6
   \                     ??_DROPDOWN_Callback_5: (+1)
   \   00000086   0xB27F             SXTB     R7,R7
   \   00000088   0x2F00             CMP      R7,#+0
   \   0000008A   0xD1E6             BNE.N    ??_DROPDOWN_Callback_6
   \   0000008C   0x68A0             LDR      R0,[R4, #+8]
   \   0000008E   0x7A00             LDRB     R0,[R0, #+8]
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xD0E2             BEQ.N    ??_DROPDOWN_Callback_6
   \   00000094   0x4628             MOV      R0,R5
   \   00000096   0x.... 0x....      BL       DROPDOWN_Expand
   \   0000009A   0xE7DE             B.N      ??_DROPDOWN_Callback_6
   \                     ??_DROPDOWN_Callback_2: (+1)
   \   0000009C   0x4621             MOV      R1,R4
   \   0000009E   0x4628             MOV      R0,R5
   \   000000A0   0x.... 0x....      BL       _OnTouch
   \   000000A4   0x2800             CMP      R0,#+0
   \   000000A6   0xD1D8             BNE.N    ??_DROPDOWN_Callback_6
   \   000000A8   0xBDF1             POP      {R0,R4-R7,PC}
   \                     ??_DROPDOWN_Callback_4: (+1)
   \   000000AA   0x4628             MOV      R0,R5
   \   000000AC   0x.... 0x....      BL       _Paint
   \   000000B0   0xE7D3             B.N      ??_DROPDOWN_Callback_6
   \                     ??_DROPDOWN_Callback_1: (+1)
   \   000000B2   0x4630             MOV      R0,R6
   \   000000B4   0x.... 0x....      BL       _FreeAttached
   \   000000B8   0xE7CF             B.N      ??_DROPDOWN_Callback_6
   \                     ??_DROPDOWN_Callback_3: (+1)
   \   000000BA   0x68A0             LDR      R0,[R4, #+8]
   \   000000BC   0x6841             LDR      R1,[R0, #+4]
   \   000000BE   0x2901             CMP      R1,#+1
   \   000000C0   0xDBCB             BLT.N    ??_DROPDOWN_Callback_6
   \   000000C2   0x6801             LDR      R1,[R0, #+0]
   \   000000C4   0x2909             CMP      R1,#+9
   \   000000C6   0xD0C8             BEQ.N    ??_DROPDOWN_Callback_6
   \   000000C8   0x4628             MOV      R0,R5
   \   000000CA   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   000000CE   0x....             B.N      DROPDOWN_AddKey
    345          }
    346          
    347          /*********************************************************************
    348          *
    349          *       Exported routines:  Create
    350          *
    351          **********************************************************************
    352          */
    353          /*********************************************************************
    354          *
    355          *       DROPDOWN_CreateEx
    356          */

   \                                 In section .text, align 2, keep-with-next
    357          DROPDOWN_Handle DROPDOWN_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
    358                                            int WinFlags, int ExFlags, int Id)
    359          {
   \                     DROPDOWN_CreateEx: (+1)
   \   00000000   0xB57F             PUSH     {R0-R6,LR}
   \   00000002   0x461C             MOV      R4,R3
    360            DROPDOWN_Handle hObj;
    361            hObj = WM_CreateWindowAsChild(x0, y0, xsize, -1, hParent, WinFlags, _DROPDOWN_Callback,
    362                                          sizeof(DROPDOWN_Obj) - sizeof(WM_Obj));
   \   00000004   0x2348             MOVS     R3,#+72
   \   00000006   0x9303             STR      R3,[SP, #+12]
   \   00000008   0x.... 0x....      LDR.W    R3,??DataTable3_1
   \   0000000C   0x9302             STR      R3,[SP, #+8]
   \   0000000E   0x9B09             LDR      R3,[SP, #+36]
   \   00000010   0xB29B             UXTH     R3,R3
   \   00000012   0x9301             STR      R3,[SP, #+4]
   \   00000014   0xF9BD 0x3020      LDRSH    R3,[SP, #+32]
   \   00000018   0x9300             STR      R3,[SP, #+0]
   \   0000001A   0xF04F 0x33FF      MOV      R3,#-1
   \   0000001E   0x.... 0x....      BL       WM_CreateWindowAsChild
   \   00000022   0x0005             MOVS     R5,R0
    363            if (hObj) {
   \   00000024   0xD017             BEQ.N    ??DROPDOWN_CreateEx_0
    364              DROPDOWN_Obj* pObj;
    365              WM_LOCK();
    366              pObj = DROPDOWN_H2P(hObj);
   \   00000026   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000002A   0x4606             MOV      R6,R0
    367              /* Init sub-classes */
    368              GUI_ARRAY_CREATE(&pObj->Handles);
    369              /* init widget specific variables */
    370              WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
   \   0000002C   0x2210             MOVS     R2,#+16
   \   0000002E   0x990B             LDR      R1,[SP, #+44]
   \   00000030   0x.... 0x....      BL       WIDGET__Init
    371              pObj->Flags          = ExFlags;
   \   00000034   0x980A             LDR      R0,[SP, #+40]
   \   00000036   0xF886 0x0062      STRB     R0,[R6, #+98]
    372              pObj->Props          = DROPDOWN__DefaultProps;
   \   0000003A   0xF106 0x0040      ADD      R0,R6,#+64
   \   0000003E   0x....             LDR.N    R1,??DataTable3_2
   \   00000040   0x2220             MOVS     R2,#+32
   \   00000042   0x.... 0x....      BL       __aeabi_memcpy4
    373              pObj->ScrollbarWidth = 0;
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0xF886 0x0066      STRB     R0,[R6, #+102]
    374              INIT_ID(pObj);
    375              pObj->ySizeEx = ysize;
   \   0000004C   0x8574             STRH     R4,[R6, #+42]
    376              DROPDOWN__AdjustHeight(hObj, pObj);
   \   0000004E   0x4631             MOV      R1,R6
   \   00000050   0x4628             MOV      R0,R5
   \   00000052   0x.... 0x....      BL       DROPDOWN__AdjustHeight
    377              WM_UNLOCK();
    378            }
    379            return hObj;
   \                     ??DROPDOWN_CreateEx_0: (+1)
   \   00000056   0x4628             MOV      R0,R5
   \   00000058   0xB004             ADD      SP,SP,#+16
   \   0000005A   0xBD70             POP      {R4-R6,PC}       ;; return
    380          }
    381          
    382          /*********************************************************************
    383          *
    384          *       Exported routines:  Various methods
    385          *
    386          **********************************************************************
    387          */
    388          
    389          /*********************************************************************
    390          *
    391          *       DROPDOWN_Collapse
    392          */

   \                                 In section .text, align 2, keep-with-next
    393          void DROPDOWN_Collapse(DROPDOWN_Handle hObj) {
    394            DROPDOWN_Obj* pObj;
    395            if (hObj) {
   \                     DROPDOWN_Collapse: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD100             BNE.N    ??DROPDOWN_Collapse_0
   \   00000004   0x4770             BX       LR
    396              WM_LOCK();
    397              pObj = DROPDOWN_H2P(hObj);
   \                     ??DROPDOWN_Collapse_0: (+1)
   \   00000006   0xB510             PUSH     {R4,LR}
   \   00000008   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000000C   0x4604             MOV      R4,R0
    398              if (pObj->hListWin) {
   \   0000000E   0xF9B4 0x0060      LDRSH    R0,[R4, #+96]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD004             BEQ.N    ??DROPDOWN_Collapse_1
    399                WM_DeleteWindow(pObj->hListWin);
   \   00000016   0x.... 0x....      BL       WM_DeleteWindow
    400                pObj->hListWin = 0;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0xF8A4 0x0060      STRH     R0,[R4, #+96]
    401              }
    402              WM_UNLOCK();
    403            }
    404          }
   \                     ??DROPDOWN_Collapse_1: (+1)
   \   00000020   0xBD10             POP      {R4,PC}          ;; return
    405          
    406          /*********************************************************************
    407          *
    408          *       DROPDOWN_Expand
    409          */

   \                                 In section .text, align 2, keep-with-next
    410          void DROPDOWN_Expand(DROPDOWN_Handle hObj) {
   \                     DROPDOWN_Expand: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB086             SUB      SP,SP,#+24
   \   00000006   0x0004             MOVS     R4,R0
    411            int xSize, ySize, i, NumItems;
    412            WM_HWIN hLst;
    413            GUI_RECT r;
    414            WM_HWIN hParent;
    415            WM_Obj* pParent;
    416            DROPDOWN_Obj* pObj;
    417            if (hObj) {
   \   00000008   0xF000 0x809A      BEQ.W    ??DROPDOWN_Expand_0
    418              WM_LOCK();
    419              pObj = DROPDOWN_H2P(hObj);
   \   0000000C   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000010   0x4605             MOV      R5,R0
    420              if  (pObj->hListWin == 0) {
   \   00000012   0xF105 0x0628      ADD      R6,R5,#+40
   \   00000016   0xF9B6 0x0038      LDRSH    R0,[R6, #+56]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xF040 0x8090      BNE.W    ??DROPDOWN_Expand_0
    421                hParent = WM_GetParent(hObj);
   \   00000020   0x4620             MOV      R0,R4
   \   00000022   0x.... 0x....      BL       WM_GetParent
    422                pParent = WM_H2P(hParent);
   \   00000026   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000002A   0x4682             MOV      R10,R0
    423                xSize = WM__GetWindowSizeX(&pObj->Widget.Win);
   \   0000002C   0x4628             MOV      R0,R5
   \   0000002E   0x.... 0x....      BL       WM__GetWindowSizeX
   \   00000032   0x4680             MOV      R8,R0
    424                ySize = pObj->ySizeEx;
   \   00000034   0xF9B6 0x9002      LDRSH    R9,[R6, #+2]
    425                NumItems = _GetNumItems(pObj);
   \   00000038   0x4628             MOV      R0,R5
   \   0000003A   0x.... 0x....      BL       _GetNumItems
   \   0000003E   0x4607             MOV      R7,R0
    426                /* Get coordinates of window in client coordiantes of parent */
    427                r = pObj->Widget.Win.Rect;
   \   00000040   0xA803             ADD      R0,SP,#+12
   \   00000042   0x4629             MOV      R1,R5
   \   00000044   0x2208             MOVS     R2,#+8
   \   00000046   0x.... 0x....      BL       __aeabi_memcpy
    428                GUI_MoveRect(&r, -pParent->Rect.x0, -pParent->Rect.y0);
   \   0000004A   0xF9BA 0x0002      LDRSH    R0,[R10, #+2]
   \   0000004E   0x4242             RSBS     R2,R0,#+0
   \   00000050   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   00000054   0x4241             RSBS     R1,R0,#+0
   \   00000056   0xA803             ADD      R0,SP,#+12
   \   00000058   0x.... 0x....      BL       GUI_MoveRect
    429                if (pObj->Flags & DROPDOWN_CF_UP) {
   \   0000005C   0xF895 0x0062      LDRB     R0,[R5, #+98]
   \   00000060   0x0780             LSLS     R0,R0,#+30
   \   00000062   0xD506             BPL.N    ??DROPDOWN_Expand_1
    430                  r.y0 -= ySize;
   \   00000064   0xF8BD 0x000E      LDRH     R0,[SP, #+14]
   \   00000068   0xEBA0 0x0009      SUB      R0,R0,R9
   \   0000006C   0xF8AD 0x000E      STRH     R0,[SP, #+14]
   \   00000070   0xE003             B.N      ??DROPDOWN_Expand_2
    431                } else {
    432                  r.y0 = r.y1;
   \                     ??DROPDOWN_Expand_1: (+1)
   \   00000072   0xF8BD 0x0012      LDRH     R0,[SP, #+18]
   \   00000076   0xF8AD 0x000E      STRH     R0,[SP, #+14]
    433                }
    434                hLst = LISTBOX_CreateAsChild(NULL, WM_GetParent(hObj), r.x0, r.y0
    435                                   , xSize, ySize, WM_CF_SHOW);
   \                     ??DROPDOWN_Expand_2: (+1)
   \   0000007A   0x4620             MOV      R0,R4
   \   0000007C   0x.... 0x....      BL       WM_GetParent
   \   00000080   0x4601             MOV      R1,R0
   \   00000082   0x2002             MOVS     R0,#+2
   \   00000084   0x9002             STR      R0,[SP, #+8]
   \   00000086   0xF8CD 0x9004      STR      R9,[SP, #+4]
   \   0000008A   0xF8CD 0x8000      STR      R8,[SP, #+0]
   \   0000008E   0xF9BD 0x300E      LDRSH    R3,[SP, #+14]
   \   00000092   0xF9BD 0x200C      LDRSH    R2,[SP, #+12]
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0x.... 0x....      BL       LISTBOX_CreateAsChild
   \   0000009C   0x4680             MOV      R8,R0
    436                if (pObj->Flags & DROPDOWN_SF_AUTOSCROLLBAR) {
   \   0000009E   0xF895 0x0062      LDRB     R0,[R5, #+98]
   \   000000A2   0x07C0             LSLS     R0,R0,#+31
   \   000000A4   0xD509             BPL.N    ??DROPDOWN_Expand_3
    437                  LISTBOX_SetScrollbarWidth(hLst, pObj->ScrollbarWidth);
   \   000000A6   0xF105 0x0062      ADD      R0,R5,#+98
   \   000000AA   0x7901             LDRB     R1,[R0, #+4]
   \   000000AC   0x4640             MOV      R0,R8
   \   000000AE   0x.... 0x....      BL       LISTBOX_SetScrollbarWidth
    438                  LISTBOX_SetAutoScrollV(hLst, 1);
   \   000000B2   0x2101             MOVS     R1,#+1
   \   000000B4   0x4640             MOV      R0,R8
   \   000000B6   0x.... 0x....      BL       LISTBOX_SetAutoScrollV
    439                }
    440                for (i = 0; i< NumItems; i++) {
   \                     ??DROPDOWN_Expand_3: (+1)
   \   000000BA   0xF04F 0x0900      MOV      R9,#+0
   \   000000BE   0xE009             B.N      ??DROPDOWN_Expand_4
    441                  LISTBOX_AddString(hLst, _GetpItem(pObj, i));
   \                     ??DROPDOWN_Expand_5: (+1)
   \   000000C0   0x4649             MOV      R1,R9
   \   000000C2   0x4628             MOV      R0,R5
   \   000000C4   0x.... 0x....      BL       _GetpItem
   \   000000C8   0x4601             MOV      R1,R0
   \   000000CA   0x4640             MOV      R0,R8
   \   000000CC   0x.... 0x....      BL       LISTBOX_AddString
    442                }
   \   000000D0   0xF109 0x0901      ADD      R9,R9,#+1
   \                     ??DROPDOWN_Expand_4: (+1)
   \   000000D4   0x45B9             CMP      R9,R7
   \   000000D6   0xDBF3             BLT.N    ??DROPDOWN_Expand_5
    443                for (i = 0; i < GUI_COUNTOF(pObj->Props.aBackColor); i++) {
   \   000000D8   0x2700             MOVS     R7,#+0
   \   000000DA   0xE007             B.N      ??DROPDOWN_Expand_6
    444                  LISTBOX_SetBkColor(hLst, i, pObj->Props.aBackColor[i]);
   \                     ??DROPDOWN_Expand_7: (+1)
   \   000000DC   0xEB05 0x0087      ADD      R0,R5,R7, LSL #+2
   \   000000E0   0x6C42             LDR      R2,[R0, #+68]
   \   000000E2   0x4639             MOV      R1,R7
   \   000000E4   0x4640             MOV      R0,R8
   \   000000E6   0x.... 0x....      BL       LISTBOX_SetBkColor
    445                }
   \   000000EA   0x1C7F             ADDS     R7,R7,#+1
   \                     ??DROPDOWN_Expand_6: (+1)
   \   000000EC   0x2F03             CMP      R7,#+3
   \   000000EE   0xD3F5             BCC.N    ??DROPDOWN_Expand_7
    446                for (i = 0; i < GUI_COUNTOF(pObj->Props.aTextColor); i++) {
   \   000000F0   0x2700             MOVS     R7,#+0
   \   000000F2   0xE007             B.N      ??DROPDOWN_Expand_8
    447                  LISTBOX_SetTextColor(hLst, i, pObj->Props.aTextColor[i]);
   \                     ??DROPDOWN_Expand_9: (+1)
   \   000000F4   0xEB05 0x0087      ADD      R0,R5,R7, LSL #+2
   \   000000F8   0x6D02             LDR      R2,[R0, #+80]
   \   000000FA   0x4639             MOV      R1,R7
   \   000000FC   0x4640             MOV      R0,R8
   \   000000FE   0x.... 0x....      BL       LISTBOX_SetTextColor
    448                }
   \   00000102   0x1C7F             ADDS     R7,R7,#+1
   \                     ??DROPDOWN_Expand_8: (+1)
   \   00000104   0x2F03             CMP      R7,#+3
   \   00000106   0xD3F5             BCC.N    ??DROPDOWN_Expand_9
    449                LISTBOX_SetItemSpacing(hLst, pObj->ItemSpacing);
   \   00000108   0xF105 0x0062      ADD      R0,R5,#+98
   \   0000010C   0x8841             LDRH     R1,[R0, #+2]
   \   0000010E   0x4640             MOV      R0,R8
   \   00000110   0x.... 0x....      BL       LISTBOX_SetItemSpacing
    450                LISTBOX_SetFont(hLst, pObj->Props.pFont);
   \   00000114   0x69B1             LDR      R1,[R6, #+24]
   \   00000116   0x4640             MOV      R0,R8
   \   00000118   0x.... 0x....      BL       LISTBOX_SetFont
    451                WM_SetFocus(hLst);
   \   0000011C   0x4640             MOV      R0,R8
   \   0000011E   0x.... 0x....      BL       WM_SetFocus
    452                pObj->hListWin = hLst;
   \   00000122   0xF8A6 0x8038      STRH     R8,[R6, #+56]
    453                LISTBOX_SetOwner(hLst, hObj);
   \   00000126   0x4621             MOV      R1,R4
   \   00000128   0x4640             MOV      R0,R8
   \   0000012A   0x.... 0x....      BL       LISTBOX_SetOwner
    454                LISTBOX_SetSel(hLst, pObj->Sel);
   \   0000012E   0xF9B5 0x1028      LDRSH    R1,[R5, #+40]
   \   00000132   0x4640             MOV      R0,R8
   \   00000134   0x.... 0x....      BL       LISTBOX_SetSel
    455                WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
   \   00000138   0x2101             MOVS     R1,#+1
   \   0000013A   0x4620             MOV      R0,R4
   \   0000013C   0x.... 0x....      BL       WM_NotifyParent
    456              }
    457              WM_UNLOCK();
    458            }
    459          }
   \                     ??DROPDOWN_Expand_0: (+1)
   \   00000140   0xB006             ADD      SP,SP,#+24
   \   00000142   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    460          
    461          /*********************************************************************
    462          *
    463          *       DROPDOWN_AddKey
    464          */

   \                                 In section .text, align 2, keep-with-next
    465          void DROPDOWN_AddKey(DROPDOWN_Handle hObj, int Key) {
    466            if (hObj) {
   \                     DROPDOWN_AddKey: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD007             BEQ.N    ??DROPDOWN_AddKey_0
    467              WM_LOCK();
    468              switch (Key) {
   \   00000004   0x460A             MOV      R2,R1
   \   00000006   0x2A11             CMP      R2,#+17
   \   00000008   0xD002             BEQ.N    ??DROPDOWN_AddKey_1
   \   0000000A   0x2A13             CMP      R2,#+19
   \   0000000C   0xD101             BNE.N    ??DROPDOWN_AddKey_2
    469                case GUI_KEY_DOWN:
    470                  DROPDOWN_IncSel(hObj);
   \   0000000E   0x....             B.N      DROPDOWN_IncSel
    471                  break;
    472                case GUI_KEY_UP:
    473                  DROPDOWN_DecSel(hObj);
   \                     ??DROPDOWN_AddKey_1: (+1)
   \   00000010   0x....             B.N      DROPDOWN_DecSel
    474                  break;
    475                default:
    476                  _SelectByKey(hObj, Key);
   \                     ??DROPDOWN_AddKey_2: (+1)
   \   00000012   0x....             B.N      _SelectByKey
    477                  break;
    478              }
    479              WM_UNLOCK();
    480            }
    481          }
   \                     ??DROPDOWN_AddKey_0: (+1)
   \   00000014   0x4770             BX       LR               ;; return
    482          
    483          /*********************************************************************
    484          *
    485          *       DROPDOWN_AddString
    486          */

   \                                 In section .text, align 2, keep-with-next
    487          void DROPDOWN_AddString(DROPDOWN_Handle hObj, const char* s) {
   \                     DROPDOWN_AddString: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    488            DROPDOWN_Obj* pObj;
    489            if (hObj && s) {
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD012             BEQ.N    ??DROPDOWN_AddString_0
   \   0000000A   0x2D00             CMP      R5,#+0
   \   0000000C   0xD010             BEQ.N    ??DROPDOWN_AddString_0
    490              WM_LOCK();
    491              pObj = DROPDOWN_H2P(hObj);
   \   0000000E   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000012   0x4606             MOV      R6,R0
    492              GUI_ARRAY_AddItem(&pObj->Handles, s, strlen(s) + 1);
   \   00000014   0x4628             MOV      R0,R5
   \   00000016   0x.... 0x....      BL       strlen
   \   0000001A   0x1C42             ADDS     R2,R0,#+1
   \   0000001C   0x4629             MOV      R1,R5
   \   0000001E   0xF106 0x002E      ADD      R0,R6,#+46
   \   00000022   0x.... 0x....      BL       GUI_ARRAY_AddItem
    493              DROPDOWN_Invalidate(hObj);
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000002C   0x.... 0x....      B.W      WM_InvalidateWindow
    494              WM_UNLOCK();
    495            }
    496          }
   \                     ??DROPDOWN_AddString_0: (+1)
   \   00000030   0xBD70             POP      {R4-R6,PC}       ;; return
    497          
    498          /*********************************************************************
    499          *
    500          *       DROPDOWN_GetNumItems
    501          */

   \                                 In section .text, align 2, keep-with-next
    502          int DROPDOWN_GetNumItems(DROPDOWN_Handle hObj) {
   \                     DROPDOWN_GetNumItems: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x4601             MOV      R1,R0
    503            DROPDOWN_Obj* pObj;
    504            int r = 0;
   \   00000004   0x2000             MOVS     R0,#+0
    505            if (hObj) {
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD005             BEQ.N    ??DROPDOWN_GetNumItems_0
    506              WM_LOCK();
    507              pObj = DROPDOWN_H2P(hObj);
   \   0000000A   0x4608             MOV      R0,R1
   \   0000000C   0x.... 0x....      BL       GUI_ALLOC_h2p
    508              ASSERT_IS_VALID_PTR(pObj);
    509              r = _GetNumItems(pObj);
   \   00000010   0xE8BD 0x4002      POP      {R1,LR}
   \   00000014   0x....             B.N      _GetNumItems
    510              WM_UNLOCK();
    511            }
    512            return r;
   \                     ??DROPDOWN_GetNumItems_0: (+1)
   \   00000016   0xBD02             POP      {R1,PC}          ;; return
    513          }
    514          
    515          /*********************************************************************
    516          *
    517          *       DROPDOWN_SetFont
    518          */

   \                                 In section .text, align 2, keep-with-next
    519          void DROPDOWN_SetFont(DROPDOWN_Handle hObj, const GUI_FONT GUI_UNI_PTR * pfont) {
   \                     DROPDOWN_SetFont: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    520            int OldHeight;
    521            DROPDOWN_Obj* pObj;
    522            if (hObj) {
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD024             BEQ.N    ??DROPDOWN_SetFont_0
    523              WM_LOCK();
    524              pObj = DROPDOWN_H2P(hObj);
   \   0000000A   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000000E   0x4606             MOV      R6,R0
    525              ASSERT_IS_VALID_PTR(pObj);
    526              OldHeight = GUI_GetYDistOfFont(pObj->Props.pFont);
   \   00000010   0x6C30             LDR      R0,[R6, #+64]
   \   00000012   0x.... 0x....      BL       GUI_GetYDistOfFont
   \   00000016   0x4607             MOV      R7,R0
    527              pObj->Props.pFont = pfont;
   \   00000018   0x6435             STR      R5,[R6, #+64]
    528              DROPDOWN__AdjustHeight(hObj, pObj);
   \   0000001A   0x4631             MOV      R1,R6
   \   0000001C   0x4620             MOV      R0,R4
   \   0000001E   0x.... 0x....      BL       DROPDOWN__AdjustHeight
    529              DROPDOWN_Invalidate(hObj);
   \   00000022   0x4620             MOV      R0,R4
   \   00000024   0x.... 0x....      BL       WM_InvalidateWindow
    530              if (pObj->hListWin) {
   \   00000028   0xF9B6 0x0060      LDRSH    R0,[R6, #+96]
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD011             BEQ.N    ??DROPDOWN_SetFont_0
    531                if (OldHeight != GUI_GetYDistOfFont(pObj->Props.pFont)) {
   \   00000030   0x6C30             LDR      R0,[R6, #+64]
   \   00000032   0x.... 0x....      BL       GUI_GetYDistOfFont
   \   00000036   0x4287             CMP      R7,R0
   \   00000038   0xD005             BEQ.N    ??DROPDOWN_SetFont_1
    532                  DROPDOWN_Collapse(hObj);
   \   0000003A   0x4620             MOV      R0,R4
   \   0000003C   0x.... 0x....      BL       DROPDOWN_Collapse
    533                  DROPDOWN_Expand(hObj);
   \   00000040   0x4620             MOV      R0,R4
   \   00000042   0x.... 0x....      BL       DROPDOWN_Expand
    534                }
    535                LISTBOX_SetFont(pObj->hListWin, pfont);
   \                     ??DROPDOWN_SetFont_1: (+1)
   \   00000046   0x4629             MOV      R1,R5
   \   00000048   0xF9B6 0x0060      LDRSH    R0,[R6, #+96]
   \   0000004C   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   00000050   0x.... 0x....      B.W      LISTBOX_SetFont
    536              }
    537              WM_UNLOCK();
    538            }
    539          }
   \                     ??DROPDOWN_SetFont_0: (+1)
   \   00000054   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    540          
    541          /*********************************************************************
    542          *
    543          *       DROPDOWN_SetBkColor
    544          */

   \                                 In section .text, align 2, keep-with-next
    545          void DROPDOWN_SetBkColor(DROPDOWN_Handle hObj, unsigned int Index, GUI_COLOR color) {
   \                     DROPDOWN_SetBkColor: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
    546            DROPDOWN_Obj* pObj;
    547            if (hObj) {
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD014             BEQ.N    ??DROPDOWN_SetBkColor_0
    548              if (Index < GUI_COUNTOF(pObj->Props.aBackColor)) {
   \   0000000C   0x2D03             CMP      R5,#+3
   \   0000000E   0xD212             BCS.N    ??DROPDOWN_SetBkColor_0
    549                WM_LOCK();
    550                pObj = DROPDOWN_H2P(hObj);
   \   00000010   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000014   0x4607             MOV      R7,R0
    551                ASSERT_IS_VALID_PTR(pObj);
    552                pObj->Props.aBackColor[Index] = color;
   \   00000016   0xEB07 0x0085      ADD      R0,R7,R5, LSL #+2
   \   0000001A   0x6446             STR      R6,[R0, #+68]
    553                DROPDOWN_Invalidate(hObj);
   \   0000001C   0x4620             MOV      R0,R4
   \   0000001E   0x.... 0x....      BL       WM_InvalidateWindow
    554                if (pObj->hListWin) {
   \   00000022   0xF9B7 0x0060      LDRSH    R0,[R7, #+96]
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD005             BEQ.N    ??DROPDOWN_SetBkColor_0
    555                  LISTBOX_SetBkColor(pObj->hListWin, Index, color);
   \   0000002A   0x4632             MOV      R2,R6
   \   0000002C   0x4629             MOV      R1,R5
   \   0000002E   0xE8BD 0x40F8      POP      {R3-R7,LR}
   \   00000032   0x.... 0x....      B.W      LISTBOX_SetBkColor
    556                }
    557                WM_UNLOCK();
    558              }
    559            }
    560          }
   \                     ??DROPDOWN_SetBkColor_0: (+1)
   \   00000036   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    561          
    562          /*********************************************************************
    563          *
    564          *       DROPDOWN_SetTextColor
    565          */

   \                                 In section .text, align 2, keep-with-next
    566          void DROPDOWN_SetTextColor(DROPDOWN_Handle hObj, unsigned int Index, GUI_COLOR color) {
   \                     DROPDOWN_SetTextColor: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
    567            DROPDOWN_Obj* pObj;
    568            if (hObj) {
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD014             BEQ.N    ??DROPDOWN_SetTextColor_0
    569              if (Index < GUI_COUNTOF(pObj->Props.aBackColor)) {
   \   0000000C   0x2D03             CMP      R5,#+3
   \   0000000E   0xD212             BCS.N    ??DROPDOWN_SetTextColor_0
    570                WM_LOCK();
    571                pObj = DROPDOWN_H2P(hObj);
   \   00000010   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000014   0x4607             MOV      R7,R0
    572                ASSERT_IS_VALID_PTR(pObj);
    573                pObj->Props.aTextColor[Index] = color;
   \   00000016   0xEB07 0x0085      ADD      R0,R7,R5, LSL #+2
   \   0000001A   0x6506             STR      R6,[R0, #+80]
    574                DROPDOWN_Invalidate(hObj);
   \   0000001C   0x4620             MOV      R0,R4
   \   0000001E   0x.... 0x....      BL       WM_InvalidateWindow
    575                if (pObj->hListWin) {
   \   00000022   0xF9B7 0x0060      LDRSH    R0,[R7, #+96]
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD005             BEQ.N    ??DROPDOWN_SetTextColor_0
    576                  LISTBOX_SetTextColor(pObj->hListWin, Index, color);
   \   0000002A   0x4632             MOV      R2,R6
   \   0000002C   0x4629             MOV      R1,R5
   \   0000002E   0xE8BD 0x40F8      POP      {R3-R7,LR}
   \   00000032   0x.... 0x....      B.W      LISTBOX_SetTextColor
    577                }
    578                WM_UNLOCK();
    579              }
    580            }
    581          }
   \                     ??DROPDOWN_SetTextColor_0: (+1)
   \   00000036   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    582          
    583          /*********************************************************************
    584          *
    585          *       DROPDOWN_SetSel
    586          */

   \                                 In section .text, align 2, keep-with-next
    587          void DROPDOWN_SetSel(DROPDOWN_Handle hObj, int Sel) {
   \                     DROPDOWN_SetSel: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    588            int NumItems, MaxSel;
    589            DROPDOWN_Obj* pObj;
    590            if (hObj) {
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD01A             BEQ.N    ??DROPDOWN_SetSel_0
    591              WM_LOCK();
    592              pObj = DROPDOWN_H2P(hObj);
   \   0000000A   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000000E   0x4606             MOV      R6,R0
    593              ASSERT_IS_VALID_PTR(pObj);
    594              NumItems = _GetNumItems(pObj);
   \   00000010   0x.... 0x....      BL       _GetNumItems
    595              MaxSel = NumItems ? NumItems-1 : 0;
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD001             BEQ.N    ??DROPDOWN_SetSel_1
   \   00000018   0x1E40             SUBS     R0,R0,#+1
   \   0000001A   0xE000             B.N      ??DROPDOWN_SetSel_2
   \                     ??DROPDOWN_SetSel_1: (+1)
   \   0000001C   0x2000             MOVS     R0,#+0
    596              if (Sel > MaxSel) {
   \                     ??DROPDOWN_SetSel_2: (+1)
   \   0000001E   0x42A8             CMP      R0,R5
   \   00000020   0xDC00             BGT.N    ??DROPDOWN_SetSel_3
   \   00000022   0x4605             MOV      R5,R0
    597                Sel = MaxSel;
    598              }
    599              if (Sel != pObj->Sel) {
   \                     ??DROPDOWN_SetSel_3: (+1)
   \   00000024   0xF9B6 0x0028      LDRSH    R0,[R6, #+40]
   \   00000028   0x4285             CMP      R5,R0
   \   0000002A   0xD009             BEQ.N    ??DROPDOWN_SetSel_0
    600                pObj->Sel = Sel;
   \   0000002C   0x8535             STRH     R5,[R6, #+40]
    601                DROPDOWN_Invalidate(hObj);
   \   0000002E   0x4620             MOV      R0,R4
   \   00000030   0x.... 0x....      BL       WM_InvalidateWindow
    602                WM_NotifyParent(hObj, WM_NOTIFICATION_SEL_CHANGED);
   \   00000034   0x2104             MOVS     R1,#+4
   \   00000036   0x4620             MOV      R0,R4
   \   00000038   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000003C   0x.... 0x....      B.W      WM_NotifyParent
    603              }
    604              WM_UNLOCK();
    605            }
    606          }
   \                     ??DROPDOWN_SetSel_0: (+1)
   \   00000040   0xBD70             POP      {R4-R6,PC}       ;; return
    607          
    608          /*********************************************************************
    609          *
    610          *       DROPDOWN_IncSel
    611          */

   \                                 In section .text, align 2, keep-with-next
    612          void DROPDOWN_IncSel(DROPDOWN_Handle hObj) {
   \                     DROPDOWN_IncSel: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    613            int Sel = DROPDOWN_GetSel(hObj);
   \   00000004   0x.... 0x....      BL       DROPDOWN_GetSel
    614            DROPDOWN_SetSel(hObj, Sel+1);
   \   00000008   0x1C41             ADDS     R1,R0,#+1
   \   0000000A   0x4620             MOV      R0,R4
   \   0000000C   0xE8BD 0x4010      POP      {R4,LR}
   \   00000010   0x....             B.N      DROPDOWN_SetSel
    615          }
    616          
    617          /*********************************************************************
    618          *
    619          *       DROPDOWN_DecSel
    620          */

   \                                 In section .text, align 2, keep-with-next
    621          void DROPDOWN_DecSel(DROPDOWN_Handle hObj) {
   \                     DROPDOWN_DecSel: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    622            int Sel = DROPDOWN_GetSel(hObj);
   \   00000004   0x.... 0x....      BL       DROPDOWN_GetSel
    623            if (Sel)
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD000             BEQ.N    ??DROPDOWN_DecSel_0
    624          	  Sel--;
   \   0000000C   0x1E40             SUBS     R0,R0,#+1
    625            DROPDOWN_SetSel(hObj, Sel);
   \                     ??DROPDOWN_DecSel_0: (+1)
   \   0000000E   0x4601             MOV      R1,R0
   \   00000010   0x4620             MOV      R0,R4
   \   00000012   0xE8BD 0x4010      POP      {R4,LR}
   \   00000016   0x....             B.N      DROPDOWN_SetSel
    626          }
    627          

   \                                 In section .text, align 2, keep-with-next
    628          int  DROPDOWN_GetSel (DROPDOWN_Handle hObj) {
   \                     DROPDOWN_GetSel: (+1)
   \   00000000   0x4601             MOV      R1,R0
    629            int r = 0;
   \   00000002   0x2000             MOVS     R0,#+0
    630            DROPDOWN_Obj* pObj;
    631            if (hObj) {
   \   00000004   0x2900             CMP      R1,#+0
   \   00000006   0xD100             BNE.N    ??DROPDOWN_GetSel_0
   \   00000008   0x4770             BX       LR
    632              WM_LOCK();
    633              pObj = DROPDOWN_H2P(hObj);
   \                     ??DROPDOWN_GetSel_0: (+1)
   \   0000000A   0xB580             PUSH     {R7,LR}
   \   0000000C   0x4608             MOV      R0,R1
   \   0000000E   0x.... 0x....      BL       GUI_ALLOC_h2p
    634              ASSERT_IS_VALID_PTR(pObj);
    635              r = pObj->Sel;
   \   00000012   0xF9B0 0x0028      LDRSH    R0,[R0, #+40]
    636              WM_UNLOCK();
    637            }
    638            return r;
   \   00000016   0xBD02             POP      {R1,PC}          ;; return
    639          }
    640          
    641          /*********************************************************************
    642          *
    643          *       DROPDOWN_SetScrollbarWidth
    644          */

   \                                 In section .text, align 2, keep-with-next
    645          void DROPDOWN_SetScrollbarWidth(DROPDOWN_Handle hObj, unsigned Width) {
   \                     DROPDOWN_SetScrollbarWidth: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x460C             MOV      R4,R1
    646            DROPDOWN_Obj* pObj;
    647            if (hObj) {
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD010             BEQ.N    ??DROPDOWN_SetScrollbarWidth_0
    648              WM_LOCK();
    649              pObj = DROPDOWN_H2P(hObj);
   \   00000008   0x.... 0x....      BL       GUI_ALLOC_h2p
    650              ASSERT_IS_VALID_PTR(pObj);
    651              if (Width != (unsigned)pObj->ScrollbarWidth) {
   \   0000000C   0xF100 0x0160      ADD      R1,R0,#+96
   \   00000010   0x798A             LDRB     R2,[R1, #+6]
   \   00000012   0x4294             CMP      R4,R2
   \   00000014   0xD009             BEQ.N    ??DROPDOWN_SetScrollbarWidth_0
    652                pObj->ScrollbarWidth = Width;
   \   00000016   0x718C             STRB     R4,[R1, #+6]
    653                if (pObj->hListWin) {
   \   00000018   0xF9B0 0x0060      LDRSH    R0,[R0, #+96]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD004             BEQ.N    ??DROPDOWN_SetScrollbarWidth_0
    654                  LISTBOX_SetScrollbarWidth(pObj->hListWin, Width);
   \   00000020   0x4621             MOV      R1,R4
   \   00000022   0xE8BD 0x4010      POP      {R4,LR}
   \   00000026   0x.... 0x....      B.W      LISTBOX_SetScrollbarWidth
    655                }
    656              }
    657              WM_UNLOCK();
    658            }  
    659          }
   \                     ??DROPDOWN_SetScrollbarWidth_0: (+1)
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
    660          
    661          /*********************************************************************
    662          *
    663          *       DROPDOWN_SetDefaultFont
    664          */

   \                                 In section .text, align 2, keep-with-next
    665          void DROPDOWN_SetDefaultFont(const GUI_FONT* pFont) {
    666            DROPDOWN__DefaultProps.pFont = pFont;
   \                     DROPDOWN_SetDefaultFont: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable3_2
   \   00000002   0x6008             STR      R0,[R1, #+0]
    667          }
   \   00000004   0x4770             BX       LR               ;; return
    668          
    669          /*********************************************************************
    670          *
    671          *       DROPDOWN_GetDefaultFont
    672          */

   \                                 In section .text, align 2, keep-with-next
    673          const GUI_FONT GUI_UNI_PTR * DROPDOWN_GetDefaultFont(void) {
    674            return DROPDOWN__DefaultProps.pFont;
   \                     DROPDOWN_GetDefaultFont: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3_2
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    675          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x00C0C0C0         DC32     0xc0c0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     _DROPDOWN_Callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     DROPDOWN__DefaultProps
    676          
    677          
    678          #else                            /* Avoid problems with empty object modules */
    679            void DROPDOWN_C(void) {}
    680          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   DROPDOWN_AddKey
         0   -> DROPDOWN_DecSel
         0   -> DROPDOWN_IncSel
         0   -> _SelectByKey
      16   DROPDOWN_AddString
        16   -> GUI_ALLOC_h2p
        16   -> GUI_ARRAY_AddItem
         0   -> WM_InvalidateWindow
        16   -> strlen
       8   DROPDOWN_Collapse
         8   -> GUI_ALLOC_h2p
         8   -> WM_DeleteWindow
      32   DROPDOWN_CreateEx
        32   -> DROPDOWN__AdjustHeight
        32   -> GUI_ALLOC_h2p
        32   -> WIDGET__Init
        32   -> WM_CreateWindowAsChild
        32   -> __aeabi_memcpy4
       8   DROPDOWN_DecSel
         8   -> DROPDOWN_GetSel
         0   -> DROPDOWN_SetSel
      56   DROPDOWN_Expand
        56   -> GUI_ALLOC_h2p
        56   -> GUI_MoveRect
        56   -> LISTBOX_AddString
        56   -> LISTBOX_CreateAsChild
        56   -> LISTBOX_SetAutoScrollV
        56   -> LISTBOX_SetBkColor
        56   -> LISTBOX_SetFont
        56   -> LISTBOX_SetItemSpacing
        56   -> LISTBOX_SetOwner
        56   -> LISTBOX_SetScrollbarWidth
        56   -> LISTBOX_SetSel
        56   -> LISTBOX_SetTextColor
        56   -> WM_GetParent
        56   -> WM_NotifyParent
        56   -> WM_SetFocus
        56   -> WM__GetWindowSizeX
        56   -> _GetNumItems
        56   -> _GetpItem
        56   -> __aeabi_memcpy
       0   DROPDOWN_GetDefaultFont
       8   DROPDOWN_GetNumItems
         8   -> GUI_ALLOC_h2p
         0   -> _GetNumItems
       8   DROPDOWN_GetSel
         8   -> GUI_ALLOC_h2p
       8   DROPDOWN_IncSel
         8   -> DROPDOWN_GetSel
         0   -> DROPDOWN_SetSel
      24   DROPDOWN_SetBkColor
        24   -> GUI_ALLOC_h2p
         0   -> LISTBOX_SetBkColor
        24   -> WM_InvalidateWindow
       0   DROPDOWN_SetDefaultFont
      24   DROPDOWN_SetFont
        24   -> DROPDOWN_Collapse
        24   -> DROPDOWN_Expand
        24   -> DROPDOWN__AdjustHeight
        24   -> GUI_ALLOC_h2p
        24   -> GUI_GetYDistOfFont
         0   -> LISTBOX_SetFont
        24   -> WM_InvalidateWindow
       8   DROPDOWN_SetScrollbarWidth
         8   -> GUI_ALLOC_h2p
         0   -> LISTBOX_SetScrollbarWidth
      16   DROPDOWN_SetSel
        16   -> GUI_ALLOC_h2p
        16   -> WM_InvalidateWindow
         0   -> WM_NotifyParent
        16   -> _GetNumItems
      24   DROPDOWN_SetTextColor
        24   -> GUI_ALLOC_h2p
         0   -> LISTBOX_SetTextColor
        24   -> WM_InvalidateWindow
      16   DROPDOWN__AdjustHeight
        16   -> GUI_GetYDistOfFont
         0   -> WM_SetSize
        16   -> WM__GetWindowSizeX
      24   _DROPDOWN_Callback
         0   -> DROPDOWN_AddKey
        24   -> DROPDOWN_Collapse
        24   -> DROPDOWN_Expand
        24   -> DROPDOWN_SetSel
        24   -> GUI_ALLOC_h2p
        24   -> LISTBOX_GetSel
        24   -> WIDGET_HandleActive
         0   -> WM_DefaultProc
        24   -> WM_NotifyParent
        24   -> WM_SetFocus
        24   -> _FreeAttached
        24   -> _OnTouch
        24   -> _Paint
      16   _DrawTriangleDown
        16   -> GUI_DrawHLine
       8   _FreeAttached
         8   -> GUI_ARRAY_Delete
         0   -> WM_DeleteWindow
       0   _GetNumItems
       0   _GethItem
         0   -> GUI_ARRAY_GethItem
       8   _GetpItem
         8   -> GUI_ALLOC_h2p
         8   -> _GethItem
       8   _OnTouch
         8   -> WM_NotifyParent
      40   _Paint
        40   -> GUI_ALLOC_h2p
        40   -> GUI_DispStringInRect
        40   -> GUI_FillRectEx
        40   -> GUI_SetFont
        40   -> GUI__ReduceRect
        40   -> LCD_SetBkColor
        40   -> LCD_SetColor
        40   -> WIDGET__EFFECT_DrawDown
        40   -> WIDGET__EFFECT_DrawUpRect
        40   -> WM_GetClientRect
        40   -> _DrawTriangleDown
        40   -> _GetpItem
      24   _SelectByKey
         0   -> DROPDOWN_SetSel
        24   -> GUI_ALLOC_h2p
        24   -> _GetNumItems
        24   -> _GetpItem
        24   -> _Tolower
       0   _Tolower


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
      22  DROPDOWN_AddKey
      50  DROPDOWN_AddString
      34  DROPDOWN_Collapse
      92  DROPDOWN_CreateEx
      24  DROPDOWN_DecSel
     326  DROPDOWN_Expand
       6  DROPDOWN_GetDefaultFont
      24  DROPDOWN_GetNumItems
      24  DROPDOWN_GetSel
      18  DROPDOWN_IncSel
      56  DROPDOWN_SetBkColor
       6  DROPDOWN_SetDefaultFont
      86  DROPDOWN_SetFont
      44  DROPDOWN_SetScrollbarWidth
      66  DROPDOWN_SetSel
      56  DROPDOWN_SetTextColor
      54  DROPDOWN__AdjustHeight
      32  DROPDOWN__DefaultProps
     208  _DROPDOWN_Callback
      30  _DrawTriangleDown
      24  _FreeAttached
       4  _GetNumItems
       6  _GethItem
      22  _GetpItem
      40  _OnTouch
     268  _Paint
      70  _SelectByKey
      12  _Tolower

 
    32 bytes in section .data
 1 684 bytes in section .text
 
 1 684 bytes of CODE memory
    32 bytes of DATA memory

Errors: none
Warnings: none
