###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:42
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_DrawBitmapMag.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_DrawBitmapMag.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\GUI_DrawBitmapMag.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\GUI_DrawBitmapMag.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_DrawBitmapMag.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_DrawBitmapMag.C
     16          Purpose     : Implementation file for GUI_DrawBitmapMag
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stddef.h>           /* needed for definition of NULL */
     21          #include "GUI_Private.h"
     22          
     23          /*********************************************************************
     24          *
     25          *       Public code
     26          *
     27          **********************************************************************
     28          */
     29          /*********************************************************************
     30          *
     31          *       GUI_DrawBitmapMag
     32          */

   \                                 In section .text, align 4, keep-with-next
     33          void GUI_DrawBitmapMag(const GUI_BITMAP GUI_UNI_PTR *pBitmap, int x0, int y0, int xMul, int yMul) {
   \                     GUI_DrawBitmapMag: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB089             SUB      SP,SP,#+36
   \   00000006   0x4604             MOV      R4,R0
   \   00000008   0x4689             MOV      R9,R1
   \   0000000A   0x4692             MOV      R10,R2
   \   0000000C   0x461D             MOV      R5,R3
     34            GUI_DRAWMODE PrevDraw;
     35            int xSize, ySize;
     36            const GUI_LOGPALETTE GUI_UNI_PTR * pPal;
     37            const LCD_PIXELINDEX* pTrans;
     38            GUI_LOCK();
     39            pPal = pBitmap->pPal;
   \   0000000E   0xF8D4 0x800C      LDR      R8,[R4, #+12]
     40            xSize = pBitmap->XSize;
   \   00000012   0x8826             LDRH     R6,[R4, #+0]
     41            ySize = pBitmap->YSize;
   \   00000014   0x8860             LDRH     R0,[R4, #+2]
   \   00000016   0x9008             STR      R0,[SP, #+32]
     42            pTrans = LCD_GetpPalConvTable(pPal);
   \   00000018   0x4640             MOV      R0,R8
   \   0000001A   0x.... 0x....      BL       LCD_GetpPalConvTable
   \   0000001E   0x0007             MOVS     R7,R0
     43            if (!pTrans) {
   \   00000020   0xD105             BNE.N    ??GUI_DrawBitmapMag_0
     44              pTrans = (pBitmap->BitsPerPixel != 1) ? NULL : &LCD_BKCOLORINDEX;
   \   00000022   0x88E0             LDRH     R0,[R4, #+6]
   \   00000024   0x2801             CMP      R0,#+1
   \   00000026   0xD001             BEQ.N    ??GUI_DrawBitmapMag_1
   \   00000028   0x2700             MOVS     R7,#+0
   \   0000002A   0xE000             B.N      ??GUI_DrawBitmapMag_0
   \                     ??GUI_DrawBitmapMag_1: (+1)
   \   0000002C   0x4F2B             LDR.N    R7,??GUI_DrawBitmapMag_2
     45            }
     46            PrevDraw = GUI_SetDrawMode((pPal && pPal->HasTrans) ? GUI_DRAWMODE_TRANS : 0);
   \                     ??GUI_DrawBitmapMag_0: (+1)
   \   0000002E   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000032   0xD005             BEQ.N    ??GUI_DrawBitmapMag_3
   \   00000034   0xF998 0x0004      LDRSB    R0,[R8, #+4]
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD001             BEQ.N    ??GUI_DrawBitmapMag_3
   \   0000003C   0x2002             MOVS     R0,#+2
   \   0000003E   0xE000             B.N      ??GUI_DrawBitmapMag_4
   \                     ??GUI_DrawBitmapMag_3: (+1)
   \   00000040   0x2000             MOVS     R0,#+0
   \                     ??GUI_DrawBitmapMag_4: (+1)
   \   00000042   0x.... 0x....      BL       GUI_SetDrawMode
   \   00000046   0x4680             MOV      R8,R0
     47            #if (GUI_WINSUPPORT)
     48              WM_ADDORG(x0,y0);
   \   00000048   0x4824             LDR.N    R0,??GUI_DrawBitmapMag_2
   \   0000004A   0x6C01             LDR      R1,[R0, #+64]
   \   0000004C   0x4489             ADD      R9,R1,R9
   \   0000004E   0x6C40             LDR      R0,[R0, #+68]
   \   00000050   0x4482             ADD      R10,R0,R10
     49              {
     50                GUI_RECT r;
     51                r.x0 = x0;
   \   00000052   0x4648             MOV      R0,R9
   \   00000054   0xF8AD 0x0018      STRH     R0,[SP, #+24]
     52                r.x1 = x0 + xSize * xMul -1;
   \   00000058   0xFB05 0x9006      MLA      R0,R5,R6,R9
   \   0000005C   0x1E40             SUBS     R0,R0,#+1
   \   0000005E   0xF8AD 0x001C      STRH     R0,[SP, #+28]
     53                r.y0 = y0;
   \   00000062   0x4650             MOV      R0,R10
   \   00000064   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   \   00000068   0xF8DD 0xB048      LDR      R11,[SP, #+72]
     54                r.y1 = y0 + ySize * yMul -1;
   \   0000006C   0x9808             LDR      R0,[SP, #+32]
   \   0000006E   0xFB0B 0xA000      MLA      R0,R11,R0,R10
   \   00000072   0x1E40             SUBS     R0,R0,#+1
   \   00000074   0xF8AD 0x001E      STRH     R0,[SP, #+30]
     55                WM_ITERATE_START(&r);
   \   00000078   0xA806             ADD      R0,SP,#+24
   \   0000007A   0x.... 0x....      BL       WM__InitIVRSearch
   \   0000007E   0x2800             CMP      R0,#+0
   \   00000080   0xD026             BEQ.N    ??GUI_DrawBitmapMag_5
     56            #endif
     57            if (pBitmap->pMethods) {
   \                     ??GUI_DrawBitmapMag_6: (+1)
   \   00000082   0x68A0             LDR      R0,[R4, #+8]
   \   00000084   0xF8D4 0xC010      LDR      R12,[R4, #+16]
   \   00000088   0xF1BC 0x0F00      CMP      R12,#+0
   \   0000008C   0xD00D             BEQ.N    ??GUI_DrawBitmapMag_7
     58              #if GUI_COMPILER_SUPPORTS_FP      /* Do not support this on VERY simple chips and compilers */
     59                pBitmap->pMethods->pfDraw(x0, y0, pBitmap->XSize ,pBitmap->YSize, (U8 const *)pBitmap->pData, pBitmap->pPal, xMul, yMul);
   \   0000008E   0xF8CD 0xB00C      STR      R11,[SP, #+12]
   \   00000092   0x9502             STR      R5,[SP, #+8]
   \   00000094   0x68E1             LDR      R1,[R4, #+12]
   \   00000096   0x9101             STR      R1,[SP, #+4]
   \   00000098   0x9000             STR      R0,[SP, #+0]
   \   0000009A   0x8863             LDRH     R3,[R4, #+2]
   \   0000009C   0x8822             LDRH     R2,[R4, #+0]
   \   0000009E   0x4651             MOV      R1,R10
   \   000000A0   0x4648             MOV      R0,R9
   \   000000A2   0xF8DC 0xC000      LDR      R12,[R12, #+0]
   \   000000A6   0x47E0             BLX      R12
   \   000000A8   0xE00E             B.N      ??GUI_DrawBitmapMag_8
     60              #endif
     61            } else {
     62              LCD_DrawBitmap(x0, y0, xSize, ySize, xMul, yMul
     63                              ,pBitmap->BitsPerPixel, pBitmap->BytesPerLine
     64                              ,pBitmap->pData, pTrans);
   \                     ??GUI_DrawBitmapMag_7: (+1)
   \   000000AA   0x9705             STR      R7,[SP, #+20]
   \   000000AC   0x9004             STR      R0,[SP, #+16]
   \   000000AE   0x88A0             LDRH     R0,[R4, #+4]
   \   000000B0   0x9003             STR      R0,[SP, #+12]
   \   000000B2   0x88E0             LDRH     R0,[R4, #+6]
   \   000000B4   0x9002             STR      R0,[SP, #+8]
   \   000000B6   0xF8CD 0xB004      STR      R11,[SP, #+4]
   \   000000BA   0x9500             STR      R5,[SP, #+0]
   \   000000BC   0x9B08             LDR      R3,[SP, #+32]
   \   000000BE   0x4632             MOV      R2,R6
   \   000000C0   0x4651             MOV      R1,R10
   \   000000C2   0x4648             MOV      R0,R9
   \   000000C4   0x.... 0x....      BL       LCD_DrawBitmap
     65            }
     66            #if (GUI_WINSUPPORT)
     67                WM_ITERATE_END();
   \                     ??GUI_DrawBitmapMag_8: (+1)
   \   000000C8   0x.... 0x....      BL       WM__GetNextIVR
   \   000000CC   0x2800             CMP      R0,#+0
   \   000000CE   0xD1D8             BNE.N    ??GUI_DrawBitmapMag_6
     68              }
     69            #endif
     70            GUI_SetDrawMode(PrevDraw);
   \                     ??GUI_DrawBitmapMag_5: (+1)
   \   000000D0   0x4640             MOV      R0,R8
   \   000000D2   0x.... 0x....      BL       GUI_SetDrawMode
     71            GUI_UNLOCK();
     72          }
   \   000000D6   0xB009             ADD      SP,SP,#+36
   \   000000D8   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \                     ??GUI_DrawBitmapMag_2:
   \   000000DC   0x........         DC32     GUI_Context
     73          
     74          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      72   GUI_DrawBitmapMag
        72   -- Indirect call
        72   -> GUI_SetDrawMode
        72   -> LCD_DrawBitmap
        72   -> LCD_GetpPalConvTable
        72   -> WM__GetNextIVR
        72   -> WM__InitIVRSearch


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     224  GUI_DrawBitmapMag

 
 224 bytes in section .text
 
 224 bytes of CODE memory

Errors: none
Warnings: none
