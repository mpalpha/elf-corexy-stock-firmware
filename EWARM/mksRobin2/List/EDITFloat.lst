###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:13
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\EDITFloat.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\EDITFloat.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\EDITFloat.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\EDITFloat.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\EDITFloat.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : EditDec
     16          Purpose     : Edit decimal values
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <math.h>
     21          
     22          #include "EDIT.h"
     23          #include "GUIDebug.h"
     24          #include "GUI_Protected.h"
     25          #include "EDIT_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *             Exported routines
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       EDIT_SetFloatMode
     38          */

   \                                 In section .text, align 2, keep-with-next
     39          void EDIT_SetFloatMode(EDIT_Handle hEdit, float Value, float Min, float Max, int Shift, U8 Flags) {
   \                     EDIT_SetFloatMode: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB083             SUB      SP,SP,#+12
   \   00000006   0x4680             MOV      R8,R0
   \   00000008   0x468A             MOV      R10,R1
   \   0000000A   0x4691             MOV      R9,R2
   \   0000000C   0x469B             MOV      R11,R3
     40            I32 _Value, _Min, _Max;
     41            float Scale;
     42            if (hEdit) {
   \   0000000E   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000012   0xD03C             BEQ.N    ??EDIT_SetFloatMode_0
   \   00000014   0x9E0C             LDR      R6,[SP, #+48]
     43              WM_LOCK();
     44              Scale  =(float)GUI_Pow10[Shift];
   \   00000016   0x....             LDR.N    R0,??DataTable2
   \   00000018   0xF850 0x0026      LDR      R0,[R0, R6, LSL #+2]
   \   0000001C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000020   0x4607             MOV      R7,R0
     45              _Value = floor(Scale * Value + 0.5);
                            ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   00000022   0x2400             MOVS     R4,#+0
   \   00000024   0x....             LDR.N    R5,??DataTable2_1  ;; 0x3fe00000
   \   00000026   0x4651             MOV      R1,R10
   \   00000028   0x.... 0x....      BL       __aeabi_fmul
   \   0000002C   0x.... 0x....      BL       __aeabi_f2d
   \   00000030   0x4622             MOV      R2,R4
   \   00000032   0x462B             MOV      R3,R5
   \   00000034   0x.... 0x....      BL       __aeabi_dadd
   \   00000038   0x.... 0x....      BL       floor
   \   0000003C   0x.... 0x....      BL       __aeabi_d2iz
   \   00000040   0x4682             MOV      R10,R0
     46              _Min   = floor(Scale * Min + 0.5);
                            ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   00000042   0x4638             MOV      R0,R7
   \   00000044   0x4649             MOV      R1,R9
   \   00000046   0x.... 0x....      BL       __aeabi_fmul
   \   0000004A   0x.... 0x....      BL       __aeabi_f2d
   \   0000004E   0x4622             MOV      R2,R4
   \   00000050   0x462B             MOV      R3,R5
   \   00000052   0x.... 0x....      BL       __aeabi_dadd
   \   00000056   0x.... 0x....      BL       floor
   \   0000005A   0x.... 0x....      BL       __aeabi_d2iz
   \   0000005E   0x4681             MOV      R9,R0
     47              _Max   = floor(Scale * Max + 0.5);
                            ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   00000060   0x4638             MOV      R0,R7
   \   00000062   0x4659             MOV      R1,R11
   \   00000064   0x.... 0x....      BL       __aeabi_fmul
   \   00000068   0x.... 0x....      BL       __aeabi_f2d
   \   0000006C   0x4622             MOV      R2,R4
   \   0000006E   0x462B             MOV      R3,R5
   \   00000070   0x.... 0x....      BL       __aeabi_dadd
   \   00000074   0x.... 0x....      BL       floor
   \   00000078   0x.... 0x....      BL       __aeabi_d2iz
     48              EDIT_SetDecMode(hEdit, _Value, _Min, _Max, Shift, Flags);
   \   0000007C   0x990D             LDR      R1,[SP, #+52]
   \   0000007E   0x9101             STR      R1,[SP, #+4]
   \   00000080   0x9600             STR      R6,[SP, #+0]
   \   00000082   0x4603             MOV      R3,R0
   \   00000084   0x464A             MOV      R2,R9
   \   00000086   0x4651             MOV      R1,R10
   \   00000088   0x4640             MOV      R0,R8
   \   0000008A   0x.... 0x....      BL       EDIT_SetDecMode
     49              WM_UNLOCK();
     50            }
     51          }
   \                     ??EDIT_SetFloatMode_0: (+1)
   \   0000008E   0xE8BD 0x8FF7      POP      {R0-R2,R4-R11,PC}  ;; return
     52          
     53          /*********************************************************************
     54          *
     55          *       EDIT_GetFloatValue
     56          */

   \                                 In section .text, align 2, keep-with-next
     57          float EDIT_GetFloatValue(EDIT_Handle hObj) {
   \                     EDIT_GetFloatValue: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4601             MOV      R1,R0
     58            float Value = 0;
   \   00000004   0x2000             MOVS     R0,#+0
     59            if (hObj) {
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD014             BEQ.N    ??EDIT_GetFloatValue_0
     60              float Scale;
     61              EDIT_Obj * pObj;
     62              WM_LOCK();
     63              pObj  = EDIT_H2P(hObj);
   \   0000000A   0x4608             MOV      R0,R1
   \   0000000C   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000010   0x4604             MOV      R4,R0
     64              Scale = (float)GUI_Pow10[pObj->NumDecs];
     65              Value = (float)(I32)pObj->CurrentValue / Scale;
   \   00000012   0x6BE0             LDR      R0,[R4, #+60]
   \   00000014   0x.... 0x....      BL       __aeabi_i2f
   \   00000018   0x4605             MOV      R5,R0
   \   0000001A   0xF894 0x0038      LDRB     R0,[R4, #+56]
   \   0000001E   0x....             LDR.N    R1,??DataTable2
   \   00000020   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   00000024   0x.... 0x....      BL       __aeabi_ui2f
   \   00000028   0x4601             MOV      R1,R0
   \   0000002A   0x4628             MOV      R0,R5
   \   0000002C   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \   00000030   0x.... 0x....      B.W      __aeabi_fdiv
     66              WM_UNLOCK();
     67            }
     68            return Value;
   \                     ??EDIT_GetFloatValue_0: (+1)
   \   00000034   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     69          }
     70          
     71          /*********************************************************************
     72          *
     73          *       EDIT_SetFloatValue
     74          */

   \                                 In section .text, align 2, keep-with-next
     75          void EDIT_SetFloatValue(EDIT_Handle hObj, float Value) {
   \                     EDIT_SetFloatValue: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4606             MOV      R6,R0
   \   00000004   0x460F             MOV      R7,R1
     76            if (hObj) {
   \   00000006   0x2E00             CMP      R6,#+0
   \   00000008   0xD021             BEQ.N    ??EDIT_SetFloatValue_0
     77              float Scale;
     78              EDIT_Obj * pObj;
     79              WM_LOCK();
     80              pObj  = EDIT_H2P(hObj);
   \   0000000A   0x.... 0x....      BL       GUI_ALLOC_h2p
     81              Scale = (float)GUI_Pow10[pObj->NumDecs];
     82              Value *= Scale;
   \   0000000E   0xF890 0x0038      LDRB     R0,[R0, #+56]
   \   00000012   0x....             LDR.N    R1,??DataTable2
   \   00000014   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   00000018   0x.... 0x....      BL       __aeabi_ui2f
   \   0000001C   0x4639             MOV      R1,R7
   \   0000001E   0x.... 0x....      BL       __aeabi_fmul
     83              EDIT_SetValue(hObj, (I32)(Value + (Value >= 0 ? 0.5 : -0.5)));
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000028   0x460C             MOV      R4,R1
   \   0000002A   0xD801             BHI.N    ??EDIT_SetFloatValue_1
   \   0000002C   0x....             LDR.N    R5,??DataTable2_1  ;; 0x3fe00000
   \   0000002E   0xE000             B.N      ??EDIT_SetFloatValue_2
   \                     ??EDIT_SetFloatValue_1: (+1)
   \   00000030   0x....             LDR.N    R5,??DataTable2_2  ;; 0xbfe00000
   \                     ??EDIT_SetFloatValue_2: (+1)
   \   00000032   0x.... 0x....      BL       __aeabi_f2d
   \   00000036   0x4622             MOV      R2,R4
   \   00000038   0x462B             MOV      R3,R5
   \   0000003A   0x.... 0x....      BL       __aeabi_dadd
   \   0000003E   0x.... 0x....      BL       __aeabi_d2iz
   \   00000042   0x4601             MOV      R1,R0
   \   00000044   0x4630             MOV      R0,R6
   \   00000046   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   0000004A   0x.... 0x....      B.W      EDIT_SetValue
     84              WM_UNLOCK();
     85            }
     86          }
   \                     ??EDIT_SetFloatValue_0: (+1)
   \   0000004E   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     GUI_Pow10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x3FE00000         DC32     0x3fe00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0xBFE00000         DC32     0xbfe00000
     87          
     88          #else  /* avoid empty object files */
     89          
     90          void EditFloat_C(void);
     91          void EditFloat_C(void){}
     92          
     93          #endif /* GUI_WINSUPPORT */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   EDIT_GetFloatValue
        16   -> GUI_ALLOC_h2p
         0   -> __aeabi_fdiv
        16   -> __aeabi_i2f
        16   -> __aeabi_ui2f
      48   EDIT_SetFloatMode
        48   -> EDIT_SetDecMode
        48   -> __aeabi_d2iz
        48   -> __aeabi_dadd
        48   -> __aeabi_f2d
        48   -> __aeabi_fmul
        48   -> __aeabi_ui2f
        48   -> floor
      24   EDIT_SetFloatValue
         0   -> EDIT_SetValue
        24   -> GUI_ALLOC_h2p
        24   -> __aeabi_cfrcmple
        24   -> __aeabi_d2iz
        24   -> __aeabi_dadd
        24   -> __aeabi_f2d
        24   -> __aeabi_fmul
        24   -> __aeabi_ui2f


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
      54  EDIT_GetFloatValue
     146  EDIT_SetFloatMode
      80  EDIT_SetFloatValue

 
 292 bytes in section .text
 
 292 bytes of CODE memory

Errors: none
Warnings: 3
