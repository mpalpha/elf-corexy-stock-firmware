###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:12
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\WIDGET_FillStringInRect.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\WIDGET_FillStringInRect.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\WIDGET_FillStringInRect.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WIDGET_FillStringInRect.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\WIDGET_FillStringInRect.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WIDGET_FillStringInRect.c
     16          Purpose     : Implementation of widget function
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stdlib.h>
     21          
     22          #include "GUI_Protected.h"
     23          
     24          #if GUI_WINSUPPORT
     25          
     26          #include "WM.h"
     27          #include "WIDGET.h"
     28          
     29          /*********************************************************************
     30          *
     31          *       Private config defaults
     32          *
     33          **********************************************************************
     34          */
     35          
     36          #ifndef WIDGET_FILL_TEXT_USES_TRANS
     37            #define WIDGET_FILL_TEXT_USES_TRANS 0
     38          #endif
     39          
     40          /*********************************************************************
     41          *
     42          *       Public code
     43          *
     44          **********************************************************************
     45          */
     46          /*********************************************************************
     47          *
     48          *       WIDGET__FillStringInRect
     49          *
     50          * Purpose
     51          *
     52          * Parameters
     53          *
     54          * Notes
     55          */

   \                                 In section .text, align 4, keep-with-next
     56          void WIDGET__FillStringInRect(const char GUI_UNI_PTR * pText, const GUI_RECT * pFillRect, const GUI_RECT * pTextRectMax, const GUI_RECT * pTextRectAct) {
   \                     WIDGET__FillStringInRect: (+1)
   \   00000000   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4616             MOV      R6,R2
   \   0000000A   0x461F             MOV      R7,R3
     57            /* Check if we have anything to do at all ... */
     58            if (GUI_Context.pClipRect_HL) {
   \   0000000C   0xF8DF 0x80F4      LDR.W    R8,??WIDGET__FillStringInRect_0
   \   00000010   0xF8D8 0x0010      LDR      R0,[R8, #+16]
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD026             BEQ.N    ??WIDGET__FillStringInRect_1
     59              GUI_RECT r;
     60              r = *pFillRect;
   \   00000018   0xA800             ADD      R0,SP,#+0
   \   0000001A   0x2208             MOVS     R2,#+8
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy
     61              WM_ADDORG(r.x0, r.y0);
   \   00000020   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000024   0xF8D8 0x1040      LDR      R1,[R8, #+64]
   \   00000028   0x1808             ADDS     R0,R1,R0
   \   0000002A   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   0000002E   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   00000032   0xF8D8 0x1044      LDR      R1,[R8, #+68]
   \   00000036   0x1808             ADDS     R0,R1,R0
   \   00000038   0xF8AD 0x0002      STRH     R0,[SP, #+2]
     62              WM_ADDORG(r.x1, r.y1);
   \   0000003C   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000040   0xF8D8 0x1040      LDR      R1,[R8, #+64]
   \   00000044   0x1808             ADDS     R0,R1,R0
   \   00000046   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   \   0000004A   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   0000004E   0xF8D8 0x1044      LDR      R1,[R8, #+68]
   \   00000052   0x1808             ADDS     R0,R1,R0
   \   00000054   0xF8AD 0x0006      STRH     R0,[SP, #+6]
     63              if (GUI_RectsIntersect(GUI_Context.pClipRect_HL, &r) == 0)
   \   00000058   0xA900             ADD      R1,SP,#+0
   \   0000005A   0xF8D8 0x0010      LDR      R0,[R8, #+16]
   \   0000005E   0x.... 0x....      BL       GUI_RectsIntersect
   \   00000062   0x2800             CMP      R0,#+0
   \   00000064   0xD04B             BEQ.N    ??WIDGET__FillStringInRect_2
     64                return;
     65            }
     66          
     67            if (pText) {
   \                     ??WIDGET__FillStringInRect_1: (+1)
   \   00000066   0x2C00             CMP      R4,#+0
   \   00000068   0xD046             BEQ.N    ??WIDGET__FillStringInRect_3
     68              if (*pText) {             /* Speed optimization, not required */
   \   0000006A   0xF994 0x0000      LDRSB    R0,[R4, #+0]
   \   0000006E   0x2800             CMP      R0,#+0
   \   00000070   0xD042             BEQ.N    ??WIDGET__FillStringInRect_3
     69                const GUI_RECT* pOldClipRect;
     70          
     71          
     72                /* Fill border */
     73                #if WIDGET_FILL_TEXT_USES_TRANS
     74                  GUI_ClearRectEx(pFillRect);
     75                #else
     76                  {
     77                    GUI_RECT rText;
     78                    GUI__IntersectRects(&rText, pTextRectMax, pTextRectAct);
   \   00000072   0x463A             MOV      R2,R7
   \   00000074   0x4631             MOV      R1,R6
   \   00000076   0xA800             ADD      R0,SP,#+0
   \   00000078   0x.... 0x....      BL       GUI__IntersectRects
     79                    GUI_ClearRect(pFillRect->x0, pFillRect->y0, pFillRect->x1, rText.y0 - 1); /* Top */
   \   0000007C   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   00000080   0x1E43             SUBS     R3,R0,#+1
   \   00000082   0xF9B5 0x2004      LDRSH    R2,[R5, #+4]
   \   00000086   0xF9B5 0x1002      LDRSH    R1,[R5, #+2]
   \   0000008A   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   0000008E   0x.... 0x....      BL       GUI_ClearRect
     80                    GUI_ClearRect(pFillRect->x0, rText.y0,      rText.x0 - 1 , rText.y1);     /* Left */
   \   00000092   0xF9BD 0x3006      LDRSH    R3,[SP, #+6]
   \   00000096   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   0000009A   0x1E42             SUBS     R2,R0,#+1
   \   0000009C   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   000000A0   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   000000A4   0x.... 0x....      BL       GUI_ClearRect
     81                    GUI_ClearRect(rText.x1 + 1,  rText.y0,      pFillRect->x1, rText.y1);     /* Right */
   \   000000A8   0xF9BD 0x3006      LDRSH    R3,[SP, #+6]
   \   000000AC   0xF9B5 0x2004      LDRSH    R2,[R5, #+4]
   \   000000B0   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   000000B4   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   000000B8   0x1C40             ADDS     R0,R0,#+1
   \   000000BA   0x.... 0x....      BL       GUI_ClearRect
     82                    GUI_ClearRect(pFillRect->x0, rText.y1 + 1,  pFillRect->x1, pFillRect->y1);/* Bottom */
   \   000000BE   0xF9B5 0x3006      LDRSH    R3,[R5, #+6]
   \   000000C2   0xF9B5 0x2004      LDRSH    R2,[R5, #+4]
   \   000000C6   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   000000CA   0x1C41             ADDS     R1,R0,#+1
   \   000000CC   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   000000D0   0x.... 0x....      BL       GUI_ClearRect
     83                  }
     84                #endif
     85          
     86                /* Set clipping rectangle */
     87                pOldClipRect = WM_SetUserClipRect(pTextRectMax);
   \   000000D4   0x4630             MOV      R0,R6
   \   000000D6   0x.... 0x....      BL       WM_SetUserClipRect
   \   000000DA   0x4605             MOV      R5,R0
     88          
     89                /* Display text */
     90                #if WIDGET_FILL_TEXT_USES_TRANS
     91                  GUI_SetTextMode(GUI_TM_TRANS);
     92                #else
     93                  GUI_SetTextMode(GUI_TM_NORMAL);
   \   000000DC   0x2000             MOVS     R0,#+0
   \   000000DE   0x.... 0x....      BL       GUI_SetTextMode
     94                #endif
     95                GUI_DispStringAt(pText, pTextRectAct->x0, pTextRectAct->y0);
   \   000000E2   0xF9B7 0x2002      LDRSH    R2,[R7, #+2]
   \   000000E6   0xF9B7 0x1000      LDRSH    R1,[R7, #+0]
   \   000000EA   0x4620             MOV      R0,R4
   \   000000EC   0x.... 0x....      BL       GUI_DispStringAt
     96          
     97                /* Restore clipping rectangle */
     98                WM_SetUserClipRect(pOldClipRect);
   \   000000F0   0x4628             MOV      R0,R5
   \   000000F2   0x.... 0x....      BL       WM_SetUserClipRect
     99                return;
   \   000000F6   0xE002             B.N      ??WIDGET__FillStringInRect_2
    100              }
    101            }
    102            GUI_ClearRectEx(pFillRect);
   \                     ??WIDGET__FillStringInRect_3: (+1)
   \   000000F8   0x4628             MOV      R0,R5
   \   000000FA   0x.... 0x....      BL       GUI_ClearRectEx
    103          }
   \                     ??WIDGET__FillStringInRect_2: (+1)
   \   000000FE   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
   \   00000102   0xBF00             Nop      
   \                     ??WIDGET__FillStringInRect_0:
   \   00000104   0x........         DC32     GUI_Context
    104          
    105          #else  /* avoid empty object files */
    106          
    107          void WIDGET__FillStringInRect_C(void) {}
    108          
    109          #endif
    110          
    111          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   WIDGET__FillStringInRect
        32   -> GUI_ClearRect
        32   -> GUI_ClearRectEx
        32   -> GUI_DispStringAt
        32   -> GUI_RectsIntersect
        32   -> GUI_SetTextMode
        32   -> GUI__IntersectRects
        32   -> WM_SetUserClipRect
        32   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     264  WIDGET__FillStringInRect

 
 264 bytes in section .text
 
 264 bytes of CODE memory

Errors: none
Warnings: none
