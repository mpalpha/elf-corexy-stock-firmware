###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:00:44
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\ConvertColor\LCDP444_12_1.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\ConvertColor\LCDP444_12_1.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\LCDP444_12_1.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\LCDP444_12_1.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\ConvertColor\LCDP444_12_1.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : LCDP444_12_1.c
     16          Purpose     : Color conversion routines for LCD-drivers
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "LCD_Protected.h"    /* inter modul definitions */
     21          
     22          /*********************************************************************
     23          *
     24          *       Public code,
     25          *
     26          *       LCD_FIXEDPALETTE == 444, 4096 colors, RRRRGGGGBBBB----
     27          *
     28          **********************************************************************
     29          */
     30          /*********************************************************************
     31          *
     32          *       LCD_Color2Index_444_12_1
     33          */

   \                                 In section .text, align 2, keep-with-next
     34          unsigned LCD_Color2Index_444_12_1(LCD_COLOR Color) {
     35            unsigned int r,g,b;
     36            r = Color         & 255;
     37            g = (Color >> 8)  & 255;
     38            b = (Color >> 16) & 255;
     39            r = (r + 8) / 17;
     40            g = (g + 8) / 17;
     41            b = (b + 8) / 17;
     42            return (b << 4) + (g << 8) + (r << 12);
   \                     LCD_Color2Index_444_12_1: (+1)
   \   00000000   0xF3C0 0x4107      UBFX     R1,R0,#+16,#+8
   \   00000004   0x3108             ADDS     R1,R1,#+8
   \   00000006   0x2211             MOVS     R2,#+17
   \   00000008   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000000C   0xF3C0 0x2207      UBFX     R2,R0,#+8,#+8
   \   00000010   0x3208             ADDS     R2,R2,#+8
   \   00000012   0x2311             MOVS     R3,#+17
   \   00000014   0xFBB2 0xF2F3      UDIV     R2,R2,R3
   \   00000018   0x0212             LSLS     R2,R2,#+8
   \   0000001A   0xEB02 0x1101      ADD      R1,R2,R1, LSL #+4
   \   0000001E   0xB2C0             UXTB     R0,R0
   \   00000020   0x3008             ADDS     R0,R0,#+8
   \   00000022   0x461A             MOV      R2,R3
   \   00000024   0xFBB0 0xF0F2      UDIV     R0,R0,R2
   \   00000028   0xEB01 0x3000      ADD      R0,R1,R0, LSL #+12
   \   0000002C   0x4770             BX       LR               ;; return
     43          }
     44          
     45          /*********************************************************************
     46          *
     47          *       LCD_Index2Color_444_12_1
     48          */

   \                                 In section .text, align 2, keep-with-next
     49          LCD_COLOR LCD_Index2Color_444_12_1(int Index) {
     50            unsigned int r,g,b;
     51            /* Seperate the color masks */
     52            r = ((unsigned)Index >> 12) & 0xf;
     53            g = ((unsigned)Index >>  8) & 0xf;
     54            b = ((unsigned)Index >>  4) & 0xf;
     55            /* Convert the color masks */
     56            r = r * 17;
     57            g = g * 17;
     58            b = b * 17;
     59            return r + (g << 8) + (((U32)b) << 16);
   \                     LCD_Index2Color_444_12_1: (+1)
   \   00000000   0xF3C0 0x3103      UBFX     R1,R0,#+12,#+4
   \   00000004   0xEB01 0x1101      ADD      R1,R1,R1, LSL #+4
   \   00000008   0xF3C0 0x2203      UBFX     R2,R0,#+8,#+4
   \   0000000C   0xEB02 0x1202      ADD      R2,R2,R2, LSL #+4
   \   00000010   0xEB01 0x2102      ADD      R1,R1,R2, LSL #+8
   \   00000014   0xF3C0 0x1003      UBFX     R0,R0,#+4,#+4
   \   00000018   0xEB00 0x1000      ADD      R0,R0,R0, LSL #+4
   \   0000001C   0xEB01 0x4000      ADD      R0,R1,R0, LSL #+16
   \   00000020   0x4770             BX       LR               ;; return
     60          }
     61          
     62          /*********************************************************************
     63          *
     64          *       LCD_GetIndexMask_444_12_1
     65          */

   \                                 In section .text, align 2, keep-with-next
     66          unsigned LCD_GetIndexMask_444_12_1(void) {
     67            return 0xfff0;
   \                     LCD_GetIndexMask_444_12_1: (+1)
   \   00000000   0xF64F 0x70F0      MOVW     R0,#+65520
   \   00000004   0x4770             BX       LR               ;; return
     68          }
     69          
     70          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   LCD_Color2Index_444_12_1
       0   LCD_GetIndexMask_444_12_1
       0   LCD_Index2Color_444_12_1


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      46  LCD_Color2Index_444_12_1
       6  LCD_GetIndexMask_444_12_1
      34  LCD_Index2Color_444_12_1

 
 86 bytes in section .text
 
 86 bytes of CODE memory

Errors: none
Warnings: none
