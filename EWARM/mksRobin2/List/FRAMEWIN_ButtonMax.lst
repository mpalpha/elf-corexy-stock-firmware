###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:24
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\FRAMEWIN_ButtonMax.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\FRAMEWIN_ButtonMax.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\FRAMEWIN_ButtonMax.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\FRAMEWIN_ButtonMax.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\FRAMEWIN_ButtonMax.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : FRAMEWIN_ButtonMax.c
     16          Purpose     : 
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          
     21          #include <stdlib.h>
     22          #include <string.h>
     23          #include "GUI_Protected.h"
     24          #include "FRAMEWIN_Private.h"
     25          #include "BUTTON.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *        Static code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       Callback
     38          *
     39          * This is the overwritten callback routine for the button.
     40          * The primary reason for overwriting it is that we define the default
     41          * action of the Framewindow here.
     42          * It works as follows:
     43          * - User clicks and releases the button
     44          *   -> BUTTON sends WM_NOTIFY_PARENT to FRAMEWIN
     45          *     -> FRAMEWIN either a) reacts or b)sends WM_NOTIFY_PARENT_REFLECTION back
     46          *       In case of a) This module reacts !
     47          */

   \                                 In section .text, align 2, keep-with-next
     48          static void _cbMax(WM_MESSAGE* pMsg) {
   \                     _cbMax: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     49            if (pMsg->MsgId == WM_NOTIFY_PARENT_REFLECTION) {
   \   00000002   0x6801             LDR      R1,[R0, #+0]
   \   00000004   0x2927             CMP      R1,#+39
   \   00000006   0xD111             BNE.N    ??_cbMax_0
     50              WM_HWIN hWin = pMsg->hWinSrc;
   \   00000008   0xF9B0 0x4006      LDRSH    R4,[R0, #+6]
     51              FRAMEWIN_Obj* pObj = FRAMEWIN_H2P(hWin);
   \   0000000C   0x4620             MOV      R0,R4
   \   0000000E   0x.... 0x....      BL       GUI_ALLOC_h2p
     52              if (pObj->Flags & FRAMEWIN_SF_MAXIMIZED) {
   \   00000012   0xF890 0x005C      LDRB     R0,[R0, #+92]
   \   00000016   0x0600             LSLS     R0,R0,#+24
   \   00000018   0x4620             MOV      R0,R4
   \   0000001A   0xD503             BPL.N    ??_cbMax_1
     53                FRAMEWIN_Restore(hWin);
   \   0000001C   0xE8BD 0x4010      POP      {R4,LR}
   \   00000020   0x.... 0x....      B.W      FRAMEWIN_Restore
     54              } else {
     55                FRAMEWIN_Maximize(hWin);
   \                     ??_cbMax_1: (+1)
   \   00000024   0xE8BD 0x4010      POP      {R4,LR}
   \   00000028   0x.... 0x....      B.W      FRAMEWIN_Maximize
     56              }
     57              return;                                       /* We are done ! */
     58            }
     59            BUTTON_Callback(pMsg);
   \                     ??_cbMax_0: (+1)
   \   0000002C   0xE8BD 0x4010      POP      {R4,LR}
   \   00000030   0x.... 0x....      B.W      BUTTON_Callback
     60          }
     61          
     62          /*********************************************************************
     63          *
     64          *       _DrawMax
     65          */

   \                                 In section .text, align 2, keep-with-next
     66          static void _DrawMax(void) {
   \                     _DrawMax: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
     67            GUI_RECT r;
     68            WM_GetInsideRect(&r);
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x.... 0x....      BL       WM_GetInsideRect
     69            WM_ADDORG(r.x0, r.y0);
   \   0000000A   0x....             LDR.N    R0,??DataTable2
   \   0000000C   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   00000010   0x6C02             LDR      R2,[R0, #+64]
   \   00000012   0x1851             ADDS     R1,R2,R1
   \   00000014   0xF8AD 0x1000      STRH     R1,[SP, #+0]
   \   00000018   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   0000001C   0x6C42             LDR      R2,[R0, #+68]
   \   0000001E   0x1851             ADDS     R1,R2,R1
   \   00000020   0xF8AD 0x1002      STRH     R1,[SP, #+2]
     70            WM_ADDORG(r.x1, r.y1);
   \   00000024   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   00000028   0x6C02             LDR      R2,[R0, #+64]
   \   0000002A   0x1851             ADDS     R1,R2,R1
   \   0000002C   0xF8AD 0x1004      STRH     R1,[SP, #+4]
   \   00000030   0xF8BD 0x1006      LDRH     R1,[SP, #+6]
   \   00000034   0x6C40             LDR      R0,[R0, #+68]
   \   00000036   0x1840             ADDS     R0,R0,R1
   \   00000038   0xF8AD 0x0006      STRH     R0,[SP, #+6]
     71            WM_ITERATE_START(&r); {
   \   0000003C   0xA800             ADD      R0,SP,#+0
   \   0000003E   0x.... 0x....      BL       WM__InitIVRSearch
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD03A             BEQ.N    ??_DrawMax_0
     72              LCD_DrawHLine(r.x0 + 1, r.y0 + 1, r.x1 - 1);
   \                     ??_DrawMax_1: (+1)
   \   00000046   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   0000004A   0x1E42             SUBS     R2,R0,#+1
   \   0000004C   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   00000050   0x1C41             ADDS     R1,R0,#+1
   \   00000052   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000056   0x1C40             ADDS     R0,R0,#+1
   \   00000058   0x.... 0x....      BL       LCD_DrawHLine
     73              LCD_DrawHLine(r.x0 + 1, r.y0 + 2, r.x1 - 1);
   \   0000005C   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   00000060   0x1E42             SUBS     R2,R0,#+1
   \   00000062   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   00000066   0x1C81             ADDS     R1,R0,#+2
   \   00000068   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   0000006C   0x1C40             ADDS     R0,R0,#+1
   \   0000006E   0x.... 0x....      BL       LCD_DrawHLine
     74              LCD_DrawHLine(r.x0 + 1, r.y1 - 1, r.x1 - 1);
   \   00000072   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   00000076   0x1E42             SUBS     R2,R0,#+1
   \   00000078   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   0000007C   0x1E41             SUBS     R1,R0,#+1
   \   0000007E   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000082   0x1C40             ADDS     R0,R0,#+1
   \   00000084   0x.... 0x....      BL       LCD_DrawHLine
     75              LCD_DrawVLine(r.x0 + 1, r.y0 + 1, r.y1 - 1);
   \   00000088   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   0000008C   0x1E42             SUBS     R2,R0,#+1
   \   0000008E   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   00000092   0x1C41             ADDS     R1,R0,#+1
   \   00000094   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000098   0x1C40             ADDS     R0,R0,#+1
   \   0000009A   0x.... 0x....      BL       LCD_DrawVLine
     76              LCD_DrawVLine(r.x1 - 1, r.y0 + 1, r.y1 - 1);
   \   0000009E   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   000000A2   0x1E42             SUBS     R2,R0,#+1
   \   000000A4   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   000000A8   0x1C41             ADDS     R1,R0,#+1
   \   000000AA   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   000000AE   0x1E40             SUBS     R0,R0,#+1
   \   000000B0   0x.... 0x....      BL       LCD_DrawVLine
     77            } WM_ITERATE_END();
   \   000000B4   0x.... 0x....      BL       WM__GetNextIVR
   \   000000B8   0x2800             CMP      R0,#+0
   \   000000BA   0xD1C4             BNE.N    ??_DrawMax_1
     78          }
   \                     ??_DrawMax_0: (+1)
   \   000000BC   0xBD07             POP      {R0-R2,PC}       ;; return
     79          
     80          /*********************************************************************
     81          *
     82          *       _DrawRestore
     83          */

   \                                 In section .text, align 2, keep-with-next
     84          static void _DrawRestore(void) {
   \                     _DrawRestore: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
     85            GUI_RECT r;
     86            int Size;
     87            WM_GetInsideRect(&r);
   \   00000002   0xA800             ADD      R0,SP,#+0
   \   00000004   0x.... 0x....      BL       WM_GetInsideRect
     88            WM_ADDORG(r.x0, r.y0);
   \   00000008   0x....             LDR.N    R0,??DataTable2
   \   0000000A   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   0000000E   0x6C02             LDR      R2,[R0, #+64]
   \   00000010   0x1851             ADDS     R1,R2,R1
   \   00000012   0xF8AD 0x1000      STRH     R1,[SP, #+0]
   \   00000016   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   0000001A   0x6C42             LDR      R2,[R0, #+68]
   \   0000001C   0x1851             ADDS     R1,R2,R1
   \   0000001E   0xF8AD 0x1002      STRH     R1,[SP, #+2]
     89            WM_ADDORG(r.x1, r.y1);
   \   00000022   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   00000026   0x6C02             LDR      R2,[R0, #+64]
   \   00000028   0x1851             ADDS     R1,R2,R1
   \   0000002A   0xF8AD 0x1004      STRH     R1,[SP, #+4]
   \   0000002E   0xF8BD 0x2006      LDRH     R2,[SP, #+6]
   \   00000032   0x6C40             LDR      R0,[R0, #+68]
   \   00000034   0x1880             ADDS     R0,R0,R2
   \   00000036   0xF8AD 0x0006      STRH     R0,[SP, #+6]
     90            Size = ((r.x1 - r.x0 + 1) << 1) / 3;
   \   0000003A   0xB209             SXTH     R1,R1
   \   0000003C   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000040   0x1A08             SUBS     R0,R1,R0
   \   00000042   0x1C40             ADDS     R0,R0,#+1
   \   00000044   0x0040             LSLS     R0,R0,#+1
   \   00000046   0x2103             MOVS     R1,#+3
   \   00000048   0xFB90 0xF4F1      SDIV     R4,R0,R1
     91            WM_ITERATE_START(&r); {
   \   0000004C   0xA800             ADD      R0,SP,#+0
   \   0000004E   0x.... 0x....      BL       WM__InitIVRSearch
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD062             BEQ.N    ??_DrawRestore_0
     92              LCD_DrawHLine(r.x1 - Size, r.y0 + 1,        r.x1 - 1);
   \                     ??_DrawRestore_1: (+1)
   \   00000056   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   0000005A   0x1E42             SUBS     R2,R0,#+1
   \   0000005C   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   00000060   0x1C49             ADDS     R1,R1,#+1
   \   00000062   0x1B00             SUBS     R0,R0,R4
   \   00000064   0x.... 0x....      BL       LCD_DrawHLine
     93              LCD_DrawHLine(r.x1 - Size, r.y0 + 2,        r.x1 - 1);
   \   00000068   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   0000006C   0x1E42             SUBS     R2,R0,#+1
   \   0000006E   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   00000072   0x1C89             ADDS     R1,R1,#+2
   \   00000074   0x1B00             SUBS     R0,R0,R4
   \   00000076   0x.... 0x....      BL       LCD_DrawHLine
     94              LCD_DrawHLine(r.x0 + Size, r.y0 + Size,     r.x1 - 1);
   \   0000007A   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   0000007E   0x1E42             SUBS     R2,R0,#+1
   \   00000080   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   00000084   0x1821             ADDS     R1,R4,R0
   \   00000086   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   0000008A   0x1820             ADDS     R0,R4,R0
   \   0000008C   0x.... 0x....      BL       LCD_DrawHLine
     95              LCD_DrawVLine(r.x1 - Size, r.y0 + 1,        r.y1 - Size);
   \   00000090   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   00000094   0x1B02             SUBS     R2,R0,R4
   \   00000096   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   0000009A   0x1C41             ADDS     R1,R0,#+1
   \   0000009C   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   000000A0   0x1B00             SUBS     R0,R0,R4
   \   000000A2   0x.... 0x....      BL       LCD_DrawVLine
     96              LCD_DrawVLine(r.x1 - 1,    r.y0 + 1,        r.y0 + Size);
   \   000000A6   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   000000AA   0x1822             ADDS     R2,R4,R0
   \   000000AC   0x1C41             ADDS     R1,R0,#+1
   \   000000AE   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   000000B2   0x1E40             SUBS     R0,R0,#+1
   \   000000B4   0x.... 0x....      BL       LCD_DrawVLine
     97              LCD_DrawHLine(r.x0 + 1,    r.y1 - Size,     r.x0 + Size);
   \   000000B8   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   000000BC   0x1822             ADDS     R2,R4,R0
   \   000000BE   0xF9BD 0x1006      LDRSH    R1,[SP, #+6]
   \   000000C2   0x1B09             SUBS     R1,R1,R4
   \   000000C4   0x1C40             ADDS     R0,R0,#+1
   \   000000C6   0x.... 0x....      BL       LCD_DrawHLine
     98              LCD_DrawHLine(r.x0 + 1,    r.y1 - Size + 1, r.x0 + Size);
   \   000000CA   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   000000CE   0x1822             ADDS     R2,R4,R0
   \   000000D0   0xF9BD 0x1006      LDRSH    R1,[SP, #+6]
   \   000000D4   0x1B09             SUBS     R1,R1,R4
   \   000000D6   0x1C49             ADDS     R1,R1,#+1
   \   000000D8   0x1C40             ADDS     R0,R0,#+1
   \   000000DA   0x.... 0x....      BL       LCD_DrawHLine
     99              LCD_DrawHLine(r.x0 + 1,    r.y1 - 1,        r.x0 + Size);
   \   000000DE   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   000000E2   0x1822             ADDS     R2,R4,R0
   \   000000E4   0xF9BD 0x1006      LDRSH    R1,[SP, #+6]
   \   000000E8   0x1E49             SUBS     R1,R1,#+1
   \   000000EA   0x1C40             ADDS     R0,R0,#+1
   \   000000EC   0x.... 0x....      BL       LCD_DrawHLine
    100              LCD_DrawVLine(r.x0 + 1,    r.y1 - Size,     r.y1 - 1);
   \   000000F0   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   000000F4   0x1E42             SUBS     R2,R0,#+1
   \   000000F6   0x1B01             SUBS     R1,R0,R4
   \   000000F8   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   000000FC   0x1C40             ADDS     R0,R0,#+1
   \   000000FE   0x.... 0x....      BL       LCD_DrawVLine
    101              LCD_DrawVLine(r.x0 + Size, r.y1 - Size,     r.y1 - 1);
   \   00000102   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   00000106   0x1E42             SUBS     R2,R0,#+1
   \   00000108   0x1B01             SUBS     R1,R0,R4
   \   0000010A   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   0000010E   0x1820             ADDS     R0,R4,R0
   \   00000110   0x.... 0x....      BL       LCD_DrawVLine
    102            } WM_ITERATE_END();
   \   00000114   0x.... 0x....      BL       WM__GetNextIVR
   \   00000118   0x2800             CMP      R0,#+0
   \   0000011A   0xD19C             BNE.N    ??_DrawRestore_1
    103          }
   \                     ??_DrawRestore_0: (+1)
   \   0000011C   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    104          
    105          /*********************************************************************
    106          *
    107          *       _Draw
    108          */

   \                                 In section .text, align 2, keep-with-next
    109          static void _Draw(void) {
   \                     _Draw: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    110            FRAMEWIN_Obj* pObj;
    111            WM_HWIN hWin;
    112            hWin = WM_GetActiveWindow();
   \   00000002   0x.... 0x....      BL       WM_GetActiveWindow
    113            hWin = WM_GetParent(hWin);
   \   00000006   0x.... 0x....      BL       WM_GetParent
    114            pObj = FRAMEWIN_H2P(hWin);
   \   0000000A   0x.... 0x....      BL       GUI_ALLOC_h2p
    115            if (pObj->Flags & FRAMEWIN_SF_MAXIMIZED) {
   \   0000000E   0xF890 0x005C      LDRB     R0,[R0, #+92]
   \   00000012   0x0600             LSLS     R0,R0,#+24
   \   00000014   0xD502             BPL.N    ??_Draw_0
    116              _DrawRestore();
   \   00000016   0xE8BD 0x4001      POP      {R0,LR}
   \   0000001A   0x....             B.N      _DrawRestore
    117            } else {
    118              _DrawMax();
   \                     ??_Draw_0: (+1)
   \   0000001C   0xE8BD 0x4001      POP      {R0,LR}
   \   00000020   0x....             B.N      _DrawMax
    119            }
    120          }
    121          
    122          /*********************************************************************
    123          *
    124          *        Exported routines
    125          *
    126          **********************************************************************
    127          */
    128          /*********************************************************************
    129          *
    130          *       FRAMEWIN_AddMaxButton
    131          */

   \                                 In section .text, align 2, keep-with-next
    132          WM_HWIN FRAMEWIN_AddMaxButton(FRAMEWIN_Handle hObj, int Flags, int Off) {
   \                     FRAMEWIN_AddMaxButton: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    133            WM_HWIN hButton;
    134            hButton = FRAMEWIN_AddButton(hObj, Flags, Off, GUI_ID_MAXIMIZE);
   \   00000002   0x2307             MOVS     R3,#+7
   \   00000004   0x.... 0x....      BL       FRAMEWIN_AddButton
   \   00000008   0x4604             MOV      R4,R0
    135            BUTTON_SetSelfDraw(hButton, 0, &_Draw);
   \   0000000A   0x....             LDR.N    R2,??DataTable2_1
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x.... 0x....      BL       BUTTON_SetSelfDraw
    136            WM_SetCallback(hButton, _cbMax);
   \   00000012   0x....             LDR.N    R1,??DataTable2_2
   \   00000014   0x4620             MOV      R0,R4
   \   00000016   0x.... 0x....      BL       WM_SetCallback
    137            return hButton;
   \   0000001A   0x4620             MOV      R0,R4
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
    138          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     GUI_Context

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     _Draw

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     _cbMax
    139          
    140          #else
    141            void FRAMEWIN_ButtonMax_c(void) {} /* avoid empty object files */
    142          #endif /* GUI_WINSUPPORT */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   FRAMEWIN_AddMaxButton
         8   -> BUTTON_SetSelfDraw
         8   -> FRAMEWIN_AddButton
         8   -> WM_SetCallback
       8   _Draw
         8   -> GUI_ALLOC_h2p
         8   -> WM_GetActiveWindow
         8   -> WM_GetParent
         0   -> _DrawMax
         0   -> _DrawRestore
      16   _DrawMax
        16   -> LCD_DrawHLine
        16   -> LCD_DrawVLine
        16   -> WM_GetInsideRect
        16   -> WM__GetNextIVR
        16   -> WM__InitIVRSearch
      16   _DrawRestore
        16   -> LCD_DrawHLine
        16   -> LCD_DrawVLine
        16   -> WM_GetInsideRect
        16   -> WM__GetNextIVR
        16   -> WM__InitIVRSearch
       8   _cbMax
         0   -> BUTTON_Callback
         0   -> FRAMEWIN_Maximize
         0   -> FRAMEWIN_Restore
         8   -> GUI_ALLOC_h2p


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
      30  FRAMEWIN_AddMaxButton
      34  _Draw
     190  _DrawMax
     286  _DrawRestore
      52  _cbMax

 
 604 bytes in section .text
 
 604 bytes of CODE memory

Errors: none
Warnings: none
