###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:30
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_AddDecShift.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_AddDecShift.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\GUI_AddDecShift.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\GUI_AddDecShift.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_AddDecShift.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_AddDecShift.c
     16          Purpose     : Routines to display values as dec
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "GUI_Protected.h"
     21          #include "GUIDebug.h"
     22          #include "string.h"
     23          
     24          /*********************************************************************
     25          *
     26          *       Public data
     27          *
     28          **********************************************************************
     29          */
     30          

   \                                 In section .text, align 4, keep-with-next
     31          const U32 GUI_Pow10[10] = {
   \                     GUI_Pow10:
   \   00000000   0x00000001         DC32 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000
   \              0x0000000A   
   \              0x00000064   
   \              0x000003E8   
   \              0x00002710   
   \              0x000186A0   
   \              0x000F4240   
   \              0x00989680   
   \              0x05F5E100   
   \   00000024   0x3B9ACA00         DC32 1000000000
     32            1 , 10, 100, 1000, 10000,
     33            100000, 1000000, 10000000, 100000000, 1000000000
     34          };
     35          
     36          /*********************************************************************
     37          *
     38          *       Static routines
     39          *
     40          **********************************************************************
     41          */
     42          /*********************************************************************
     43          *
     44          *       _Check_NegLong
     45          */

   \                                 In section .text, align 2, keep-with-next
     46          static int _Check_NegLong(I32 *pv, char**ps) {
     47            if (*pv < 0) {
   \                     _Check_NegLong: (+1)
   \   00000000   0x6802             LDR      R2,[R0, #+0]
   \   00000002   0x2A00             CMP      R2,#+0
   \   00000004   0xD509             BPL.N    ??_Check_NegLong_0
     48              *(*ps)++ = '-';
   \   00000006   0x680A             LDR      R2,[R1, #+0]
   \   00000008   0x1C53             ADDS     R3,R2,#+1
   \   0000000A   0x600B             STR      R3,[R1, #+0]
   \   0000000C   0x212D             MOVS     R1,#+45
   \   0000000E   0x7011             STRB     R1,[R2, #+0]
     49              *pv = -*pv;
   \   00000010   0x6801             LDR      R1,[R0, #+0]
   \   00000012   0x4249             RSBS     R1,R1,#+0
   \   00000014   0x6001             STR      R1,[R0, #+0]
     50              return 1;
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x4770             BX       LR
     51            }
     52            return 0;
   \                     ??_Check_NegLong_0: (+1)
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x4770             BX       LR               ;; return
     53          }
     54          
     55          /*********************************************************************
     56          *
     57          *       Module internal routines
     58          *
     59          **********************************************************************
     60          */
     61          /*********************************************************************
     62          *
     63          *       GUI_Long2Len
     64          */

   \                                 In section .text, align 2, keep-with-next
     65          int GUI_Long2Len(I32 vSign) {
     66            int Len = 1;
   \                     GUI_Long2Len: (+1)
   \   00000000   0x2101             MOVS     R1,#+1
     67            I32 v = (vSign > 0) ? vSign : -vSign;
   \   00000002   0x0002             MOVS     R2,R0
   \   00000004   0xD502             BPL.N    ??GUI_Long2Len_0
   \   00000006   0x4252             RSBS     R2,R2,#+0
   \   00000008   0xE000             B.N      ??GUI_Long2Len_0
     68            while (( ((U32)v) >= GUI_Pow10[Len]) && (Len < 9)) {
     69              Len++;
   \                     ??GUI_Long2Len_1: (+1)
   \   0000000A   0x1C49             ADDS     R1,R1,#+1
     70            }
   \                     ??GUI_Long2Len_0: (+1)
   \   0000000C   0x.... 0x....      ADR.W    R3,GUI_Pow10
   \   00000010   0xF853 0x3021      LDR      R3,[R3, R1, LSL #+2]
   \   00000014   0x429A             CMP      R2,R3
   \   00000016   0xD301             BCC.N    ??GUI_Long2Len_2
   \   00000018   0x2909             CMP      R1,#+9
   \   0000001A   0xDBF6             BLT.N    ??GUI_Long2Len_1
     71            if (vSign < 0) {
   \                     ??GUI_Long2Len_2: (+1)
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD500             BPL.N    ??GUI_Long2Len_3
     72          		Len++;
   \   00000020   0x1C49             ADDS     R1,R1,#+1
     73            }
     74            return Len;
   \                     ??GUI_Long2Len_3: (+1)
   \   00000022   0x4608             MOV      R0,R1
   \   00000024   0x4770             BX       LR               ;; return
     75          }
     76          
     77          /*********************************************************************
     78          *
     79          *       GUI_AddSign
     80          */

   \                                 In section .text, align 2, keep-with-next
     81          long GUI_AddSign(long v, char**ps) {
   \                     GUI_AddSign: (+1)
   \   00000000   0xB410             PUSH     {R4}
     82            char c;
     83            if (v < 0) {
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD502             BPL.N    ??GUI_AddSign_0
     84              c = '-';
   \   00000006   0x222D             MOVS     R2,#+45
     85              v = -v;
   \   00000008   0x4240             RSBS     R0,R0,#+0
   \   0000000A   0xE000             B.N      ??GUI_AddSign_1
     86            } else {
     87              c = '+';
   \                     ??GUI_AddSign_0: (+1)
   \   0000000C   0x222B             MOVS     R2,#+43
     88            }
     89            *(*ps)++ = c;
   \                     ??GUI_AddSign_1: (+1)
   \   0000000E   0x680B             LDR      R3,[R1, #+0]
   \   00000010   0x1C5C             ADDS     R4,R3,#+1
   \   00000012   0x600C             STR      R4,[R1, #+0]
   \   00000014   0x701A             STRB     R2,[R3, #+0]
     90            **ps     = '\0';
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x6809             LDR      R1,[R1, #+0]
   \   0000001A   0x700A             STRB     R2,[R1, #+0]
     91            return v;
   \   0000001C   0xBC10             POP      {R4}
   \   0000001E   0x4770             BX       LR               ;; return
     92          }
     93          
     94          /*********************************************************************
     95          *
     96          *       Public routines
     97          *
     98          **********************************************************************
     99          */
    100          /*********************************************************************
    101          *
    102          *       GUI_AddDecShift
    103          */

   \                                 In section .text, align 2, keep-with-next
    104          void GUI_AddDecShift(I32 v, U8 Len, U8 Shift, char**ps) {
   \                     GUI_AddDecShift: (+1)
   \   00000000   0xB5F1             PUSH     {R0,R4-R7,LR}
   \   00000002   0x460E             MOV      R6,R1
   \   00000004   0x4614             MOV      R4,R2
   \   00000006   0x461D             MOV      R5,R3
    105            char c;
    106            long d;
    107            #ifndef _CM16C
    108              Len -= _Check_NegLong(&v, ps); /* TASKING: Tool internal error S003: asertion failed - please report */
   \   00000008   0x4629             MOV      R1,R5
   \   0000000A   0xA800             ADD      R0,SP,#+0
   \   0000000C   0x.... 0x....      BL       _Check_NegLong
   \   00000010   0x1A31             SUBS     R1,R6,R0
    109            #else
    110              if (v < 0) {
    111                *(*ps)++ = '-';
    112                v = -v;
    113              }
    114            #endif
    115            if (Shift) {
   \   00000012   0x2C00             CMP      R4,#+0
   \   00000014   0xD000             BEQ.N    ??GUI_AddDecShift_0
    116              Len--;
   \   00000016   0x1E49             SUBS     R1,R1,#+1
   \                     ??GUI_AddDecShift_0: (+1)
   \   00000018   0x.... 0x....      ADR.W    R0,GUI_Pow10
   \   0000001C   0xB2C9             UXTB     R1,R1
   \   0000001E   0xF850 0x2021      LDR      R2,[R0, R1, LSL #+2]
   \   00000022   0x9B00             LDR      R3,[SP, #+0]
   \   00000024   0x4293             CMP      R3,R2
   \   00000026   0xD31D             BCC.N    ??GUI_AddDecShift_1
    117            }
    118          #if GUI_DEBUG_LEVEL >1
    119            if (Len > 9) {
    120              Len = 9;
    121              GUI_DEBUG_ERROROUT("Can not display more than 9 dec. digits");
    122            }
    123          #endif
    124            if ((U32)v >= GUI_Pow10[Len])
    125          	v = GUI_Pow10[Len] - 1;
   \   00000028   0x1E52             SUBS     R2,R2,#+1
   \   0000002A   0x9200             STR      R2,[SP, #+0]
   \   0000002C   0xE01A             B.N      ??GUI_AddDecShift_1
    126            while (Len) {
    127              if (Len-- == Shift)
   \                     ??GUI_AddDecShift_2: (+1)
   \   0000002E   0x460A             MOV      R2,R1
   \   00000030   0x1E51             SUBS     R1,R2,#+1
   \   00000032   0x42A2             CMP      R2,R4
   \   00000034   0xD105             BNE.N    ??GUI_AddDecShift_3
    128                *(*ps)++ = GUI_DecChar;
   \   00000036   0x682A             LDR      R2,[R5, #+0]
   \   00000038   0x1C53             ADDS     R3,R2,#+1
   \   0000003A   0x602B             STR      R3,[R5, #+0]
   \   0000003C   0x....             LDR.N    R3,??DataTable1
   \   0000003E   0x781B             LDRB     R3,[R3, #+0]
   \   00000040   0x7013             STRB     R3,[R2, #+0]
    129              d = GUI_Pow10[Len];
   \                     ??GUI_AddDecShift_3: (+1)
   \   00000042   0xB2C9             UXTB     R1,R1
   \   00000044   0xF850 0x2021      LDR      R2,[R0, R1, LSL #+2]
    130              c = (char) (v / d);
   \   00000048   0x9B00             LDR      R3,[SP, #+0]
   \   0000004A   0xFB93 0xF3F2      SDIV     R3,R3,R2
   \   0000004E   0xB25B             SXTB     R3,R3
    131              v -= c * d;
   \   00000050   0x9E00             LDR      R6,[SP, #+0]
   \   00000052   0x461F             MOV      R7,R3
   \   00000054   0xFB02 0x6217      MLS      R2,R2,R7,R6
   \   00000058   0x9200             STR      R2,[SP, #+0]
    132              *(*ps)++ = c + '0';
   \   0000005A   0x682A             LDR      R2,[R5, #+0]
   \   0000005C   0x1C56             ADDS     R6,R2,#+1
   \   0000005E   0x602E             STR      R6,[R5, #+0]
   \   00000060   0x3330             ADDS     R3,R3,#+48
   \   00000062   0x7013             STRB     R3,[R2, #+0]
    133            }
   \                     ??GUI_AddDecShift_1: (+1)
   \   00000064   0x2900             CMP      R1,#+0
   \   00000066   0xD1E2             BNE.N    ??GUI_AddDecShift_2
    134            **ps = 0;
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x6829             LDR      R1,[R5, #+0]
   \   0000006C   0x7008             STRB     R0,[R1, #+0]
    135          }
   \   0000006E   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     GUI_DecChar
    136          
    137          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   GUI_AddDecShift
        24   -> _Check_NegLong
       4   GUI_AddSign
       0   GUI_Long2Len
       0   _Check_NegLong


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
     112  GUI_AddDecShift
      32  GUI_AddSign
      38  GUI_Long2Len
      40  GUI_Pow10
      30  _Check_NegLong

 
 256 bytes in section .text
 
 256 bytes of CODE memory

Errors: none
Warnings: none
