###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:16
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_AttachWindow.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_AttachWindow.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\WM_AttachWindow.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WM_AttachWindow.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_AttachWindow.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_AttachWindow.c
     16          Purpose     : Windows manager routines
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "WM_Intern.h"
     21          
     22          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     23          
     24          /*********************************************************************
     25          *
     26          *         Public code
     27          *
     28          **********************************************************************
     29          */
     30          /*********************************************************************
     31          *
     32          *       WM_DetachWindow
     33          */

   \                                 In section .text, align 2, keep-with-next
     34          void WM_DetachWindow(WM_HWIN hWin) {
   \                     WM_DetachWindow: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
     35            if (hWin) {
   \   00000004   0xD016             BEQ.N    ??WM_DetachWindow_0
     36              WM_HWIN hParent;
     37              WM_Obj* pWin;
     38              WM_LOCK();
     39              pWin = WM_H2P(hWin);
   \   00000006   0x.... 0x....      BL       GUI_ALLOC_h2p
     40              hParent = pWin->hParent;
   \   0000000A   0xF9B0 0x5016      LDRSH    R5,[R0, #+22]
     41              if (hParent) {
   \   0000000E   0x2D00             CMP      R5,#+0
   \   00000010   0xD010             BEQ.N    ??WM_DetachWindow_0
     42                WM_Obj* pParent;
     43                WM__DetachWindow(hWin);
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       WM__DetachWindow
     44                pParent = WM_H2P(hParent);
   \   00000018   0x4628             MOV      R0,R5
   \   0000001A   0x.... 0x....      BL       GUI_ALLOC_h2p
     45                WM_MoveWindow(hWin, -pParent->Rect.x0,  -pParent->Rect.y0);   /* Convert screen coordinates -> parent coordinates */
   \   0000001E   0xF9B0 0x1002      LDRSH    R1,[R0, #+2]
   \   00000022   0x424A             RSBS     R2,R1,#+0
   \   00000024   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000028   0x4241             RSBS     R1,R0,#+0
   \   0000002A   0x4620             MOV      R0,R4
   \   0000002C   0xE8BD 0x4038      POP      {R3-R5,LR}
   \   00000030   0x.... 0x....      B.W      WM_MoveWindow
     46                /* ToDo: Invalidate. If Parent window is located at (0,0). */
     47              }
     48              WM_UNLOCK();
     49            }
     50          }
   \                     ??WM_DetachWindow_0: (+1)
   \   00000034   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     51          
     52          /*********************************************************************
     53          *
     54          *       WM_AttachWindow
     55          */

   \                                 In section .text, align 2, keep-with-next
     56          void WM_AttachWindow(WM_HWIN hWin, WM_HWIN hParent) {
   \                     WM_AttachWindow: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     57            WM_LOCK();
     58            if (hParent && (hParent != hWin)) {
   \   00000006   0xD01C             BEQ.N    ??WM_AttachWindow_0
   \   00000008   0x42A5             CMP      R5,R4
   \   0000000A   0xD01A             BEQ.N    ??WM_AttachWindow_0
     59              WM_Obj* pWin    = WM_H2P(hWin);
   \   0000000C   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000010   0x4606             MOV      R6,R0
     60              WM_Obj* pParent = WM_H2P(hParent);
   \   00000012   0x4628             MOV      R0,R5
   \   00000014   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000018   0x4607             MOV      R7,R0
     61              if (pWin->hParent != hParent) {
   \   0000001A   0xF9B6 0x0016      LDRSH    R0,[R6, #+22]
   \   0000001E   0x42A8             CMP      R0,R5
   \   00000020   0xD00F             BEQ.N    ??WM_AttachWindow_0
     62                WM_DetachWindow(hWin);
   \   00000022   0x4620             MOV      R0,R4
   \   00000024   0x.... 0x....      BL       WM_DetachWindow
     63                WM__InsertWindowIntoList(hWin, hParent);
   \   00000028   0x4629             MOV      R1,R5
   \   0000002A   0x4620             MOV      R0,R4
   \   0000002C   0x.... 0x....      BL       WM__InsertWindowIntoList
     64                WM_MoveWindow(hWin, pParent->Rect.x0,  pParent->Rect.y0);    /* Convert parent coordinates -> screen coordinates */
   \   00000030   0xF9B7 0x2002      LDRSH    R2,[R7, #+2]
   \   00000034   0xF9B7 0x1000      LDRSH    R1,[R7, #+0]
   \   00000038   0x4620             MOV      R0,R4
   \   0000003A   0xE8BD 0x40F8      POP      {R3-R7,LR}
   \   0000003E   0x.... 0x....      B.W      WM_MoveWindow
     65              }
     66            }
     67            WM_UNLOCK();
     68          }
   \                     ??WM_AttachWindow_0: (+1)
   \   00000042   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
     69          
     70          /*********************************************************************
     71          *
     72          *       WM_AttachWindowAt
     73          */

   \                                 In section .text, align 2, keep-with-next
     74          void WM_AttachWindowAt(WM_HWIN hWin, WM_HWIN hParent, int x, int y) {
   \                     WM_AttachWindowAt: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
   \   00000008   0x461F             MOV      R7,R3
     75            WM_DetachWindow(hWin);
   \   0000000A   0x.... 0x....      BL       WM_DetachWindow
     76            WM_MoveTo(hWin, x, y);
   \   0000000E   0x463A             MOV      R2,R7
   \   00000010   0x4631             MOV      R1,R6
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       WM_MoveTo
     77            WM_AttachWindow(hWin, hParent);
   \   00000018   0x4629             MOV      R1,R5
   \   0000001A   0x4620             MOV      R0,R4
   \   0000001C   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   00000020   0x....             B.N      WM_AttachWindow
     78          }
     79          
     80          
     81          #else
     82            void WM_AttachWindow_c(void) {} /* avoid empty object files */
     83          #endif   /* GUI_WINSUPPORT */
     84          
     85          /*************************** End of file ****************************/
     86          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   WM_AttachWindow
        24   -> GUI_ALLOC_h2p
        24   -> WM_DetachWindow
         0   -> WM_MoveWindow
        24   -> WM__InsertWindowIntoList
      24   WM_AttachWindowAt
         0   -> WM_AttachWindow
        24   -> WM_DetachWindow
        24   -> WM_MoveTo
      16   WM_DetachWindow
        16   -> GUI_ALLOC_h2p
         0   -> WM_MoveWindow
        16   -> WM__DetachWindow


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      68  WM_AttachWindow
      34  WM_AttachWindowAt
      54  WM_DetachWindow

 
 156 bytes in section .text
 
 156 bytes of CODE memory

Errors: none
Warnings: none
