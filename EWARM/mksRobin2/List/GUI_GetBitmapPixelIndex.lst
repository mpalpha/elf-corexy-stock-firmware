###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:45
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_GetBitmapPixelIndex.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_GetBitmapPixelIndex.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\GUI_GetBitmapPixelIndex.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\GUI_GetBitmapPixelIndex.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_GetBitmapPixelIndex.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_GetBitmapPixelIndex.c
     16          Purpose     : Implementation of GUI_GetBitmapPixelIndex
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "GUI_Private.h"
     21          
     22          /*********************************************************************
     23          *
     24          *       Public code
     25          *
     26          **********************************************************************
     27          */
     28          /*********************************************************************
     29          *
     30          *       GUI_GetBitmapPixelIndex
     31          */

   \                                 In section .text, align 2, keep-with-next
     32          int GUI_GetBitmapPixelIndex(const GUI_BITMAP GUI_UNI_PTR * pBMP, unsigned x, unsigned y) {
   \                     GUI_GetBitmapPixelIndex: (+1)
   \   00000000   0xB410             PUSH     {R4}
     33            unsigned Off, Value;
     34            switch (pBMP->BitsPerPixel) {
   \   00000002   0x88C3             LDRH     R3,[R0, #+6]
   \   00000004   0x2B01             CMP      R3,#+1
   \   00000006   0xD008             BEQ.N    ??GUI_GetBitmapPixelIndex_0
   \   00000008   0x2B02             CMP      R3,#+2
   \   0000000A   0xD014             BEQ.N    ??GUI_GetBitmapPixelIndex_1
   \   0000000C   0x2B04             CMP      R3,#+4
   \   0000000E   0xD021             BEQ.N    ??GUI_GetBitmapPixelIndex_2
   \   00000010   0x2B08             CMP      R3,#+8
   \   00000012   0xD02C             BEQ.N    ??GUI_GetBitmapPixelIndex_3
   \   00000014   0x2B10             CMP      R3,#+16
   \   00000016   0xD030             BEQ.N    ??GUI_GetBitmapPixelIndex_4
   \   00000018   0xE03A             B.N      ??GUI_GetBitmapPixelIndex_5
     35            case 1:
     36              Off = (x >> 3) + (y * pBMP->BytesPerLine);
     37              Value = *(pBMP->pData + Off);
     38              Value = Value >> (7 - (x & 0x7)) & 0x1;
   \                     ??GUI_GetBitmapPixelIndex_0: (+1)
   \   0000001A   0x08CB             LSRS     R3,R1,#+3
   \   0000001C   0x8884             LDRH     R4,[R0, #+4]
   \   0000001E   0xFB04 0x3202      MLA      R2,R4,R2,R3
   \   00000022   0x6880             LDR      R0,[R0, #+8]
   \   00000024   0x5C10             LDRB     R0,[R2, R0]
   \   00000026   0xF001 0x0107      AND      R1,R1,#0x7
   \   0000002A   0xF1C1 0x0107      RSB      R1,R1,#+7
   \   0000002E   0x40C8             LSRS     R0,R0,R1
   \   00000030   0xF000 0x0001      AND      R0,R0,#0x1
     39              break;
   \   00000034   0xE02D             B.N      ??GUI_GetBitmapPixelIndex_6
     40            case 2:
     41              Off = (x >> 2) + (y * pBMP->BytesPerLine);
     42              Value = *(pBMP->pData + Off);
     43              Value = Value >> (6 - ((x << 1) & 0x6)) & 0x3;
   \                     ??GUI_GetBitmapPixelIndex_1: (+1)
   \   00000036   0x088B             LSRS     R3,R1,#+2
   \   00000038   0x8884             LDRH     R4,[R0, #+4]
   \   0000003A   0xFB04 0x3202      MLA      R2,R4,R2,R3
   \   0000003E   0x6880             LDR      R0,[R0, #+8]
   \   00000040   0x5C10             LDRB     R0,[R2, R0]
   \   00000042   0x0049             LSLS     R1,R1,#+1
   \   00000044   0xF001 0x0106      AND      R1,R1,#0x6
   \   00000048   0xF1C1 0x0106      RSB      R1,R1,#+6
   \   0000004C   0x40C8             LSRS     R0,R0,R1
   \   0000004E   0xF000 0x0003      AND      R0,R0,#0x3
     44              break;
   \   00000052   0xE01E             B.N      ??GUI_GetBitmapPixelIndex_6
     45            case 4:
     46              Off = (x >> 1) + (y * pBMP->BytesPerLine);
     47              Value = *(pBMP->pData + Off);
   \                     ??GUI_GetBitmapPixelIndex_2: (+1)
   \   00000054   0x084B             LSRS     R3,R1,#+1
   \   00000056   0x8884             LDRH     R4,[R0, #+4]
   \   00000058   0xFB04 0x3202      MLA      R2,R4,R2,R3
   \   0000005C   0x6880             LDR      R0,[R0, #+8]
   \   0000005E   0x5C10             LDRB     R0,[R2, R0]
     48              Value = (x & 1) ? (Value & 0xF) : (Value >> 4);
   \   00000060   0x07C9             LSLS     R1,R1,#+31
   \   00000062   0xD502             BPL.N    ??GUI_GetBitmapPixelIndex_7
   \   00000064   0xF000 0x000F      AND      R0,R0,#0xF
   \   00000068   0xE013             B.N      ??GUI_GetBitmapPixelIndex_6
   \                     ??GUI_GetBitmapPixelIndex_7: (+1)
   \   0000006A   0x0900             LSRS     R0,R0,#+4
   \   0000006C   0xE011             B.N      ??GUI_GetBitmapPixelIndex_6
     49              break;
     50            case 8:
     51              Off = x + y * pBMP->BytesPerLine;
     52              Value = *(pBMP->pData + Off);
   \                     ??GUI_GetBitmapPixelIndex_3: (+1)
   \   0000006E   0x8883             LDRH     R3,[R0, #+4]
   \   00000070   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   00000074   0x6880             LDR      R0,[R0, #+8]
   \   00000076   0x5C08             LDRB     R0,[R1, R0]
     53              break;
   \   00000078   0xE00B             B.N      ??GUI_GetBitmapPixelIndex_6
     54            case 16:
     55              Off = (x << 1) + y * pBMP->BytesPerLine;
   \                     ??GUI_GetBitmapPixelIndex_4: (+1)
   \   0000007A   0x0049             LSLS     R1,R1,#+1
   \   0000007C   0x8883             LDRH     R3,[R0, #+4]
   \   0000007E   0xFB03 0x1102      MLA      R1,R3,R2,R1
     56              Value = *(pBMP->pData + Off) | (*(pBMP->pData + Off + 1) << 8);
   \   00000082   0x6880             LDR      R0,[R0, #+8]
   \   00000084   0x5C0A             LDRB     R2,[R1, R0]
   \   00000086   0x1808             ADDS     R0,R1,R0
   \   00000088   0x7840             LDRB     R0,[R0, #+1]
   \   0000008A   0xEA42 0x2000      ORR      R0,R2,R0, LSL #+8
     57              break;
   \   0000008E   0xE000             B.N      ??GUI_GetBitmapPixelIndex_6
     58            default:
     59              Value = 0;
   \                     ??GUI_GetBitmapPixelIndex_5: (+1)
   \   00000090   0x2000             MOVS     R0,#+0
     60            }
     61            return Value;
   \                     ??GUI_GetBitmapPixelIndex_6: (+1)
   \   00000092   0xBC10             POP      {R4}
   \   00000094   0x4770             BX       LR               ;; return
     62          }
     63          
     64          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   GUI_GetBitmapPixelIndex


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     150  GUI_GetBitmapPixelIndex

 
 150 bytes in section .text
 
 150 bytes of CODE memory

Errors: none
Warnings: none
