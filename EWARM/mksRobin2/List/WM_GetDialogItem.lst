###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:19
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_GetDialogItem.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_GetDialogItem.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM\mksRobin2/List\WM_GetDialogItem.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WM_GetDialogItem.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼־÷ָּ‎־¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_GetDialogItem.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_GetParent.c
     16          Purpose     : Windows manager, add. module
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "WM_Intern.h"
     21          
     22          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     23          
     24          /*******************************************************************
     25          *
     26          *       Public code
     27          *
     28          ********************************************************************
     29          */
     30          /*******************************************************************
     31          *
     32          *       WM__GetDialogItem
     33          
     34            Recursively scan window and its child windows until dialog item is
     35            found or all children have been scanned.
     36          */

   \                                 In section .text, align 2, keep-with-next
     37          static WM_HWIN _GetDialogItem(WM_HWIN hWin, int Id) {
   \                     _GetDialogItem: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x460C             MOV      R4,R1
     38            WM_HWIN hi;
     39            WM_HWIN r =0;
   \   00000004   0x2500             MOVS     R5,#+0
     40            WM_Obj* pWin = WM_H2P(hWin);
   \   00000006   0x.... 0x....      BL       GUI_ALLOC_h2p
     41            hi = pWin->hFirstChild;
   \   0000000A   0xF9B0 0x6018      LDRSH    R6,[R0, #+24]
   \   0000000E   0xE004             B.N      ??_GetDialogItem_0
     42            while (hi) {
     43              /* This windows Id matching ? */
     44              if (WM_GetId(hi) == Id) {
     45                return hi;
     46              }
     47              /* Any child windows Id matching ? */
     48              if ((r = _GetDialogItem(hi, Id)) != 0) {
     49                break;
     50              }
     51              hi = WM_HANDLE2PTR(hi)->hNext;
   \                     ??_GetDialogItem_1: (+1)
   \   00000010   0x4630             MOV      R0,R6
   \   00000012   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000016   0xF9B0 0x601A      LDRSH    R6,[R0, #+26]
   \                     ??_GetDialogItem_0: (+1)
   \   0000001A   0x2E00             CMP      R6,#+0
   \   0000001C   0xD00C             BEQ.N    ??_GetDialogItem_2
   \   0000001E   0x4630             MOV      R0,R6
   \   00000020   0x.... 0x....      BL       WM_GetId
   \   00000024   0x42A0             CMP      R0,R4
   \   00000026   0xD101             BNE.N    ??_GetDialogItem_3
   \   00000028   0x4630             MOV      R0,R6
   \   0000002A   0xBD70             POP      {R4-R6,PC}
   \                     ??_GetDialogItem_3: (+1)
   \   0000002C   0x4621             MOV      R1,R4
   \   0000002E   0x4630             MOV      R0,R6
   \   00000030   0xF7FF 0xFFE6      BL       _GetDialogItem
   \   00000034   0x0005             MOVS     R5,R0
   \   00000036   0xD0EB             BEQ.N    ??_GetDialogItem_1
     52            }
     53            return r;
   \                     ??_GetDialogItem_2: (+1)
   \   00000038   0x4628             MOV      R0,R5
   \   0000003A   0xBD70             POP      {R4-R6,PC}       ;; return
     54          }
     55          
     56          /*********************************************************************
     57          *
     58          *       WM_GetDialogItem
     59          */

   \                                 In section .text, align 2, keep-with-next
     60          WM_HWIN WM_GetDialogItem(WM_HWIN hWin, int Id) {
   \                     WM_GetDialogItem: (+1)
   \   00000000   0x4602             MOV      R2,R0
     61            WM_HWIN r = 0;
   \   00000002   0x2000             MOVS     R0,#+0
     62            if (hWin) {
   \   00000004   0x2A00             CMP      R2,#+0
   \   00000006   0xD001             BEQ.N    ??WM_GetDialogItem_0
     63              WM_LOCK();
     64              r = _GetDialogItem(hWin, Id);
   \   00000008   0x4610             MOV      R0,R2
   \   0000000A   0x....             B.N      _GetDialogItem
     65              WM_UNLOCK();
     66            }
     67            return r;
   \                     ??WM_GetDialogItem_0: (+1)
   \   0000000C   0x4770             BX       LR               ;; return
     68          }
     69          
     70          #else                                       /* Avoid empty object files */
     71            void WM_DialogItem_C(void) {}
     72          #endif   /* GUI_WINSUPPORT */
     73          
     74          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   WM_GetDialogItem
         0   -> _GetDialogItem
      16   _GetDialogItem
        16   -> GUI_ALLOC_h2p
        16   -> WM_GetId
        16   -> _GetDialogItem


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      14  WM_GetDialogItem
      60  _GetDialogItem

 
 74 bytes in section .text
 
 74 bytes of CODE memory

Errors: none
Warnings: none
