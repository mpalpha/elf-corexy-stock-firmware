###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:09
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\TEXT.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\TEXT.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\TEXT.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\TEXT.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\TEXT.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : TEXT.c
     16          Purpose     : Implementation of text widget
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stdlib.h>
     21          #include <string.h>
     22          #include "TEXT_Private.h"
     23          #include "WIDGET.h"
     24          #include "GUIDebug.h"
     25          #include "GUI_Protected.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Private config defaults
     32          *
     33          **********************************************************************
     34          */
     35          
     36          /* Define default fonts */
     37          #ifndef TEXT_FONT_DEFAULT
     38            #define TEXT_FONT_DEFAULT &GUI_Font13_1
     39          #endif
     40          
     41          #ifndef TEXT_DEFAULT_TEXT_COLOR
     42            #define TEXT_DEFAULT_TEXT_COLOR GUI_BLACK
     43          #endif
     44          
     45          /*********************************************************************
     46          *
     47          *       Static data
     48          *
     49          **********************************************************************
     50          */
     51          

   \                                 In section .data, align 4
     52          static const GUI_FONT GUI_UNI_PTR * _pDefaultFont = TEXT_FONT_DEFAULT;
   \                     _pDefaultFont:
   \   00000000   0x........         DC32 GUI_Font13_1
   \   00000004   0x00000000         DC32 0
     53          static GUI_COLOR        _DefaultTextColor = TEXT_DEFAULT_TEXT_COLOR;
     54          
     55          /*********************************************************************
     56          *
     57          *       Static routines
     58          *
     59          **********************************************************************
     60          */
     61          /*********************************************************************
     62          *
     63          *       _FreeAttached
     64          */

   \                                 In section .text, align 2, keep-with-next
     65          static void _FreeAttached(TEXT_Obj* pObj) {
     66            GUI_ALLOC_FreePtr(&pObj->hpText);
   \                     _FreeAttached: (+1)
   \   00000000   0x3028             ADDS     R0,R0,#+40
   \   00000002   0x.... 0x....      B.W      GUI_ALLOC_FreePtr
     67          }
     68          
     69          /*********************************************************************
     70          *
     71          *       _Paint
     72          */

   \                                 In section .text, align 2, keep-with-next
     73          static void _Paint(TEXT_Handle hObj, TEXT_Obj* pObj) {
   \                     _Paint: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
     74            const char * s;
     75            GUI_RECT Rect;
     76            GUI_USE_PARA(hObj);
     77            LCD_SetColor(pObj->TextColor);
   \   00000008   0x6B68             LDR      R0,[R5, #+52]
   \   0000000A   0x.... 0x....      BL       LCD_SetColor
     78            GUI_SetFont    (pObj->pFont);
   \   0000000E   0x6AE8             LDR      R0,[R5, #+44]
   \   00000010   0x.... 0x....      BL       GUI_SetFont
     79            /* Fill with parents background color */
     80            #if !TEXT_SUPPORT_TRANSPARENCY   /* Not needed any more, since window is transparent*/
     81              if (pObj->BkColor == GUI_INVALID_COLOR) {
     82                LCD_SetBkColor(WIDGET__GetBkColor(hObj));
     83              } else {
     84                LCD_SetBkColor(pObj->BkColor);
     85              }
     86              GUI_Clear();
     87            #else
     88              if (!WM_GetHasTrans(hObj)) {
   \   00000014   0x4620             MOV      R0,R4
   \   00000016   0x.... 0x....      BL       WM_GetHasTrans
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD104             BNE.N    ??_Paint_0
     89                LCD_SetBkColor(pObj->BkColor);
   \   0000001E   0x6BA8             LDR      R0,[R5, #+56]
   \   00000020   0x.... 0x....      BL       LCD_SetBkColor
     90                GUI_Clear();
   \   00000024   0x.... 0x....      BL       GUI_Clear
     91              }
     92            #endif
     93            /* Show the text */
     94            if (pObj->hpText) {
   \                     ??_Paint_0: (+1)
   \   00000028   0xF9B5 0x0028      LDRSH    R0,[R5, #+40]
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD00E             BEQ.N    ??_Paint_1
     95              s = (const char*) GUI_ALLOC_h2p(pObj->hpText);
   \   00000030   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000034   0x4604             MOV      R4,R0
     96              GUI_SetTextMode(GUI_TM_TRANS);
   \   00000036   0x2002             MOVS     R0,#+2
   \   00000038   0x.... 0x....      BL       GUI_SetTextMode
     97              WM_GetClientRect(&Rect);
   \   0000003C   0xA800             ADD      R0,SP,#+0
   \   0000003E   0x.... 0x....      BL       WM_GetClientRect
     98              GUI_DispStringInRect(s, &Rect, pObj->Align);
   \   00000042   0xF9B5 0x2030      LDRSH    R2,[R5, #+48]
   \   00000046   0xA900             ADD      R1,SP,#+0
   \   00000048   0x4620             MOV      R0,R4
   \   0000004A   0x.... 0x....      BL       GUI_DispStringInRect
     99            }
    100          }
   \                     ??_Paint_1: (+1)
   \   0000004E   0xBD37             POP      {R0-R2,R4,R5,PC}  ;; return
    101          
    102          /*********************************************************************
    103          *
    104          *       _Delete
    105          */

   \                                 In section .text, align 2, keep-with-next
    106          static void _Delete(TEXT_Obj* pObj) {
    107            /* Delete attached objects (if any) */
    108            GUI_DEBUG_LOG("TEXT: Delete() Deleting attached items");
    109            _FreeAttached(pObj);
   \                     _Delete: (+1)
   \   00000000   0x....             B.N      _FreeAttached
    110          }
    111          
    112          /*********************************************************************
    113          *
    114          *       _TEXT_Callback
    115          */

   \                                 In section .text, align 2, keep-with-next
    116          static void _TEXT_Callback (WM_MESSAGE*pMsg) {
   \                     _TEXT_Callback: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
    117            TEXT_Handle hObj = pMsg->hWin;
   \   00000004   0xF9B4 0x5004      LDRSH    R5,[R4, #+4]
    118            TEXT_Obj* pObj = TEXT_H2P(hObj);
   \   00000008   0x4628             MOV      R0,R5
   \   0000000A   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000000E   0x4606             MOV      R6,R0
    119            /* Let widget handle the standard messages */
    120            if (WIDGET_HandleActive(hObj, pMsg) == 0) {
   \   00000010   0x4621             MOV      R1,R4
   \   00000012   0x4628             MOV      R0,R5
   \   00000014   0x.... 0x....      BL       WIDGET_HandleActive
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD011             BEQ.N    ??_TEXT_Callback_0
    121              return;
    122            }
    123            switch (pMsg->MsgId) {
   \   0000001C   0x6820             LDR      R0,[R4, #+0]
   \   0000001E   0x280B             CMP      R0,#+11
   \   00000020   0xD006             BEQ.N    ??_TEXT_Callback_1
   \   00000022   0x280F             CMP      R0,#+15
   \   00000024   0xD107             BNE.N    ??_TEXT_Callback_2
    124            case WM_PAINT:
    125              GUI_DEBUG_LOG("TEXT: _Callback(WM_PAINT)\n");
    126              _Paint(hObj, pObj);
   \   00000026   0x4631             MOV      R1,R6
   \   00000028   0x4628             MOV      R0,R5
   \   0000002A   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000002E   0x....             B.N      _Paint
    127              return;
    128            case WM_DELETE:
    129              GUI_DEBUG_LOG("TEXT: _Callback(WM_DELETE)\n");
    130              _Delete(pObj);
   \                     ??_TEXT_Callback_1: (+1)
   \   00000030   0x4630             MOV      R0,R6
   \   00000032   0x.... 0x....      BL       _Delete
    131              break;       /* No return here ... WM_DefaultProc needs to be called */
    132            }
    133            WM_DefaultProc(pMsg);
   \                     ??_TEXT_Callback_2: (+1)
   \   00000036   0x4620             MOV      R0,R4
   \   00000038   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000003C   0x.... 0x....      B.W      WM_DefaultProc
   \                     ??_TEXT_Callback_0: (+1)
   \   00000040   0xBD70             POP      {R4-R6,PC}       ;; return
    134          }
    135          
    136          /*********************************************************************
    137          *
    138          *       Exported routines:  Create
    139          *
    140          **********************************************************************
    141          */
    142          
    143          /* Note: the parameters to a create function may vary.
    144                   Some widgets may have multiple create functions */
    145          
    146          /*********************************************************************
    147          *
    148          *       TEXT_CreateEx
    149          */

   \                                 In section .text, align 2, keep-with-next
    150          TEXT_Handle TEXT_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
    151                                    int WinFlags, int ExFlags, int Id, const char* pText)
    152          {
   \                     TEXT_CreateEx: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    153            TEXT_Handle hObj;
    154            /* Create the window */
    155            #if TEXT_SUPPORT_TRANSPARENCY
    156              WinFlags |= WM_CF_HASTRANS;
    157            #endif
    158            hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, _TEXT_Callback,
    159                                          sizeof(TEXT_Obj) - sizeof(WM_Obj));
   \   00000004   0x241C             MOVS     R4,#+28
   \   00000006   0x9403             STR      R4,[SP, #+12]
   \   00000008   0x....             LDR.N    R4,??DataTable3
   \   0000000A   0x9402             STR      R4,[SP, #+8]
   \   0000000C   0x9C0B             LDR      R4,[SP, #+44]
   \   0000000E   0xF044 0x0401      ORR      R4,R4,#0x1
   \   00000012   0xB2A4             UXTH     R4,R4
   \   00000014   0x9401             STR      R4,[SP, #+4]
   \   00000016   0xF9BD 0x4028      LDRSH    R4,[SP, #+40]
   \   0000001A   0x9400             STR      R4,[SP, #+0]
   \   0000001C   0x.... 0x....      BL       WM_CreateWindowAsChild
   \   00000020   0x0004             MOVS     R4,R0
    160            if (hObj) {
   \   00000022   0xD023             BEQ.N    ??TEXT_CreateEx_0
    161              TEXT_Obj* pObj;
    162              WM_HMEM hMem = 0;
   \   00000024   0x2700             MOVS     R7,#+0
    163              WM_LOCK();
    164              pObj = TEXT_H2P(hObj);
   \   00000026   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000002A   0x4605             MOV      R5,R0
    165              /* init widget specific variables */
    166              WIDGET__Init(&pObj->Widget, Id, 0);
   \   0000002C   0x463A             MOV      R2,R7
   \   0000002E   0x990D             LDR      R1,[SP, #+52]
   \   00000030   0x.... 0x....      BL       WIDGET__Init
   \   00000034   0x9E0E             LDR      R6,[SP, #+56]
    167              /* init member variables */
    168              TEXT_INIT_ID(pObj);
    169              if (pText) {
   \   00000036   0x2E00             CMP      R6,#+0
   \   00000038   0xD00D             BEQ.N    ??TEXT_CreateEx_1
    170                hMem = GUI_ALLOC_AllocZero(strlen(pText) + 1);
   \   0000003A   0x4630             MOV      R0,R6
   \   0000003C   0x.... 0x....      BL       strlen
   \   00000040   0x1C40             ADDS     R0,R0,#+1
   \   00000042   0xB200             SXTH     R0,R0
   \   00000044   0x.... 0x....      BL       GUI_ALLOC_AllocZero
   \   00000048   0x0007             MOVS     R7,R0
    171                if (hMem) {
   \   0000004A   0xD004             BEQ.N    ??TEXT_CreateEx_1
    172                  strcpy((char*) GUI_ALLOC_h2p(hMem), pText);
   \   0000004C   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000050   0x4631             MOV      R1,R6
   \   00000052   0x.... 0x....      BL       strcpy
    173                }
    174              }
    175              pObj->hpText = hMem;
   \                     ??TEXT_CreateEx_1: (+1)
   \   00000056   0x852F             STRH     R7,[R5, #+40]
    176              pObj->Align  = ExFlags;
   \   00000058   0x980C             LDR      R0,[SP, #+48]
   \   0000005A   0x8628             STRH     R0,[R5, #+48]
    177              pObj->pFont  = _pDefaultFont;
   \   0000005C   0x....             LDR.N    R0,??DataTable3_1
   \   0000005E   0x6801             LDR      R1,[R0, #+0]
   \   00000060   0x62E9             STR      R1,[R5, #+44]
    178              pObj->BkColor = GUI_INVALID_COLOR;
   \   00000062   0xF06F 0x4170      MVN      R1,#-268435456
   \   00000066   0x63A9             STR      R1,[R5, #+56]
    179              pObj->TextColor = _DefaultTextColor;
   \   00000068   0x6840             LDR      R0,[R0, #+4]
   \   0000006A   0x6368             STR      R0,[R5, #+52]
    180              WM_UNLOCK();
    181            } else {
    182              GUI_DEBUG_ERROROUT_IF(hObj==0, "TEXT_Create failed")
    183            }
    184            return hObj;
   \                     ??TEXT_CreateEx_0: (+1)
   \   0000006C   0x4620             MOV      R0,R4
   \   0000006E   0xB005             ADD      SP,SP,#+20
   \   00000070   0xBDF0             POP      {R4-R7,PC}       ;; return
    185          }
    186          
    187          /*********************************************************************
    188          *
    189          *       Exported routines:  Various methods
    190          *
    191          **********************************************************************
    192          */
    193          /*********************************************************************
    194          *
    195          *       TEXT_SetDefaultFont
    196          */

   \                                 In section .text, align 2, keep-with-next
    197          void TEXT_SetDefaultFont(const GUI_FONT GUI_UNI_PTR * pFont) {
    198            _pDefaultFont = pFont;
   \                     TEXT_SetDefaultFont: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable3_1
   \   00000002   0x6008             STR      R0,[R1, #+0]
    199          }
   \   00000004   0x4770             BX       LR               ;; return
    200          
    201          /*********************************************************************
    202          *
    203          *       TEXT_SetDefaultTextColor
    204          */

   \                                 In section .text, align 2, keep-with-next
    205          void TEXT_SetDefaultTextColor(GUI_COLOR Color) {
    206            _DefaultTextColor = Color;
   \                     TEXT_SetDefaultTextColor: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable3_1
   \   00000002   0x6048             STR      R0,[R1, #+4]
    207          }
   \   00000004   0x4770             BX       LR               ;; return
    208          
    209          /*********************************************************************
    210          *
    211          *       TEXT_GetDefaultFont
    212          */

   \                                 In section .text, align 2, keep-with-next
    213          const GUI_FONT GUI_UNI_PTR * TEXT_GetDefaultFont(void) {
    214            return _pDefaultFont;
   \                     TEXT_GetDefaultFont: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3_1
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    215          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     _TEXT_Callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     _pDefaultFont
    216          
    217          #else /* avoid empty object files */
    218          
    219          void TEXT_C(void);
    220          void TEXT_C(void){}
    221          
    222          #endif  /* #if GUI_WINSUPPORT */
    223          
    224          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   TEXT_CreateEx
        40   -> GUI_ALLOC_AllocZero
        40   -> GUI_ALLOC_h2p
        40   -> WIDGET__Init
        40   -> WM_CreateWindowAsChild
        40   -> strcpy
        40   -> strlen
       0   TEXT_GetDefaultFont
       0   TEXT_SetDefaultFont
       0   TEXT_SetDefaultTextColor
       0   _Delete
         0   -> _FreeAttached
       0   _FreeAttached
         0   -> GUI_ALLOC_FreePtr
      24   _Paint
        24   -> GUI_ALLOC_h2p
        24   -> GUI_Clear
        24   -> GUI_DispStringInRect
        24   -> GUI_SetFont
        24   -> GUI_SetTextMode
        24   -> LCD_SetBkColor
        24   -> LCD_SetColor
        24   -> WM_GetClientRect
        24   -> WM_GetHasTrans
      16   _TEXT_Callback
        16   -> GUI_ALLOC_h2p
        16   -> WIDGET_HandleActive
         0   -> WM_DefaultProc
        16   -> _Delete
         0   -> _Paint


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
     114  TEXT_CreateEx
       6  TEXT_GetDefaultFont
       6  TEXT_SetDefaultFont
       6  TEXT_SetDefaultTextColor
       2  _Delete
       6  _FreeAttached
      80  _Paint
      66  _TEXT_Callback
       8  _pDefaultFont
          _DefaultTextColor

 
   8 bytes in section .data
 294 bytes in section .text
 
 294 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
