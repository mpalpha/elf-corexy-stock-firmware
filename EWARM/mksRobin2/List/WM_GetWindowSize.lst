###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:22
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_GetWindowSize.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_GetWindowSize.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\WM_GetWindowSize.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WM_GetWindowSize.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_GetWindowSize.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_GetWindowSize.c
     16          Purpose     : Implementation of WM_GetWindowSizeX,Y
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "WM_Intern.h"
     21          
     22          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     23          
     24          /*********************************************************************
     25          *
     26          *       Static routines
     27          *
     28          **********************************************************************
     29          */
     30          /*********************************************************************
     31          *
     32          *       _GetDefaultWin
     33          
     34            When drawing, we have to start at the bottom window !
     35          */

   \                                 In section .text, align 2, keep-with-next
     36          static WM_HWIN _GetDefaultWin(WM_HWIN hWin) {
     37            if (!hWin)
   \                     _GetDefaultWin: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD101             BNE.N    ??_GetDefaultWin_0
     38              hWin = WM_GetActiveWindow();
   \   00000004   0x.... 0x....      B.W      WM_GetActiveWindow
     39            return hWin;
   \                     ??_GetDefaultWin_0: (+1)
   \   00000008   0x4770             BX       LR               ;; return
     40          }
     41          
     42          /*********************************************************************
     43          *
     44          *       Module internal routines
     45          *
     46          **********************************************************************
     47          */
     48          /*********************************************************************
     49          *
     50          *       WM__GetWindowSizeX
     51          
     52            Return width of window in pixels
     53          */

   \                                 In section .text, align 2, keep-with-next
     54          int WM__GetWindowSizeX(const WM_Obj* pWin) {
     55            return pWin->Rect.x1 - pWin->Rect.x0 +1;
   \                     WM__GetWindowSizeX: (+1)
   \   00000000   0xF9B0 0x1004      LDRSH    R1,[R0, #+4]
   \   00000004   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000008   0x1A08             SUBS     R0,R1,R0
   \   0000000A   0x1C40             ADDS     R0,R0,#+1
   \   0000000C   0x4770             BX       LR               ;; return
     56          }
     57          
     58          /*********************************************************************
     59          *
     60          *       WM__GetWindowSizeY
     61          
     62            Return height of window in pixels
     63          */

   \                                 In section .text, align 2, keep-with-next
     64          int WM__GetWindowSizeY(const WM_Obj* pWin) {
     65            return pWin->Rect.y1 - pWin->Rect.y0 +1;
   \                     WM__GetWindowSizeY: (+1)
   \   00000000   0xF9B0 0x1006      LDRSH    R1,[R0, #+6]
   \   00000004   0xF9B0 0x0002      LDRSH    R0,[R0, #+2]
   \   00000008   0x1A08             SUBS     R0,R1,R0
   \   0000000A   0x1C40             ADDS     R0,R0,#+1
   \   0000000C   0x4770             BX       LR               ;; return
     66          }
     67          
     68          /*********************************************************************
     69          *
     70          *      Public API code
     71          *
     72          **********************************************************************
     73          */
     74          /*********************************************************************
     75          *
     76          *       WM_GetWindowSizeX
     77          
     78            Return width of window in pixels
     79          */

   \                                 In section .text, align 2, keep-with-next
     80          int WM_GetWindowSizeX(WM_HWIN hWin) {
   \                     WM_GetWindowSizeX: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     81            int r;
     82            WM_Obj* pWin;
     83            WM_LOCK();
     84            hWin = _GetDefaultWin(hWin);
   \   00000002   0x.... 0x....      BL       _GetDefaultWin
     85            pWin = WM_H2P(hWin);
   \   00000006   0x.... 0x....      BL       GUI_ALLOC_h2p
     86            r = WM__GetWindowSizeX(pWin);
     87            WM_UNLOCK();
     88            return r;
   \   0000000A   0xE8BD 0x4002      POP      {R1,LR}
   \   0000000E   0x....             B.N      WM__GetWindowSizeX
     89          }
     90          
     91          /*********************************************************************
     92          *
     93          *       WM_GetWindowSizeY
     94          
     95            Return height of window in pixels
     96          */

   \                                 In section .text, align 2, keep-with-next
     97          int WM_GetWindowSizeY(WM_HWIN hWin) {
   \                     WM_GetWindowSizeY: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     98            int r;
     99            WM_Obj* pWin;
    100            WM_LOCK();
    101            hWin = _GetDefaultWin(hWin);
   \   00000002   0x.... 0x....      BL       _GetDefaultWin
    102            pWin = WM_H2P(hWin);
   \   00000006   0x.... 0x....      BL       GUI_ALLOC_h2p
    103            r = WM__GetWindowSizeY(pWin);
    104            WM_UNLOCK();
    105            return r;
   \   0000000A   0xE8BD 0x4002      POP      {R1,LR}
   \   0000000E   0x....             B.N      WM__GetWindowSizeY
    106          }
    107          
    108          
    109          #else
    110            void WM_GetWindowSize_C(void) {} /* avoid empty object files */
    111          #endif   /* GUI_WINSUPPORT */
    112          
    113          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   WM_GetWindowSizeX
         8   -> GUI_ALLOC_h2p
         0   -> WM__GetWindowSizeX
         8   -> _GetDefaultWin
       8   WM_GetWindowSizeY
         8   -> GUI_ALLOC_h2p
         0   -> WM__GetWindowSizeY
         8   -> _GetDefaultWin
       0   WM__GetWindowSizeX
       0   WM__GetWindowSizeY
       0   _GetDefaultWin
         0   -> WM_GetActiveWindow


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      16  WM_GetWindowSizeX
      16  WM_GetWindowSizeY
      14  WM__GetWindowSizeX
      14  WM__GetWindowSizeY
      10  _GetDefaultWin

 
 70 bytes in section .text
 
 70 bytes of CODE memory

Errors: none
Warnings: none
