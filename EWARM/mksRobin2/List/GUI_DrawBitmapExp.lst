###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:41
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_DrawBitmapExp.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_DrawBitmapExp.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\GUI_DrawBitmapExp.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\GUI_DrawBitmapExp.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_DrawBitmapExp.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_DrawBitmapExp.C
     16          Purpose     : Implementation of GUI_DrawBitmapExp
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stddef.h>           /* needed for definition of NULL */
     21          #include "GUI_Private.h"
     22          
     23          /*********************************************************************
     24          *
     25          *       Public code
     26          *
     27          **********************************************************************
     28          */
     29          /*********************************************************************
     30          *
     31          *       GUI_DrawBitmapExp
     32          */

   \                                 In section .text, align 4, keep-with-next
     33          void GUI_DrawBitmapExp(int x0, int y0, int XSize, int YSize, int XMul, int YMul,
     34                                 int BitsPerPixel, int BytesPerLine, const U8 GUI_UNI_PTR * pData,
     35                                 const GUI_LOGPALETTE GUI_UNI_PTR * pPal)
     36          {
   \                     GUI_DrawBitmapExp: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB08B             SUB      SP,SP,#+44
   \   00000006   0x4681             MOV      R9,R0
   \   00000008   0x4688             MOV      R8,R1
   \   0000000A   0x4614             MOV      R4,R2
   \   0000000C   0x461D             MOV      R5,R3
   \   0000000E   0x9F19             LDR      R7,[SP, #+100]
     37            GUI_DRAWMODE PrevDraw;
     38            const LCD_PIXELINDEX* pTrans;
     39            GUI_LOCK();
     40            pTrans = LCD_GetpPalConvTable(pPal);
   \   00000010   0x4638             MOV      R0,R7
   \   00000012   0x.... 0x....      BL       LCD_GetpPalConvTable
   \   00000016   0x4606             MOV      R6,R0
     41            PrevDraw = GUI_SetDrawMode((pPal && pPal->HasTrans) ? GUI_DRAWMODE_TRANS : 0);
   \   00000018   0x2F00             CMP      R7,#+0
   \   0000001A   0xD005             BEQ.N    ??GUI_DrawBitmapExp_0
   \   0000001C   0xF997 0x0004      LDRSB    R0,[R7, #+4]
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD001             BEQ.N    ??GUI_DrawBitmapExp_0
   \   00000024   0x2002             MOVS     R0,#+2
   \   00000026   0xE000             B.N      ??GUI_DrawBitmapExp_1
   \                     ??GUI_DrawBitmapExp_0: (+1)
   \   00000028   0x2000             MOVS     R0,#+0
   \                     ??GUI_DrawBitmapExp_1: (+1)
   \   0000002A   0x.... 0x....      BL       GUI_SetDrawMode
   \   0000002E   0x4607             MOV      R7,R0
     42            #if (GUI_WINSUPPORT)
     43              WM_ADDORG(x0,y0);
   \   00000030   0x4820             LDR.N    R0,??GUI_DrawBitmapExp_2
   \   00000032   0x6C01             LDR      R1,[R0, #+64]
   \   00000034   0x4449             ADD      R1,R1,R9
   \   00000036   0x9107             STR      R1,[SP, #+28]
   \   00000038   0x6C40             LDR      R0,[R0, #+68]
   \   0000003A   0x4440             ADD      R0,R0,R8
   \   0000003C   0x9006             STR      R0,[SP, #+24]
     44              {
     45                GUI_RECT r;
     46                r.x0 = x0;
   \   0000003E   0x9807             LDR      R0,[SP, #+28]
   \   00000040   0xF8AD 0x0020      STRH     R0,[SP, #+32]
   \   00000044   0xF8DD 0x8050      LDR      R8,[SP, #+80]
     47                r.x1 = x0 + XSize * XMul -1;
   \   00000048   0x9807             LDR      R0,[SP, #+28]
   \   0000004A   0xFB08 0x0004      MLA      R0,R8,R4,R0
   \   0000004E   0x1E40             SUBS     R0,R0,#+1
   \   00000050   0xF8AD 0x0024      STRH     R0,[SP, #+36]
     48                r.y0 = y0;
   \   00000054   0x9806             LDR      R0,[SP, #+24]
   \   00000056   0xF8AD 0x0022      STRH     R0,[SP, #+34]
   \   0000005A   0xF8DD 0x9054      LDR      R9,[SP, #+84]
     49                r.y1 = y0 + YSize * YMul -1;
   \   0000005E   0x9806             LDR      R0,[SP, #+24]
   \   00000060   0xFB09 0x0005      MLA      R0,R9,R5,R0
   \   00000064   0x1E40             SUBS     R0,R0,#+1
   \   00000066   0xF8AD 0x0026      STRH     R0,[SP, #+38]
     50                WM_ITERATE_START(&r); {
   \   0000006A   0xA808             ADD      R0,SP,#+32
   \   0000006C   0x.... 0x....      BL       WM__InitIVRSearch
   \   00000070   0x2800             CMP      R0,#+0
   \   00000072   0xD018             BEQ.N    ??GUI_DrawBitmapExp_3
   \   00000074   0xF8DD 0xA05C      LDR      R10,[SP, #+92]
   \   00000078   0xF8DD 0xB060      LDR      R11,[SP, #+96]
     51            #endif
     52            LCD_DrawBitmap( x0, y0 ,XSize ,YSize, XMul, YMul
     53                           ,BitsPerPixel, BytesPerLine, pData, pTrans);
   \                     ??GUI_DrawBitmapExp_4: (+1)
   \   0000007C   0x9605             STR      R6,[SP, #+20]
   \   0000007E   0xF8CD 0xB010      STR      R11,[SP, #+16]
   \   00000082   0xF8CD 0xA00C      STR      R10,[SP, #+12]
   \   00000086   0x9816             LDR      R0,[SP, #+88]
   \   00000088   0x9002             STR      R0,[SP, #+8]
   \   0000008A   0xF8CD 0x9004      STR      R9,[SP, #+4]
   \   0000008E   0xF8CD 0x8000      STR      R8,[SP, #+0]
   \   00000092   0x462B             MOV      R3,R5
   \   00000094   0x4622             MOV      R2,R4
   \   00000096   0x9906             LDR      R1,[SP, #+24]
   \   00000098   0x9807             LDR      R0,[SP, #+28]
   \   0000009A   0x.... 0x....      BL       LCD_DrawBitmap
     54            #if (GUI_WINSUPPORT)
     55                } WM_ITERATE_END();
   \   0000009E   0x.... 0x....      BL       WM__GetNextIVR
   \   000000A2   0x2800             CMP      R0,#+0
   \   000000A4   0xD1EA             BNE.N    ??GUI_DrawBitmapExp_4
     56              }
     57            #endif
     58            GUI_SetDrawMode(PrevDraw);
   \                     ??GUI_DrawBitmapExp_3: (+1)
   \   000000A6   0x4638             MOV      R0,R7
   \   000000A8   0x.... 0x....      BL       GUI_SetDrawMode
     59            GUI_UNLOCK();
     60          }
   \   000000AC   0xB00B             ADD      SP,SP,#+44
   \   000000AE   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \   000000B2   0xBF00             Nop      
   \                     ??GUI_DrawBitmapExp_2:
   \   000000B4   0x........         DC32     GUI_Context
     61          
     62          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      80   GUI_DrawBitmapExp
        80   -> GUI_SetDrawMode
        80   -> LCD_DrawBitmap
        80   -> LCD_GetpPalConvTable
        80   -> WM__GetNextIVR
        80   -> WM__InitIVRSearch


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     184  GUI_DrawBitmapExp

 
 184 bytes in section .text
 
 184 bytes of CODE memory

Errors: none
Warnings: none
