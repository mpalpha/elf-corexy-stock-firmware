###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:59
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUIEncJS.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUIEncJS.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\GUIEncJS.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\GUIEncJS.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUIEncJS.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUIEncSJ.C
     16          Purpose     : Implementation of Shift JIS decoding
     17          ----------------------------------------------------------------------
     18          Version-Date---Author-Explanation
     19          ---------------------------END-OF-HEADER------------------------------
     20          */
     21          
     22          #include <stddef.h>           /* needed for definition of NULL */
     23          #include "GUI_Protected.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Static code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       DB2SJIS
     34          */

   \                                 In section .text, align 2, keep-with-next
     35          static U16 DB2SJIS(U8 Byte0, U8 Byte1) {
     36            return Byte1 | (((U16)Byte0)<<8);
   \                     DB2SJIS: (+1)
   \   00000000   0xEA41 0x2000      ORR      R0,R1,R0, LSL #+8
   \   00000004   0x4770             BX       LR               ;; return
     37          }
     38          
     39          /*********************************************************************
     40          *
     41          *       _GetLineDistX_SJIS
     42          */

   \                                 In section .text, align 2, keep-with-next
     43          static int _GetLineDistX_SJIS(const char GUI_UNI_PTR *s, int Len) {
   \                     _GetLineDistX_SJIS: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     44            int Dist =0;
   \   00000006   0x2600             MOVS     R6,#+0
     45            if (s) {
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD109             BNE.N    ??_GetLineDistX_SJIS_0
     46              U8 c0;
     47              while (((c0=*(const U8*)s) !=0) && Len >=0) {
     48                s++; Len--;
     49                if (c0 > 127) {
     50                  U8  c1 = *(const U8*)s++;
     51                  Len--;
     52                  Dist += GUI_GetCharDistX(DB2SJIS(c0, c1));
     53                } else {
     54                  Dist += GUI_GetCharDistX(c0);
     55                }
     56              }
     57            }
     58            return Dist;
   \                     ??_GetLineDistX_SJIS_1: (+1)
   \   0000000C   0x4630             MOV      R0,R6
   \   0000000E   0xBD70             POP      {R4-R6,PC}       ;; return
   \                     ??_GetLineDistX_SJIS_2: (+1)
   \   00000010   0xF814 0x1B01      LDRB     R1,[R4], #+1
   \   00000014   0x1E6D             SUBS     R5,R5,#+1
   \   00000016   0x.... 0x....      BL       DB2SJIS
   \   0000001A   0x.... 0x....      BL       GUI_GetCharDistX
   \   0000001E   0x1986             ADDS     R6,R0,R6
   \                     ??_GetLineDistX_SJIS_0: (+1)
   \   00000020   0x7820             LDRB     R0,[R4, #+0]
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD0F2             BEQ.N    ??_GetLineDistX_SJIS_1
   \   00000026   0x2D00             CMP      R5,#+0
   \   00000028   0xD4F0             BMI.N    ??_GetLineDistX_SJIS_1
   \   0000002A   0x1C64             ADDS     R4,R4,#+1
   \   0000002C   0x1E6D             SUBS     R5,R5,#+1
   \   0000002E   0x2880             CMP      R0,#+128
   \   00000030   0xDAEE             BGE.N    ??_GetLineDistX_SJIS_2
   \   00000032   0x.... 0x....      BL       GUI_GetCharDistX
   \   00000036   0x1986             ADDS     R6,R0,R6
   \   00000038   0xE7F2             B.N      ??_GetLineDistX_SJIS_0
     59          }
     60          
     61          /*********************************************************************
     62          *
     63          *       _GetLineLen_SJIS
     64          * Purpose:
     65          *   Returns the number of characters in a string.
     66          *
     67          * NOTE:
     68          *   The return value can be used as offset into the
     69          *   string, which means that double characters count double
     70          */

   \                                 In section .text, align 2, keep-with-next
     71          static int _GetLineLen_SJIS(const char GUI_UNI_PTR *s, int MaxLen) {
     72            int Len =0;
   \                     _GetLineLen_SJIS: (+1)
   \   00000000   0x2200             MOVS     R2,#+0
   \   00000002   0xE002             B.N      ??_GetLineLen_SJIS_0
     73            U8 c0;
     74            while (((c0=*(const U8*)s) !=0) && Len < MaxLen) {
     75              s++;
     76              if (c0 > 127) {
     77                Len++; s++;
   \                     ??_GetLineLen_SJIS_1: (+1)
   \   00000004   0x1C52             ADDS     R2,R2,#+1
   \   00000006   0x1C40             ADDS     R0,R0,#+1
     78              } else {
     79                switch (c0) {
     80                case '\n': return Len;
     81                }
     82              }
     83              Len++;
   \                     ??_GetLineLen_SJIS_2: (+1)
   \   00000008   0x1C52             ADDS     R2,R2,#+1
   \                     ??_GetLineLen_SJIS_0: (+1)
   \   0000000A   0x7803             LDRB     R3,[R0, #+0]
   \   0000000C   0x2B00             CMP      R3,#+0
   \   0000000E   0xD006             BEQ.N    ??_GetLineLen_SJIS_3
   \   00000010   0x428A             CMP      R2,R1
   \   00000012   0xDA04             BGE.N    ??_GetLineLen_SJIS_3
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x2B80             CMP      R3,#+128
   \   00000018   0xDAF4             BGE.N    ??_GetLineLen_SJIS_1
   \   0000001A   0x2B0A             CMP      R3,#+10
   \   0000001C   0xD1F4             BNE.N    ??_GetLineLen_SJIS_2
     84            }
     85            return Len;
   \                     ??_GetLineLen_SJIS_3: (+1)
   \   0000001E   0x4610             MOV      R0,R2
   \   00000020   0x4770             BX       LR               ;; return
     86          }
     87          
     88          /*********************************************************************
     89          *
     90          *       _DispLine_SJIS
     91          */

   \                                 In section .text, align 2, keep-with-next
     92          static void _DispLine_SJIS(const char GUI_UNI_PTR *s, int Len) {
   \                     _DispLine_SJIS: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0xE006             B.N      ??_DispLine_SJIS_0
     93            U8 c0;
     94            while (--Len >=0) {
     95              c0=*(const U8*)s++;
     96              if (c0 > 127) {
     97                U8  c1 = *(const U8*)s++;
   \                     ??_DispLine_SJIS_1: (+1)
   \   00000008   0xF814 0x1B01      LDRB     R1,[R4], #+1
     98                Len--;
   \   0000000C   0x1E6D             SUBS     R5,R5,#+1
     99                GL_DispChar (DB2SJIS(c0, c1));
   \   0000000E   0x.... 0x....      BL       DB2SJIS
   \   00000012   0x.... 0x....      BL       GL_DispChar
    100              } else {
   \                     ??_DispLine_SJIS_0: (+1)
   \   00000016   0x1E6D             SUBS     R5,R5,#+1
   \   00000018   0xD406             BMI.N    ??_DispLine_SJIS_2
   \   0000001A   0xF814 0x0B01      LDRB     R0,[R4], #+1
   \   0000001E   0x2880             CMP      R0,#+128
   \   00000020   0xDAF2             BGE.N    ??_DispLine_SJIS_1
    101                GL_DispChar(c0);
   \   00000022   0x.... 0x....      BL       GL_DispChar
   \   00000026   0xE7F6             B.N      ??_DispLine_SJIS_0
    102              }
    103            }
    104          }
   \                     ??_DispLine_SJIS_2: (+1)
   \   00000028   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    105          
    106          /*********************************************************************
    107          *
    108          *       GUI_ENC_APIList_SJIS, API list
    109          */

   \                                 In section .rodata, align 4, keep-with-next
    110          const tGUI_ENC_APIList GUI_ENC_APIList_SJIS = {
   \                     GUI_ENC_APIList_SJIS:
   \   00000000   0x........         DC32 _GetLineDistX_SJIS, _GetLineLen_SJIS, _DispLine_SJIS
   \              0x........   
   \              0x........   
    111            _GetLineDistX_SJIS,
    112            _GetLineLen_SJIS,
    113            _DispLine_SJIS
    114          };
    115          
    116          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   DB2SJIS
      16   _DispLine_SJIS
        16   -> DB2SJIS
        16   -> GL_DispChar
      16   _GetLineDistX_SJIS
        16   -> DB2SJIS
        16   -> GUI_GetCharDistX
       0   _GetLineLen_SJIS


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       6  DB2SJIS
      12  GUI_ENC_APIList_SJIS
      42  _DispLine_SJIS
      58  _GetLineDistX_SJIS
      34  _GetLineLen_SJIS

 
  12 bytes in section .rodata
 140 bytes in section .text
 
 140 bytes of CODE  memory
  12 bytes of CONST memory

Errors: none
Warnings: none
