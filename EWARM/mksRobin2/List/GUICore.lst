###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:59
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUICore.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUICore.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\GUICore.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\GUICore.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUICore.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUICore.C
     16          Purpose     : Core routines
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stddef.h>           /* needed for definition of NULL */
     21          
     22          #define  GL_CORE_C
     23          
     24          #include "GUI_Private.h"

   \                                 In section .bss, align 4
   \   __absolute GUI_CONTEXT GUI_Context
   \                     GUI_Context:
   \   00000000                      DS8 72

   \                                 In section .bss, align 1
   \   __absolute char GUI_DecChar
   \                     GUI_DecChar:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
   \   __absolute int (void) *GUI_pfTimerExec
   \                     GUI_pfTimerExec:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute int (void) *WM_pfHandlePID
   \                     WM_pfHandlePID:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute void (*GUI_pfDispCharStyle)(unsigned short)
   \                     GUI_pfDispCharStyle:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute tLCD_APIList const *GUI_pLCD_APIList
   \                     GUI_pLCD_APIList:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute GUI_CURSOR_tfTempHide *GUI_CURSOR_pfTempHide
   \                     GUI_CURSOR_pfTempHide:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute void (void) *GUI_CURSOR_pfTempUnhide
   \                     GUI_CURSOR_pfTempUnhide:
   \   00000000                      DS8 4
     25          #include "GUIDebug.h"
     26          
     27          #if GUI_WINSUPPORT
     28            #include "WM_GUI.h"
     29            #include "WM.h"
     30          #endif
     31          
     32          /*********************************************************************
     33          *
     34          *       Static data
     35          *
     36          **********************************************************************
     37          */
     38          #if GUI_SUPPORT_AA
     39          static const tLCD_HL_APIList _HL_APIList = {
     40            LCD_DrawHLine,
     41            LCD_DrawPixel
     42          };
     43          #endif
     44          
     45          /*********************************************************************
     46          *
     47          *       Static code
     48          *
     49          **********************************************************************
     50          */
     51          /*********************************************************************
     52          *
     53          *       _InitContext
     54          *
     55          * Purpose
     56          *   Initializes the given context.
     57          *
     58          * Special considerations
     59          *   Make sure that no GUI functions are called, because locking is
     60          *   not allowed here (GUITASK_INIT not yet called).
     61          */

   \                                 In section .text, align 2, keep-with-next
     62          static void _InitContext(GUI_CONTEXT* pContext) {
   \                     _InitContext: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
     63            /* memset(..,0,..) is not required, as this function is called only at startup of the GUI when data is 0 */
     64            #if GUI_SUPPORT_DEVICES
     65              pContext->pDeviceAPI   = LCD_aAPI[0]; /* &LCD_L0_APIList; */
     66            #endif
     67            pContext->pClipRect_HL = &GUI_Context.ClipRect;
   \   00000004   0x....             LDR.N    R5,??DataTable3
   \   00000006   0x1D28             ADDS     R0,R5,#+4
   \   00000008   0x6120             STR      R0,[R4, #+16]
     68            LCD_L0_GetRect(&pContext->ClipRect);
   \   0000000A   0x1D20             ADDS     R0,R4,#+4
   \   0000000C   0x.... 0x....      BL       LCD_L0_GetRect
     69            #if GUI_SUPPORT_AA
     70              pContext->pLCD_HL      = &_HL_APIList;
     71            #endif
     72            pContext->pAFont       = GUI_DEFAULT_FONT;
   \   00000010   0x....             LDR.N    R0,??DataTable3_1
   \   00000012   0x61A0             STR      R0,[R4, #+24]
     73            pContext->pClipRect_HL = &GUI_Context.ClipRect;
   \   00000014   0x1D28             ADDS     R0,R5,#+4
   \   00000016   0x6120             STR      R0,[R4, #+16]
     74            pContext->PenSize      = 1;
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x7520             STRB     R0,[R4, #+20]
     75            /* Variables in WM module */
     76            #if GUI_WINSUPPORT
     77              pContext->hAWin    = WM_GetDesktopWindow();
   \   0000001C   0x.... 0x....      BL       WM_GetDesktopWindow
   \   00000020   0x87A0             STRH     R0,[R4, #+60]
     78            #endif
     79            /* Variables in GUI_AA module */
     80            #if GUI_SUPPORT_AA
     81              pContext->AA_Factor = 3;
     82            #endif
     83            pContext->Color   = GUI_INVALID_COLOR;
   \   00000022   0xF06F 0x4070      MVN      R0,#-268435456
   \   00000026   0x6320             STR      R0,[R4, #+48]
     84            pContext->BkColor = GUI_INVALID_COLOR;
   \   00000028   0x6360             STR      R0,[R4, #+52]
     85            LCD_SetBkColor(GUI_DEFAULT_BKCOLOR);
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       LCD_SetBkColor
     86            LCD_SetColor(GUI_DEFAULT_COLOR);
   \   00000030   0xF06F 0x407F      MVN      R0,#-16777216
   \   00000034   0x.... 0x....      BL       LCD_SetColor
     87            pContext->pUC_API = &GUI__API_TableNone;
   \   00000038   0x....             LDR.N    R0,??DataTable3_2
   \   0000003A   0x61E0             STR      R0,[R4, #+28]
     88          }
   \   0000003C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     89          
     90          /*********************************************************************
     91          *
     92          *       Public code
     93          *
     94          **********************************************************************
     95          */
     96          /*********************************************************************
     97          *
     98          *       GUI_ClearRect
     99          */

   \                                 In section .text, align 2, keep-with-next
    100          void GUI_ClearRect(int x0, int y0, int x1, int y1) {
   \                     GUI_ClearRect: (+1)
   \   00000000   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \   00000004   0x4605             MOV      R5,R0
   \   00000006   0x460E             MOV      R6,R1
   \   00000008   0x4617             MOV      R7,R2
   \   0000000A   0x4698             MOV      R8,R3
    101            GUI_DRAWMODE PrevDraw;
    102            #if GUI_WINSUPPORT
    103              GUI_RECT r;
    104            #endif
    105            GUI_LOCK();
    106            PrevDraw = LCD_SetDrawMode(GUI_DRAWMODE_REV);
   \   0000000C   0x2004             MOVS     R0,#+4
   \   0000000E   0x.... 0x....      BL       LCD_SetDrawMode
   \   00000012   0x4604             MOV      R4,R0
    107            #if GUI_WINSUPPORT
    108              WM_ADDORG(x0,y0);
   \   00000014   0x....             LDR.N    R0,??DataTable3
   \   00000016   0x6C01             LDR      R1,[R0, #+64]
   \   00000018   0x194D             ADDS     R5,R1,R5
   \   0000001A   0x6C40             LDR      R0,[R0, #+68]
   \   0000001C   0x1986             ADDS     R6,R0,R6
    109              WM_ADDORG(x1,y1);
   \   0000001E   0x19CF             ADDS     R7,R1,R7
   \   00000020   0x4480             ADD      R8,R0,R8
    110              r.x0 = x0;
   \   00000022   0x4628             MOV      R0,R5
   \   00000024   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    111              r.x1 = x1;
   \   00000028   0x4638             MOV      R0,R7
   \   0000002A   0xF8AD 0x0004      STRH     R0,[SP, #+4]
    112              r.y0 = y0;
   \   0000002E   0x4630             MOV      R0,R6
   \   00000030   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    113              r.y1 = y1;
   \   00000034   0x4640             MOV      R0,R8
   \   00000036   0xF8AD 0x0006      STRH     R0,[SP, #+6]
    114              WM_ITERATE_START(&r) {
   \   0000003A   0xA800             ADD      R0,SP,#+0
   \   0000003C   0x.... 0x....      BL       WM__InitIVRSearch
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD009             BEQ.N    ??GUI_ClearRect_0
    115            #endif
    116            LCD_FillRect(x0,y0,x1,y1);
   \                     ??GUI_ClearRect_1: (+1)
   \   00000044   0x4643             MOV      R3,R8
   \   00000046   0x463A             MOV      R2,R7
   \   00000048   0x4631             MOV      R1,R6
   \   0000004A   0x4628             MOV      R0,R5
   \   0000004C   0x.... 0x....      BL       LCD_FillRect
    117            #if GUI_WINSUPPORT
    118              } WM_ITERATE_END();
   \   00000050   0x.... 0x....      BL       WM__GetNextIVR
   \   00000054   0x2800             CMP      R0,#+0
   \   00000056   0xD1F5             BNE.N    ??GUI_ClearRect_1
    119            #endif
    120            LCD_SetDrawMode(PrevDraw);
   \                     ??GUI_ClearRect_0: (+1)
   \   00000058   0x4620             MOV      R0,R4
   \   0000005A   0x.... 0x....      BL       LCD_SetDrawMode
    121            GUI_UNLOCK();
    122          }
   \   0000005E   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    123          
    124          /*********************************************************************
    125          *
    126          *       GUI_Clear
    127          */

   \                                 In section .text, align 2, keep-with-next
    128          void GUI_Clear(void) {
   \                     GUI_Clear: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    129            GUI_GotoXY(0,0);     /* Reset text cursor to upper left */
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x4608             MOV      R0,R1
   \   00000006   0x.... 0x....      BL       GUI_GotoXY
    130            GUI_ClearRect(GUI_XMIN, GUI_YMIN, GUI_XMAX, GUI_YMAX);
   \   0000000A   0x....             LDR.N    R1,??DataTable3_3  ;; 0xfffff001
   \   0000000C   0xF640 0x72FF      MOVW     R2,#+4095
   \   00000010   0x4613             MOV      R3,R2
   \   00000012   0x4608             MOV      R0,R1
   \   00000014   0xE8BD 0x5000      POP      {R12,LR}
   \   00000018   0x....             B.N      GUI_ClearRect
    131          }
    132          
    133          /*********************************************************************
    134          *
    135          *       GUI_Init
    136          *
    137          * Purpose:
    138          *   Init of GUI internal data structures & variables
    139          */

   \                                 In section .text, align 2, keep-with-next
    140          int GUI_Init(void) {
   \                     GUI_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    141            int r;
    142            GUI_DEBUG_LOG("\nGUI_Init()");
    143            /* Init system wide globals first */
    144            GUI_DecChar = '.';
   \   00000002   0x202E             MOVS     R0,#+46
   \   00000004   0x....             LDR.N    R1,??DataTable3_4
   \   00000006   0x7008             STRB     R0,[R1, #+0]
    145          //  GUI_X_Init();
    146            /* Init context */
    147            _InitContext(&GUI_Context);
   \   00000008   0x....             LDR.N    R0,??DataTable3
   \   0000000A   0x.... 0x....      BL       _InitContext
    148            GUITASK_INIT();
    149            r = LCD_Init();
   \   0000000E   0x.... 0x....      BL       LCD_Init
   \   00000012   0x4604             MOV      R4,R0
    150            #if GUI_WINSUPPORT
    151              WM_Init();
   \   00000014   0x.... 0x....      BL       WM_Init
    152            #endif
    153            GUITASK_COPY_CONTEXT();
    154            #if defined(GUI_TRIAL_VERSION)
    155            {
    156              int i;
    157              for (i = 0; i < 10; i++) {
    158                GUI_DispString("This uC-GUI library\n"
    159          	                     "is for evaluation\n"
    160          	                     "purpose only.\n"
    161          	                     "A license is\n"
    162          	                     "required to use\n"
    163          	                     "it in a product\n\n"
    164          	                     "www.micrium.com\n");
    165                GUI_GotoXY(0, 0);
    166              }
    167            }
    168            GUI_Clear();
    169            #endif
    170            return r;
   \   00000018   0x4620             MOV      R0,R4
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
    171          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     GUI_Context

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     GUI_Font6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     GUI__API_TableNone

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0xFFFFF001         DC32     0xfffff001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     GUI_DecChar
    172          
    173          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   GUI_Clear
         0   -> GUI_ClearRect
         8   -> GUI_GotoXY
      32   GUI_ClearRect
        32   -> LCD_FillRect
        32   -> LCD_SetDrawMode
        32   -> WM__GetNextIVR
        32   -> WM__InitIVRSearch
       8   GUI_Init
         8   -> LCD_Init
         8   -> WM_Init
         8   -> _InitContext
      16   _InitContext
        16   -> LCD_L0_GetRect
        16   -> LCD_SetBkColor
        16   -> LCD_SetColor
        16   -> WM_GetDesktopWindow


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  GUI_CURSOR_pfTempHide
       4  GUI_CURSOR_pfTempUnhide
      26  GUI_Clear
      98  GUI_ClearRect
      72  GUI_Context
       1  GUI_DecChar
      28  GUI_Init
       4  GUI_pLCD_APIList
       4  GUI_pfDispCharStyle
       4  GUI_pfTimerExec
       4  WM_pfHandlePID
      62  _InitContext

 
  97 bytes in section .bss
 234 bytes in section .text
 
 234 bytes of CODE memory
  97 bytes of DATA memory

Errors: none
Warnings: none
