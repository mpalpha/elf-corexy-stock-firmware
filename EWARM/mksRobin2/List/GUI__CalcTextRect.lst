###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:27
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI__CalcTextRect.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI__CalcTextRect.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\GUI__CalcTextRect.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\GUI__CalcTextRect.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI__CalcTextRect.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI__CalcTextRect.c
     16          Purpose     : Implementation of gui function
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stdlib.h>
     21          #include "GUI_Protected.h"
     22          #include "GUI.h"
     23          
     24          /*********************************************************************
     25          *
     26          *       Public code
     27          *
     28          **********************************************************************
     29          */
     30          /*********************************************************************
     31          *
     32          *       GUI__CalcTextRect
     33          */

   \                                 In section .text, align 2, keep-with-next
     34          void GUI__CalcTextRect(const char GUI_UNI_PTR* pText, const GUI_RECT* pTextRectIn, GUI_RECT* pTextRectOut, int TextAlign) {
   \                     GUI__CalcTextRect: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x460C             MOV      R4,R1
   \   00000006   0x4615             MOV      R5,R2
   \   00000008   0x4698             MOV      R8,R3
     35            if (pText) {
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD03C             BEQ.N    ??GUI__CalcTextRect_0
     36              int xPos, yPos, TextWidth, TextHeight;
     37          
     38              /* Calculate X-pos of text */
     39              TextWidth = GUI_GetStringDistX(pText);
   \   0000000E   0x.... 0x....      BL       GUI_GetStringDistX
   \   00000012   0x4606             MOV      R6,R0
     40              switch (TextAlign & GUI_TA_HORIZONTAL) {
   \   00000014   0xF008 0x0013      AND      R0,R8,#0x13
   \   00000018   0x2801             CMP      R0,#+1
   \   0000001A   0xD00D             BEQ.N    ??GUI__CalcTextRect_1
   \   0000001C   0x2802             CMP      R0,#+2
   \   0000001E   0xD110             BNE.N    ??GUI__CalcTextRect_2
     41              case GUI_TA_HCENTER:
     42                xPos = pTextRectIn->x0 + ((pTextRectIn->x1 - pTextRectIn->x0 + 1) - TextWidth) / 2;
   \   00000020   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000024   0xF9B4 0x1004      LDRSH    R1,[R4, #+4]
   \   00000028   0x1A09             SUBS     R1,R1,R0
   \   0000002A   0x1C49             ADDS     R1,R1,#+1
   \   0000002C   0x1B89             SUBS     R1,R1,R6
   \   0000002E   0xEB01 0x71D1      ADD      R1,R1,R1, LSR #+31
   \   00000032   0xEB00 0x0761      ADD      R7,R0,R1, ASR #+1
     43                break;
   \   00000036   0xE006             B.N      ??GUI__CalcTextRect_3
     44              case GUI_TA_RIGHT:
     45                xPos = pTextRectIn->x1 - TextWidth + 1;
   \                     ??GUI__CalcTextRect_1: (+1)
   \   00000038   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   0000003C   0x1B80             SUBS     R0,R0,R6
   \   0000003E   0x1C47             ADDS     R7,R0,#+1
     46                break;
   \   00000040   0xE001             B.N      ??GUI__CalcTextRect_3
     47              default:
     48                xPos = pTextRectIn->x0;
   \                     ??GUI__CalcTextRect_2: (+1)
   \   00000042   0xF9B4 0x7000      LDRSH    R7,[R4, #+0]
     49              }
     50          
     51              /* Calculate Y-pos of text*/
     52              TextHeight = GUI_GetFontDistY();
   \                     ??GUI__CalcTextRect_3: (+1)
   \   00000046   0x.... 0x....      BL       GUI_GetFontDistY
     53              switch (TextAlign & GUI_TA_VERTICAL) {
   \   0000004A   0xF008 0x010C      AND      R1,R8,#0xC
   \   0000004E   0x2904             CMP      R1,#+4
   \   00000050   0xD00D             BEQ.N    ??GUI__CalcTextRect_4
   \   00000052   0x290C             CMP      R1,#+12
   \   00000054   0xF9B4 0x1002      LDRSH    R1,[R4, #+2]
   \   00000058   0xD10D             BNE.N    ??GUI__CalcTextRect_5
     54              case GUI_TA_VCENTER:
     55                yPos = pTextRectIn->y0 + ((pTextRectIn->y1 - pTextRectIn->y0 + 1) - TextHeight) / 2;
   \   0000005A   0xF9B4 0x2006      LDRSH    R2,[R4, #+6]
   \   0000005E   0x1A52             SUBS     R2,R2,R1
   \   00000060   0x1C52             ADDS     R2,R2,#+1
   \   00000062   0x1A12             SUBS     R2,R2,R0
   \   00000064   0xEB02 0x72D2      ADD      R2,R2,R2, LSR #+31
   \   00000068   0xEB01 0x0162      ADD      R1,R1,R2, ASR #+1
     56                break;
   \   0000006C   0xE003             B.N      ??GUI__CalcTextRect_5
     57              case GUI_TA_BOTTOM:
     58                yPos = pTextRectIn->y1 - TextHeight + 1;
   \                     ??GUI__CalcTextRect_4: (+1)
   \   0000006E   0xF9B4 0x1006      LDRSH    R1,[R4, #+6]
   \   00000072   0x1A09             SUBS     R1,R1,R0
   \   00000074   0x1C49             ADDS     R1,R1,#+1
     59                break;
     60              case GUI_TA_BASELINE:
     61              default:
     62                yPos = pTextRectIn->y0;
     63              }
     64          
     65              /* Return text rectangle */
     66              pTextRectOut->x0 = xPos;
   \                     ??GUI__CalcTextRect_5: (+1)
   \   00000076   0x802F             STRH     R7,[R5, #+0]
     67              pTextRectOut->y0 = yPos;
   \   00000078   0x8069             STRH     R1,[R5, #+2]
     68              pTextRectOut->x1 = xPos + TextWidth  - 1;
   \   0000007A   0x19F2             ADDS     R2,R6,R7
   \   0000007C   0x1E52             SUBS     R2,R2,#+1
   \   0000007E   0x80AA             STRH     R2,[R5, #+4]
     69              pTextRectOut->y1 = yPos + TextHeight - 1;
   \   00000080   0x1840             ADDS     R0,R0,R1
   \   00000082   0x1E40             SUBS     R0,R0,#+1
   \   00000084   0x80E8             STRH     R0,[R5, #+6]
   \   00000086   0xE005             B.N      ??GUI__CalcTextRect_6
     70            } else {
     71              *pTextRectOut = *pTextRectIn;
   \                     ??GUI__CalcTextRect_0: (+1)
   \   00000088   0x4628             MOV      R0,R5
   \   0000008A   0x2208             MOVS     R2,#+8
   \   0000008C   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000090   0x.... 0x....      B.W      __aeabi_memcpy
     72            }
     73          }
   \                     ??GUI__CalcTextRect_6: (+1)
   \   00000094   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
     74          
     75          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   GUI__CalcTextRect
        24   -> GUI_GetFontDistY
        24   -> GUI_GetStringDistX
         0   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     152  GUI__CalcTextRect

 
 152 bytes in section .text
 
 152 bytes of CODE memory

Errors: none
Warnings: none
