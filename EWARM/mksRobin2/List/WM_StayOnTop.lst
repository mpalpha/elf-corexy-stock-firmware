###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:29
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_StayOnTop.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_StayOnTop.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\WM_StayOnTop.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WM_StayOnTop.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_StayOnTop.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_StayOnTop.c
     16          Purpose     : Windows manager, add. module
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "WM_Intern.h"
     21          
     22          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     23          
     24          /*********************************************************************
     25          *
     26          *       Public code
     27          *
     28          **********************************************************************
     29          */
     30          
     31          /*********************************************************************
     32          *
     33          *       WM_SetStayOnTop
     34          */

   \                                 In section .text, align 2, keep-with-next
     35          void WM_SetStayOnTop(WM_HWIN hWin, int OnOff) {
   \                     WM_SetStayOnTop: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     36            WM_Obj * pWin;
     37            if (hWin) {
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD01F             BEQ.N    ??WM_SetStayOnTop_0
     38              U16 OldStatus;
     39              WM_LOCK();
     40              pWin = WM_H2P(hWin);
   \   0000000A   0x.... 0x....      BL       GUI_ALLOC_h2p
     41              OldStatus = pWin->Status;
   \   0000000E   0x8B81             LDRH     R1,[R0, #+28]
   \   00000010   0x460A             MOV      R2,R1
     42              if (OnOff) {
   \   00000012   0xF001 0x0308      AND      R3,R1,#0x8
   \   00000016   0x2D00             CMP      R5,#+0
   \   00000018   0xD005             BEQ.N    ??WM_SetStayOnTop_1
     43                if ((pWin->Status & WM_SF_STAYONTOP) == 0) {  /* First check if this is necessary at all */
   \   0000001A   0x2B00             CMP      R3,#+0
   \   0000001C   0xD109             BNE.N    ??WM_SetStayOnTop_2
     44                  pWin->Status |= WM_SF_STAYONTOP;
   \   0000001E   0xF041 0x0108      ORR      R1,R1,#0x8
   \   00000022   0x8381             STRH     R1,[R0, #+28]
   \   00000024   0xE005             B.N      ??WM_SetStayOnTop_2
     45                }
     46              } else {
     47                if ((pWin->Status & WM_SF_STAYONTOP) != 0) {  /* First check if this is necessary at all */
   \                     ??WM_SetStayOnTop_1: (+1)
   \   00000026   0x2B00             CMP      R3,#+0
   \   00000028   0xD003             BEQ.N    ??WM_SetStayOnTop_2
     48                  pWin->Status &= ~WM_SF_STAYONTOP;
   \   0000002A   0xF64F 0x73F7      MOVW     R3,#+65527
   \   0000002E   0x4019             ANDS     R1,R3,R1
   \   00000030   0x8381             STRH     R1,[R0, #+28]
     49                }
     50              }
     51              if (pWin->Status != OldStatus) {
   \                     ??WM_SetStayOnTop_2: (+1)
   \   00000032   0x8B80             LDRH     R0,[R0, #+28]
   \   00000034   0x4290             CMP      R0,R2
   \   00000036   0xD008             BEQ.N    ??WM_SetStayOnTop_0
     52                WM_AttachWindow(hWin, WM_GetParent(hWin));
   \   00000038   0x4620             MOV      R0,R4
   \   0000003A   0x.... 0x....      BL       WM_GetParent
   \   0000003E   0x4601             MOV      R1,R0
   \   00000040   0x4620             MOV      R0,R4
   \   00000042   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \   00000046   0x.... 0x....      B.W      WM_AttachWindow
     53              }
     54              WM_UNLOCK();
     55            }
     56          }
   \                     ??WM_SetStayOnTop_0: (+1)
   \   0000004A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     57          
     58          /*********************************************************************
     59          *
     60          *       WM_GetStayOnTop
     61          */

   \                                 In section .text, align 2, keep-with-next
     62          int WM_GetStayOnTop(WM_HWIN hWin) {
   \                     WM_GetStayOnTop: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     63            int Result = 0;
   \   00000002   0x2400             MOVS     R4,#+0
     64            WM_Obj * pWin;
     65            if (hWin) {
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD005             BEQ.N    ??WM_GetStayOnTop_0
     66              WM_LOCK();
     67              pWin = WM_H2P(hWin);
   \   00000008   0x.... 0x....      BL       GUI_ALLOC_h2p
     68              if ((pWin->Status & WM_SF_STAYONTOP) != 0) {
   \   0000000C   0x7F00             LDRB     R0,[R0, #+28]
   \   0000000E   0x0700             LSLS     R0,R0,#+28
   \   00000010   0xD500             BPL.N    ??WM_GetStayOnTop_0
     69                Result = 1;
   \   00000012   0x2401             MOVS     R4,#+1
     70              }
     71              WM_UNLOCK();
     72            }
     73            return Result;
   \                     ??WM_GetStayOnTop_0: (+1)
   \   00000014   0x4620             MOV      R0,R4
   \   00000016   0xBD10             POP      {R4,PC}          ;; return
     74          }
     75          
     76          #else
     77            void WM_StayOnTop_C(void) {} /* avoid empty object files */
     78          #endif
     79          
     80          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   WM_GetStayOnTop
         8   -> GUI_ALLOC_h2p
      16   WM_SetStayOnTop
        16   -> GUI_ALLOC_h2p
         0   -> WM_AttachWindow
        16   -> WM_GetParent


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      24  WM_GetStayOnTop
      76  WM_SetStayOnTop

 
 100 bytes in section .text
 
 100 bytes of CODE memory

Errors: none
Warnings: none
