###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:00:57
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\MENU.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\MENU.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\MENU.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\MENU.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\MENU.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : MENU.c
     16          Purpose     : Implementation of menu widget
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stdlib.h>
     21          #include <string.h>
     22          
     23          #define MENU_C       /* Required to generate intermodule data */
     24          
     25          #include "MENU.h"
     26          #include "MENU_Private.h"
     27          #include "GUIDebug.h"
     28          #include "GUI_Protected.h"
     29          
     30          #if GUI_WINSUPPORT
     31          
     32          /*********************************************************************
     33          *
     34          *       Private config defaults
     35          *
     36          **********************************************************************
     37          */
     38          
     39          /* Define default font */
     40          #ifndef MENU_FONT_DEFAULT
     41            #define MENU_FONT_DEFAULT         &GUI_Font13_1
     42          #endif
     43          
     44          /* Define default effect */
     45          #ifndef MENU_EFFECT_DEFAULT
     46            #define MENU_EFFECT_DEFAULT       &WIDGET_Effect_3D1L
     47          #endif
     48          
     49          /* Define colors, index 0, enabled, not selected */
     50          #ifndef MENU_TEXTCOLOR0_DEFAULT
     51            #define MENU_TEXTCOLOR0_DEFAULT   GUI_BLACK
     52          #endif
     53          
     54          #ifndef MENU_BKCOLOR0_DEFAULT
     55            #define MENU_BKCOLOR0_DEFAULT     GUI_LIGHTGRAY
     56          #endif
     57          
     58          /* Define colors, index 1, enabled, selected */
     59          #ifndef MENU_TEXTCOLOR1_DEFAULT
     60            #define MENU_TEXTCOLOR1_DEFAULT   GUI_WHITE
     61          #endif
     62          
     63          #ifndef MENU_BKCOLOR1_DEFAULT
     64            #define MENU_BKCOLOR1_DEFAULT     0x980000
     65          #endif
     66          
     67          /* Define colors, index 2, disabled, not selected */
     68          #ifndef MENU_TEXTCOLOR2_DEFAULT
     69            #define MENU_TEXTCOLOR2_DEFAULT   0x7C7C7C
     70          #endif
     71          
     72          #ifndef MENU_BKCOLOR2_DEFAULT
     73            #define MENU_BKCOLOR2_DEFAULT     GUI_LIGHTGRAY
     74          #endif
     75          
     76          /* Define colors, index 3, disabled, selected */
     77          #ifndef MENU_TEXTCOLOR3_DEFAULT
     78            #define MENU_TEXTCOLOR3_DEFAULT   GUI_LIGHTGRAY
     79          #endif
     80          
     81          #ifndef MENU_BKCOLOR3_DEFAULT
     82            #define MENU_BKCOLOR3_DEFAULT     0x980000
     83          #endif
     84          
     85          /* Define colors, index 4, active submenu */
     86          #ifndef MENU_TEXTCOLOR4_DEFAULT
     87            #define MENU_TEXTCOLOR4_DEFAULT   GUI_WHITE
     88          #endif
     89          
     90          #ifndef MENU_BKCOLOR4_DEFAULT
     91            #define MENU_BKCOLOR4_DEFAULT     0x7C7C7C
     92          #endif
     93          
     94          /* Define borders */
     95          #ifndef MENU_BORDER_LEFT_DEFAULT
     96            #define MENU_BORDER_LEFT_DEFAULT    4
     97          #endif
     98          
     99          #ifndef MENU_BORDER_RIGHT_DEFAULT
    100            #define MENU_BORDER_RIGHT_DEFAULT   4
    101          #endif
    102          
    103          #ifndef MENU_BORDER_TOP_DEFAULT
    104            #define MENU_BORDER_TOP_DEFAULT     2
    105          #endif
    106          
    107          #ifndef MENU_BORDER_BOTTOM_DEFAULT
    108            #define MENU_BORDER_BOTTOM_DEFAULT  2
    109          #endif
    110          
    111          /*********************************************************************
    112          *
    113          *       Static data
    114          *
    115          **********************************************************************
    116          */
    117          

   \                                 In section .data, align 4
    118          MENU_PROPS MENU__DefaultProps = {
   \                     MENU__DefaultProps:
   \   00000000   0x00000000         DC32 0, 16777215, 8158332, 13882323, 16777215, 13882323, 9961472
   \              0x00FFFFFF   
   \              0x007C7C7C   
   \              0x00D3D3D3   
   \              0x00FFFFFF   
   \              0x00D3D3D3   
   \              0x00980000   
   \   0000001C   0x00D3D3D3         DC32 13882323, 9961472, 8158332
   \              0x00980000   
   \              0x007C7C7C   
   \   00000028   0x04 0x04          DC8 4, 4, 2, 2
   \              0x02 0x02    
   \   0000002C   0x........         DC32 GUI_Font13_1
    119            MENU_TEXTCOLOR0_DEFAULT,
    120            MENU_TEXTCOLOR1_DEFAULT,
    121            MENU_TEXTCOLOR2_DEFAULT,
    122            MENU_TEXTCOLOR3_DEFAULT,
    123            MENU_TEXTCOLOR4_DEFAULT,
    124            MENU_BKCOLOR0_DEFAULT,
    125            MENU_BKCOLOR1_DEFAULT,
    126            MENU_BKCOLOR2_DEFAULT,
    127            MENU_BKCOLOR3_DEFAULT,
    128            MENU_BKCOLOR4_DEFAULT,
    129            MENU_BORDER_LEFT_DEFAULT,
    130            MENU_BORDER_RIGHT_DEFAULT,
    131            MENU_BORDER_TOP_DEFAULT,
    132            MENU_BORDER_BOTTOM_DEFAULT,
    133            MENU_FONT_DEFAULT
    134          };
    135          
    136          const WIDGET_EFFECT* MENU__pDefaultEffect = MENU_EFFECT_DEFAULT;
   \                     MENU__pDefaultEffect:
   \   00000030   0x........         DC32 WIDGET_Effect_3D1L
    137          
    138          /*********************************************************************
    139          *
    140          *       Macros for internal use
    141          *
    142          **********************************************************************
    143          */
    144          
    145          #if GUI_DEBUG_LEVEL >= GUI_DEBUG_LEVEL_CHECK_ALL
    146            #define OBJECT_ID 0x7843   /* Magic nubmer, should be unique if possible */
    147            #define INIT_ID(p)   p->DebugId = OBJECT_ID
    148            #define DEINIT_ID(p) p->DebugId = 0
    149          #else
    150            #define INIT_ID(p)
    151            #define DEINIT_ID(p)
    152          #endif
    153          
    154          /*********************************************************************
    155          *
    156          *       Static routines, for higher debug level only
    157          *
    158          **********************************************************************
    159          */
    160          /*********************************************************************
    161          *
    162          *       MENU_h2p
    163          */
    164          #if GUI_DEBUG_LEVEL >= GUI_DEBUG_LEVEL_CHECK_ALL
    165          MENU_Obj* MENU_h2p(MENU_Handle h) {
    166            MENU_Obj* p = (MENU_Obj*)GUI_ALLOC_h2p(h);
    167            if (p) {
    168              if (p->DebugId != OBJECT_ID) {
    169                GUI_DEBUG_ERROROUT("MENU.c: Wrong handle type or Object not init'ed");
    170                return 0;
    171              }
    172            }
    173            return p;
    174          }
    175          #endif
    176          
    177          /*********************************************************************
    178          *
    179          *       Static routines
    180          *
    181          **********************************************************************
    182          */
    183          /*********************************************************************
    184          *
    185          *       _IsTopLevelMenu
    186          */

   \                                 In section .text, align 2, keep-with-next
    187          static char _IsTopLevelMenu(MENU_Handle hObj, const MENU_Obj* pObj) {
   \                     _IsTopLevelMenu: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    188            if (MENU__SendMenuMessage(hObj, pObj->hOwner, MENU_IS_MENU, 0) == 0) {
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2205             MOVS     R2,#+5
   \   00000006   0xF9B1 0x105C      LDRSH    R1,[R1, #+92]
   \   0000000A   0x.... 0x....      BL       MENU__SendMenuMessage
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD101             BNE.N    ??_IsTopLevelMenu_0
    189              return 1;
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0xBD02             POP      {R1,PC}
    190            }
    191            return 0;
   \                     ??_IsTopLevelMenu_0: (+1)
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0xBD02             POP      {R1,PC}          ;; return
    192          }
    193          
    194          /*********************************************************************
    195          *
    196          *       _HasEffect
    197          */

   \                                 In section .text, align 2, keep-with-next
    198          static int _HasEffect(MENU_Handle hObj, MENU_Obj* pObj) {
   \                     _HasEffect: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    199            if (!(pObj->Flags & MENU_SF_POPUP)) {
   \   00000002   0xF891 0x205E      LDRB     R2,[R1, #+94]
   \   00000006   0x0612             LSLS     R2,R2,#+24
   \   00000008   0xD405             BMI.N    ??_HasEffect_0
    200              if (_IsTopLevelMenu(hObj, pObj)) {
   \   0000000A   0x.... 0x....      BL       _IsTopLevelMenu
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD001             BEQ.N    ??_HasEffect_0
    201                return 0;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xBD02             POP      {R1,PC}
    202              }
    203            }
    204            return 1;
   \                     ??_HasEffect_0: (+1)
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0xBD02             POP      {R1,PC}          ;; return
    205          }
    206          
    207          /*********************************************************************
    208          *
    209          *       _GetEffectSize
    210          */

   \                                 In section .text, align 2, keep-with-next
    211          static int _GetEffectSize(MENU_Handle hObj, MENU_Obj* pObj) {
   \                     _GetEffectSize: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x460C             MOV      R4,R1
    212            int r = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    213            if (_HasEffect(hObj, pObj)) { 
   \   00000006   0x.... 0x....      BL       _HasEffect
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD001             BEQ.N    ??_GetEffectSize_0
    214              r = pObj->Widget.pEffect->EffectSize;
   \   0000000E   0x6A20             LDR      R0,[R4, #+32]
   \   00000010   0x6945             LDR      R5,[R0, #+20]
    215            }
    216            return r;
   \                     ??_GetEffectSize_0: (+1)
   \   00000012   0x4628             MOV      R0,R5
   \   00000014   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    217          }
    218          
    219          /*********************************************************************
    220          *
    221          *       _CalcTextWidth
    222          */

   \                                 In section .text, align 2, keep-with-next
    223          static int _CalcTextWidth(MENU_Obj* pObj, const char GUI_UNI_PTR* sText) {
   \                     _CalcTextWidth: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x460C             MOV      R4,R1
    224            int TextWidth = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    225            if (sText) {
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD00A             BEQ.N    ??_CalcTextWidth_0
    226              const GUI_FONT GUI_UNI_PTR* pOldFont;
    227              pOldFont  = GUI_SetFont(pObj->Props.pFont);
   \   0000000A   0x6D40             LDR      R0,[R0, #+84]
   \   0000000C   0x.... 0x....      BL       GUI_SetFont
   \   00000010   0x4606             MOV      R6,R0
    228              TextWidth = GUI_GetStringDistX(sText);
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       GUI_GetStringDistX
   \   00000018   0x4605             MOV      R5,R0
    229              GUI_SetFont(pOldFont);
   \   0000001A   0x4630             MOV      R0,R6
   \   0000001C   0x.... 0x....      BL       GUI_SetFont
    230            }
    231            return TextWidth;
   \                     ??_CalcTextWidth_0: (+1)
   \   00000020   0x4628             MOV      R0,R5
   \   00000022   0xBD70             POP      {R4-R6,PC}       ;; return
    232          }
    233          
    234          /*********************************************************************
    235          *
    236          *       _GetItemWidth
    237          */

   \                                 In section .text, align 2, keep-with-next
    238          static int _GetItemWidth(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index) {
   \                     _GetItemWidth: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x460C             MOV      R4,R1
   \   00000004   0x4611             MOV      R1,R2
    239            int ItemWidth;
    240            if (pObj->Width && (pObj->Flags & MENU_SF_VERTICAL)) {
   \   00000006   0xF104 0x0550      ADD      R5,R4,#+80
   \   0000000A   0x696A             LDR      R2,[R5, #+20]
   \   0000000C   0x2A00             CMP      R2,#+0
   \   0000000E   0xD009             BEQ.N    ??_GetItemWidth_0
   \   00000010   0x7BAA             LDRB     R2,[R5, #+14]
   \   00000012   0x07D2             LSLS     R2,R2,#+31
   \   00000014   0xD506             BPL.N    ??_GetItemWidth_0
    241              ItemWidth = pObj->Width - (_GetEffectSize(hObj, pObj) << 1);
   \   00000016   0x696D             LDR      R5,[R5, #+20]
   \   00000018   0x4621             MOV      R1,R4
   \   0000001A   0x.... 0x....      BL       _GetEffectSize
   \   0000001E   0xEBA5 0x0040      SUB      R0,R5,R0, LSL #+1
   \   00000022   0xBD32             POP      {R1,R4,R5,PC}
    242            } else {
    243              MENU_ITEM* pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
   \                     ??_GetItemWidth_0: (+1)
   \   00000024   0xF104 0x0058      ADD      R0,R4,#+88
   \   00000028   0x.... 0x....      BL       GUI_ARRAY_GetpItem
    244              if ((pObj->Flags & MENU_SF_VERTICAL) || !(pItem->Flags & MENU_IF_SEPARATOR)) {
   \   0000002C   0x7BA9             LDRB     R1,[R5, #+14]
   \   0000002E   0x07C9             LSLS     R1,R1,#+31
   \   00000030   0xD402             BMI.N    ??_GetItemWidth_1
   \   00000032   0x7901             LDRB     R1,[R0, #+4]
   \   00000034   0x0789             LSLS     R1,R1,#+30
   \   00000036   0xD401             BMI.N    ??_GetItemWidth_2
    245                ItemWidth = pItem->TextWidth;
   \                     ??_GetItemWidth_1: (+1)
   \   00000038   0x6880             LDR      R0,[R0, #+8]
   \   0000003A   0xE000             B.N      ??_GetItemWidth_3
    246              } else {
    247                ItemWidth = 3;
   \                     ??_GetItemWidth_2: (+1)
   \   0000003C   0x2003             MOVS     R0,#+3
    248             }
    249              ItemWidth += pObj->Props.aBorder[MENU_BI_LEFT] + pObj->Props.aBorder[MENU_BI_RIGHT];
   \                     ??_GetItemWidth_3: (+1)
   \   0000003E   0xF894 0x1050      LDRB     R1,[R4, #+80]
   \   00000042   0x786A             LDRB     R2,[R5, #+1]
   \   00000044   0x1851             ADDS     R1,R2,R1
   \   00000046   0x1808             ADDS     R0,R1,R0
    250            }
    251            return ItemWidth;
   \   00000048   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    252          }
    253          
    254          /*********************************************************************
    255          *
    256          *       _GetItemHeight
    257          */

   \                                 In section .text, align 2, keep-with-next
    258          static int _GetItemHeight(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index) {
   \                     _GetItemHeight: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x460C             MOV      R4,R1
   \   00000004   0x4615             MOV      R5,R2
    259            int ItemHeight;
    260            if (pObj->Height && !(pObj->Flags & MENU_SF_VERTICAL)) {
   \   00000006   0xF104 0x0754      ADD      R7,R4,#+84
   \   0000000A   0x6979             LDR      R1,[R7, #+20]
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD009             BEQ.N    ??_GetItemHeight_0
   \   00000010   0x7AB9             LDRB     R1,[R7, #+10]
   \   00000012   0x07C9             LSLS     R1,R1,#+31
   \   00000014   0xD406             BMI.N    ??_GetItemHeight_0
    261              ItemHeight = pObj->Height - (_GetEffectSize(hObj, pObj) << 1);
   \   00000016   0x697D             LDR      R5,[R7, #+20]
   \   00000018   0x4621             MOV      R1,R4
   \   0000001A   0x.... 0x....      BL       _GetEffectSize
   \   0000001E   0xEBA5 0x0040      SUB      R0,R5,R0, LSL #+1
   \   00000022   0xBDF2             POP      {R1,R4-R7,PC}
    262            } else {
    263              ItemHeight = GUI_GetYDistOfFont(pObj->Props.pFont);
   \                     ??_GetItemHeight_0: (+1)
   \   00000024   0x6D60             LDR      R0,[R4, #+84]
   \   00000026   0x.... 0x....      BL       GUI_GetYDistOfFont
   \   0000002A   0x4606             MOV      R6,R0
    264              if (pObj->Flags & MENU_SF_VERTICAL) {
   \   0000002C   0x7AB8             LDRB     R0,[R7, #+10]
   \   0000002E   0x07C0             LSLS     R0,R0,#+31
   \   00000030   0xD508             BPL.N    ??_GetItemHeight_1
    265                MENU_ITEM* pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
   \   00000032   0x4629             MOV      R1,R5
   \   00000034   0xF104 0x0058      ADD      R0,R4,#+88
   \   00000038   0x.... 0x....      BL       GUI_ARRAY_GetpItem
    266                if (pItem->Flags & MENU_IF_SEPARATOR) {
   \   0000003C   0x7900             LDRB     R0,[R0, #+4]
   \   0000003E   0x0780             LSLS     R0,R0,#+30
   \   00000040   0xD500             BPL.N    ??_GetItemHeight_1
    267                  ItemHeight = 3;
   \   00000042   0x2603             MOVS     R6,#+3
    268                }
    269              }
    270              ItemHeight += pObj->Props.aBorder[MENU_BI_TOP] + pObj->Props.aBorder[MENU_BI_BOTTOM];
   \                     ??_GetItemHeight_1: (+1)
   \   00000044   0xF894 0x0052      LDRB     R0,[R4, #+82]
   \   00000048   0xF894 0x1053      LDRB     R1,[R4, #+83]
   \   0000004C   0x1808             ADDS     R0,R1,R0
   \   0000004E   0x1980             ADDS     R0,R0,R6
    271            }
    272            return ItemHeight;
   \   00000050   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    273          }
    274          
    275          /*********************************************************************
    276          *
    277          *       _CalcMenuSizeX
    278          */

   \                                 In section .text, align 2, keep-with-next
    279          static int _CalcMenuSizeX(MENU_Handle hObj, MENU_Obj* pObj) {
   \                     _CalcMenuSizeX: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
    280            unsigned i, NumItems = MENU__GetNumItems(pObj);
   \   00000008   0x4628             MOV      R0,R5
   \   0000000A   0x.... 0x....      BL       MENU__GetNumItems
   \   0000000E   0x4606             MOV      R6,R0
    281            int xSize = 0;
   \   00000010   0x2700             MOVS     R7,#+0
    282            if (pObj->Flags & MENU_SF_VERTICAL) {
   \   00000012   0xF895 0x005E      LDRB     R0,[R5, #+94]
   \   00000016   0x07C0             LSLS     R0,R0,#+31
   \   00000018   0x46B8             MOV      R8,R7
   \   0000001A   0xD514             BPL.N    ??_CalcMenuSizeX_0
    283              int ItemWidth;
    284              for (i = 0; i < NumItems; i++) {
   \                     ??_CalcMenuSizeX_1: (+1)
   \   0000001C   0x45B0             CMP      R8,R6
   \   0000001E   0xD214             BCS.N    ??_CalcMenuSizeX_2
    285                ItemWidth = _GetItemWidth(hObj, pObj, i);
   \   00000020   0x4642             MOV      R2,R8
   \   00000022   0x4629             MOV      R1,R5
   \   00000024   0x4620             MOV      R0,R4
   \   00000026   0x.... 0x....      BL       _GetItemWidth
    286                if (ItemWidth > xSize) {
   \   0000002A   0x4287             CMP      R7,R0
   \   0000002C   0xDA00             BGE.N    ??_CalcMenuSizeX_3
   \   0000002E   0x4607             MOV      R7,R0
    287                  xSize = ItemWidth;
    288                }
    289              }
   \                     ??_CalcMenuSizeX_3: (+1)
   \   00000030   0xF108 0x0801      ADD      R8,R8,#+1
   \   00000034   0xE7F2             B.N      ??_CalcMenuSizeX_1
    290            } else {
    291              for (i = 0; i < NumItems; i++) {
    292                xSize += _GetItemWidth(hObj, pObj, i);
   \                     ??_CalcMenuSizeX_4: (+1)
   \   00000036   0x4642             MOV      R2,R8
   \   00000038   0x4629             MOV      R1,R5
   \   0000003A   0x4620             MOV      R0,R4
   \   0000003C   0x.... 0x....      BL       _GetItemWidth
   \   00000040   0x19C7             ADDS     R7,R0,R7
    293              }
   \   00000042   0xF108 0x0801      ADD      R8,R8,#+1
   \                     ??_CalcMenuSizeX_0: (+1)
   \   00000046   0x45B0             CMP      R8,R6
   \   00000048   0xD3F5             BCC.N    ??_CalcMenuSizeX_4
    294            }
    295            xSize += (_GetEffectSize(hObj, pObj) << 1);
   \                     ??_CalcMenuSizeX_2: (+1)
   \   0000004A   0x4629             MOV      R1,R5
   \   0000004C   0x4620             MOV      R0,R4
   \   0000004E   0x.... 0x....      BL       _GetEffectSize
   \   00000052   0xEB07 0x0040      ADD      R0,R7,R0, LSL #+1
    296            return xSize;
   \   00000056   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    297          }
    298          
    299          /*********************************************************************
    300          *
    301          *       _CalcMenuSizeY
    302          */

   \                                 In section .text, align 2, keep-with-next
    303          static int _CalcMenuSizeY(MENU_Handle hObj, MENU_Obj* pObj) {
   \                     _CalcMenuSizeY: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
    304            unsigned i, NumItems = MENU__GetNumItems(pObj);
   \   00000008   0x4628             MOV      R0,R5
   \   0000000A   0x.... 0x....      BL       MENU__GetNumItems
   \   0000000E   0x4606             MOV      R6,R0
    305            int ySize = 0;
   \   00000010   0x2700             MOVS     R7,#+0
    306            if (pObj->Flags & MENU_SF_VERTICAL) {
   \   00000012   0xF895 0x005E      LDRB     R0,[R5, #+94]
   \   00000016   0x07C0             LSLS     R0,R0,#+31
   \   00000018   0x46B8             MOV      R8,R7
   \   0000001A   0xD514             BPL.N    ??_CalcMenuSizeY_0
    307              for (i = 0; i < NumItems; i++) {
   \                     ??_CalcMenuSizeY_1: (+1)
   \   0000001C   0x45B0             CMP      R8,R6
   \   0000001E   0xD214             BCS.N    ??_CalcMenuSizeY_2
    308                ySize += _GetItemHeight(hObj, pObj, i);
   \   00000020   0x4642             MOV      R2,R8
   \   00000022   0x4629             MOV      R1,R5
   \   00000024   0x4620             MOV      R0,R4
   \   00000026   0x.... 0x....      BL       _GetItemHeight
   \   0000002A   0x19C7             ADDS     R7,R0,R7
    309              }
   \   0000002C   0xF108 0x0801      ADD      R8,R8,#+1
   \   00000030   0xE7F4             B.N      ??_CalcMenuSizeY_1
    310            } else {
    311              int ItemHeight;
    312              for (i = 0; i < NumItems; i++) {
    313                ItemHeight = _GetItemHeight(hObj, pObj, i);
   \                     ??_CalcMenuSizeY_3: (+1)
   \   00000032   0x4642             MOV      R2,R8
   \   00000034   0x4629             MOV      R1,R5
   \   00000036   0x4620             MOV      R0,R4
   \   00000038   0x.... 0x....      BL       _GetItemHeight
    314                if (ItemHeight > ySize) {
   \   0000003C   0x4287             CMP      R7,R0
   \   0000003E   0xDA00             BGE.N    ??_CalcMenuSizeY_4
   \   00000040   0x4607             MOV      R7,R0
    315                  ySize = ItemHeight;
    316                }
    317              }
   \                     ??_CalcMenuSizeY_4: (+1)
   \   00000042   0xF108 0x0801      ADD      R8,R8,#+1
   \                     ??_CalcMenuSizeY_0: (+1)
   \   00000046   0x45B0             CMP      R8,R6
   \   00000048   0xD3F3             BCC.N    ??_CalcMenuSizeY_3
    318            }
    319            ySize += (_GetEffectSize(hObj, pObj) << 1);
   \                     ??_CalcMenuSizeY_2: (+1)
   \   0000004A   0x4629             MOV      R1,R5
   \   0000004C   0x4620             MOV      R0,R4
   \   0000004E   0x.... 0x....      BL       _GetEffectSize
   \   00000052   0xEB07 0x0040      ADD      R0,R7,R0, LSL #+1
    320            return ySize;
   \   00000056   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    321          }
    322          
    323          /*********************************************************************
    324          *
    325          *       _CalcWindowSizeX
    326          */

   \                                 In section .text, align 2, keep-with-next
    327          static int _CalcWindowSizeX(MENU_Handle hObj, MENU_Obj* pObj) {
   \                     _CalcWindowSizeX: (+1)
   \   00000000   0x4602             MOV      R2,R0
    328            int xSize = pObj->Width;
   \   00000002   0x6E48             LDR      R0,[R1, #+100]
    329            if (xSize == 0) {
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD101             BNE.N    ??_CalcWindowSizeX_0
    330              xSize = _CalcMenuSizeX(hObj, pObj);
   \   00000008   0x4610             MOV      R0,R2
   \   0000000A   0x....             B.N      _CalcMenuSizeX
    331            }
    332            return xSize;
   \                     ??_CalcWindowSizeX_0: (+1)
   \   0000000C   0x4770             BX       LR               ;; return
    333          }
    334          
    335          /*********************************************************************
    336          *
    337          *       _CalcWindowSizeY
    338          */

   \                                 In section .text, align 2, keep-with-next
    339          static int _CalcWindowSizeY(MENU_Handle hObj, MENU_Obj* pObj) {
   \                     _CalcWindowSizeY: (+1)
   \   00000000   0x4602             MOV      R2,R0
    340            int ySize = pObj->Height;
   \   00000002   0x6E88             LDR      R0,[R1, #+104]
    341            if (ySize == 0) {
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD101             BNE.N    ??_CalcWindowSizeY_0
    342              ySize = _CalcMenuSizeY(hObj, pObj);
   \   00000008   0x4610             MOV      R0,R2
   \   0000000A   0x....             B.N      _CalcMenuSizeY
    343            }
    344            return ySize;
   \                     ??_CalcWindowSizeY_0: (+1)
   \   0000000C   0x4770             BX       LR               ;; return
    345          }
    346          
    347          /*********************************************************************
    348          *
    349          *       _GetItemFromPos
    350          *
    351          * Return value:
    352          *   Zero based index of item at given position or -1.
    353          *
    354          * NOTE:
    355          *   This function has to ensure that index is always less than the
    356          *   maximum number of items.
    357          */

   \                                 In section .text, align 2, keep-with-next
    358          static int _GetItemFromPos(MENU_Handle hObj, MENU_Obj* pObj, int x, int y) {
   \                     _GetItemFromPos: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4691             MOV      R9,R2
   \   0000000A   0x469A             MOV      R10,R3
    359            int xSize, ySize, EffectSize, r = -1;
   \   0000000C   0xF04F 0x36FF      MOV      R6,#-1
    360            ySize = _CalcMenuSizeY(hObj, pObj);
   \   00000010   0x.... 0x....      BL       _CalcMenuSizeY
   \   00000014   0x4607             MOV      R7,R0
   \   00000016   0xF105 0x0064      ADD      R0,R5,#+100
   \   0000001A   0x6840             LDR      R0,[R0, #+4]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD002             BEQ.N    ??_GetItemFromPos_0
   \   00000020   0x42B8             CMP      R0,R7
   \   00000022   0xDC00             BGT.N    ??_GetItemFromPos_0
   \   00000024   0x4607             MOV      R7,R0
    361            if ((pObj->Height) && (pObj->Height < ySize)) {
    362              ySize = pObj->Height;
    363            }
    364            xSize = _CalcMenuSizeX(hObj, pObj);
   \                     ??_GetItemFromPos_0: (+1)
   \   00000026   0x4629             MOV      R1,R5
   \   00000028   0x4620             MOV      R0,R4
   \   0000002A   0x.... 0x....      BL       _CalcMenuSizeX
   \   0000002E   0x4680             MOV      R8,R0
    365            if ((pObj->Width) && (pObj->Width < xSize)) {
   \   00000030   0x6E68             LDR      R0,[R5, #+100]
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD002             BEQ.N    ??_GetItemFromPos_1
   \   00000036   0x4540             CMP      R0,R8
   \   00000038   0xDC00             BGT.N    ??_GetItemFromPos_1
   \   0000003A   0x4680             MOV      R8,R0
    366              xSize = pObj->Width;
    367            }
    368            EffectSize = _GetEffectSize(hObj, pObj);
   \                     ??_GetItemFromPos_1: (+1)
   \   0000003C   0x4629             MOV      R1,R5
   \   0000003E   0x4620             MOV      R0,R4
   \   00000040   0x.... 0x....      BL       _GetEffectSize
    369            x     -= EffectSize;
   \   00000044   0xEBA9 0x0900      SUB      R9,R9,R0
    370            y     -= EffectSize;
   \   00000048   0xEBAA 0x0A00      SUB      R10,R10,R0
    371            xSize -= (EffectSize << 1);
   \   0000004C   0xEBA8 0x0140      SUB      R1,R8,R0, LSL #+1
    372            ySize -= (EffectSize << 1);
   \   00000050   0xEBB7 0x0040      SUBS     R0,R7,R0, LSL #+1
    373            if ((x >= 0) && (y >= 0) && (x < xSize) && (y < ySize)) {
   \   00000054   0xF1B9 0x0F00      CMP      R9,#+0
   \   00000058   0xD42F             BMI.N    ??_GetItemFromPos_2
   \   0000005A   0xF1BA 0x0F00      CMP      R10,#+0
   \   0000005E   0xD42C             BMI.N    ??_GetItemFromPos_2
   \   00000060   0x4589             CMP      R9,R1
   \   00000062   0xDA2A             BGE.N    ??_GetItemFromPos_2
   \   00000064   0x4582             CMP      R10,R0
   \   00000066   0xDA28             BGE.N    ??_GetItemFromPos_2
    374              unsigned i, NumItems = MENU__GetNumItems(pObj);
   \   00000068   0x4628             MOV      R0,R5
   \   0000006A   0x.... 0x....      BL       MENU__GetNumItems
   \   0000006E   0x4607             MOV      R7,R0
    375              if (pObj->Flags & MENU_SF_VERTICAL) {
   \   00000070   0xF895 0x005E      LDRB     R0,[R5, #+94]
   \   00000074   0x07C0             LSLS     R0,R0,#+31
   \   00000076   0xD50F             BPL.N    ??_GetItemFromPos_3
    376                int yPos = 0;
   \   00000078   0xF04F 0x0900      MOV      R9,#+0
    377                for (i = 0; i < NumItems; i++) {
   \   0000007C   0x46C8             MOV      R8,R9
   \                     ??_GetItemFromPos_4: (+1)
   \   0000007E   0x45B8             CMP      R8,R7
   \   00000080   0xD21B             BCS.N    ??_GetItemFromPos_2
    378                  yPos += _GetItemHeight(hObj, pObj, i);
   \   00000082   0x4642             MOV      R2,R8
   \   00000084   0x4629             MOV      R1,R5
   \   00000086   0x4620             MOV      R0,R4
   \   00000088   0x.... 0x....      BL       _GetItemHeight
   \   0000008C   0x4481             ADD      R9,R0,R9
    379                  if (y < yPos) {
   \   0000008E   0x45CA             CMP      R10,R9
   \   00000090   0xDB12             BLT.N    ??_GetItemFromPos_5
    380                    r = i;
    381                    break;
    382                  }
    383                }
   \   00000092   0xF108 0x0801      ADD      R8,R8,#+1
   \   00000096   0xE7F2             B.N      ??_GetItemFromPos_4
    384              } else {
    385                int xPos = 0;
   \                     ??_GetItemFromPos_3: (+1)
   \   00000098   0xF04F 0x0A00      MOV      R10,#+0
    386                for (i = 0; i < NumItems; i++) {
   \   0000009C   0x46D0             MOV      R8,R10
   \   0000009E   0xE001             B.N      ??_GetItemFromPos_6
   \                     ??_GetItemFromPos_7: (+1)
   \   000000A0   0xF108 0x0801      ADD      R8,R8,#+1
   \                     ??_GetItemFromPos_6: (+1)
   \   000000A4   0x45B8             CMP      R8,R7
   \   000000A6   0xD208             BCS.N    ??_GetItemFromPos_2
    387                  xPos += _GetItemWidth(hObj, pObj, i);
   \   000000A8   0x4642             MOV      R2,R8
   \   000000AA   0x4629             MOV      R1,R5
   \   000000AC   0x4620             MOV      R0,R4
   \   000000AE   0x.... 0x....      BL       _GetItemWidth
   \   000000B2   0x4482             ADD      R10,R0,R10
    388                  if (x < xPos) {
   \   000000B4   0x45D1             CMP      R9,R10
   \   000000B6   0xDAF3             BGE.N    ??_GetItemFromPos_7
    389                    r = i;
   \                     ??_GetItemFromPos_5: (+1)
   \   000000B8   0x4646             MOV      R6,R8
    390                    break;
    391                  }
    392                }
    393              }
    394            }
    395            return r;
   \                     ??_GetItemFromPos_2: (+1)
   \   000000BA   0x4630             MOV      R0,R6
   \   000000BC   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    396          }
    397          
    398          /*********************************************************************
    399          *
    400          *       _GetItemPos
    401          */

   \                                 In section .text, align 2, keep-with-next
    402          static void _GetItemPos(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index, int* px, int* py) {
   \                     _GetItemPos: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4616             MOV      R6,R2
   \   0000000A   0x461F             MOV      R7,R3
    403            int i, EffectSize;
    404            EffectSize = _GetEffectSize(hObj, pObj);
   \   0000000C   0x.... 0x....      BL       _GetEffectSize
   \   00000010   0x4681             MOV      R9,R0
   \   00000012   0xF8DD 0x8028      LDR      R8,[SP, #+40]
    405            if (pObj->Flags & MENU_SF_VERTICAL) {
   \   00000016   0xF895 0x005E      LDRB     R0,[R5, #+94]
   \   0000001A   0x07C0             LSLS     R0,R0,#+31
   \   0000001C   0xF04F 0x0B00      MOV      R11,#+0
   \   00000020   0x46DA             MOV      R10,R11
   \   00000022   0xD519             BPL.N    ??_GetItemPos_0
    406              int yPos = 0;
    407              for (i = 0; i < (int)Index; i++) {
   \   00000024   0xE007             B.N      ??_GetItemPos_1
    408                yPos += _GetItemHeight(hObj, pObj, i);
   \                     ??_GetItemPos_2: (+1)
   \   00000026   0x4652             MOV      R2,R10
   \   00000028   0x4629             MOV      R1,R5
   \   0000002A   0x4620             MOV      R0,R4
   \   0000002C   0x.... 0x....      BL       _GetItemHeight
   \   00000030   0x4483             ADD      R11,R0,R11
    409              }
   \   00000032   0xF10A 0x0A01      ADD      R10,R10,#+1
   \                     ??_GetItemPos_1: (+1)
   \   00000036   0x45B2             CMP      R10,R6
   \   00000038   0xDBF5             BLT.N    ??_GetItemPos_2
    410              *px = EffectSize;
   \   0000003A   0xF8C7 0x9000      STR      R9,[R7, #+0]
    411              *py = EffectSize + yPos;
   \   0000003E   0xEB0B 0x0009      ADD      R0,R11,R9
   \   00000042   0xF8C8 0x0000      STR      R0,[R8, #+0]
   \   00000046   0xE00E             B.N      ??_GetItemPos_3
    412            } else {
    413              int xPos = 0;
    414              for (i = 0; i < (int)Index; i++) {
    415                xPos += _GetItemWidth(hObj, pObj, i);
   \                     ??_GetItemPos_4: (+1)
   \   00000048   0x4652             MOV      R2,R10
   \   0000004A   0x4629             MOV      R1,R5
   \   0000004C   0x4620             MOV      R0,R4
   \   0000004E   0x.... 0x....      BL       _GetItemWidth
   \   00000052   0x4483             ADD      R11,R0,R11
    416              }
   \   00000054   0xF10A 0x0A01      ADD      R10,R10,#+1
   \                     ??_GetItemPos_0: (+1)
   \   00000058   0x45B2             CMP      R10,R6
   \   0000005A   0xDBF5             BLT.N    ??_GetItemPos_4
    417              *px = EffectSize + xPos;
   \   0000005C   0xEB0B 0x0009      ADD      R0,R11,R9
   \   00000060   0x6038             STR      R0,[R7, #+0]
    418              *py = EffectSize;
   \   00000062   0xF8C8 0x9000      STR      R9,[R8, #+0]
    419            }
    420          }
   \                     ??_GetItemPos_3: (+1)
   \   00000066   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
    421          
    422          /*********************************************************************
    423          *
    424          *       _SetCapture
    425          */

   \                                 In section .text, align 2, keep-with-next
    426          static void _SetCapture(MENU_Handle hObj, const MENU_Obj* pObj) {
   \                     _SetCapture: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    427            if (pObj->IsSubmenuActive == 0) {
   \   00000004   0xF991 0x0060      LDRSB    R0,[R1, #+96]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD10A             BNE.N    ??_SetCapture_0
    428              if (WM_HasCaptured(hObj) == 0) {
   \   0000000C   0x4620             MOV      R0,R4
   \   0000000E   0x.... 0x....      BL       WM_HasCaptured
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD105             BNE.N    ??_SetCapture_0
    429                WM_SetCapture(hObj, 0);
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x4620             MOV      R0,R4
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      WM_SetCapture
    430              }
    431            }
    432          }
   \                     ??_SetCapture_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return
    433          
    434          /*********************************************************************
    435          *
    436          *       _ReleaseCapture
    437          */

   \                                 In section .text, align 2, keep-with-next
    438          static void _ReleaseCapture(MENU_Handle hObj, const MENU_Obj* pObj) {
   \                     _ReleaseCapture: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    439            if (WM_HasCaptured(hObj)) {
   \   00000006   0x.... 0x....      BL       WM_HasCaptured
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD00D             BEQ.N    ??_ReleaseCapture_0
    440              if (_IsTopLevelMenu(hObj, pObj) && !(pObj->Flags & MENU_SF_POPUP)) {
   \   0000000E   0x4629             MOV      R1,R5
   \   00000010   0x4620             MOV      R0,R4
   \   00000012   0x.... 0x....      BL       _IsTopLevelMenu
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD007             BEQ.N    ??_ReleaseCapture_0
   \   0000001A   0xF895 0x005E      LDRB     R0,[R5, #+94]
   \   0000001E   0x0600             LSLS     R0,R0,#+24
   \   00000020   0xD403             BMI.N    ??_ReleaseCapture_0
    441                WM_ReleaseCapture();
   \   00000022   0xE8BD 0x4031      POP      {R0,R4,R5,LR}
   \   00000026   0x.... 0x....      B.W      WM_ReleaseCapture
    442              }
    443            }
    444          }
   \                     ??_ReleaseCapture_0: (+1)
   \   0000002A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    445          
    446          /*********************************************************************
    447          *
    448          *       _CloseSubmenu
    449          */

   \                                 In section .text, align 2, keep-with-next
    450          static void _CloseSubmenu(MENU_Handle hObj, MENU_Obj* pObj) {
   \                     _CloseSubmenu: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    451            if (pObj->Flags & MENU_SF_ACTIVE) {
   \   00000006   0xF895 0x005E      LDRB     R0,[R5, #+94]
   \   0000000A   0x0640             LSLS     R0,R0,#+25
   \   0000000C   0xD523             BPL.N    ??_CloseSubmenu_0
    452              if (pObj->IsSubmenuActive) {
   \   0000000E   0xF205 0x065E      ADDW     R6,R5,#+94
   \   00000012   0xF996 0x0002      LDRSB    R0,[R6, #+2]
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD01D             BEQ.N    ??_CloseSubmenu_0
    453                MENU_ITEM* pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, pObj->Sel);
   \   0000001A   0x6EE9             LDR      R1,[R5, #+108]
   \   0000001C   0xF105 0x0058      ADD      R0,R5,#+88
   \   00000020   0x.... 0x....      BL       GUI_ARRAY_GetpItem
   \   00000024   0x4607             MOV      R7,R0
    454                /* Inform submenu about its deactivation and detach it */
    455                MENU__SendMenuMessage(hObj, pItem->hSubmenu, MENU_ON_CLOSE, 0);
   \   00000026   0x2300             MOVS     R3,#+0
   \   00000028   0x2204             MOVS     R2,#+4
   \   0000002A   0xF9B7 0x1000      LDRSH    R1,[R7, #+0]
   \   0000002E   0x4620             MOV      R0,R4
   \   00000030   0x.... 0x....      BL       MENU__SendMenuMessage
    456                WM_DetachWindow(pItem->hSubmenu);
   \   00000034   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000038   0x.... 0x....      BL       WM_DetachWindow
    457                pObj->IsSubmenuActive = 0;
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x70B0             STRB     R0,[R6, #+2]
    458                /*
    459                 * Keep capture in menu widget. The capture may only released
    460                 * by clicking outside the menu or when mouse moved out.
    461                 * And it may only released from a top level menu.
    462                 */
    463                _SetCapture(hObj, pObj);
   \   00000040   0x4629             MOV      R1,R5
   \   00000042   0x4620             MOV      R0,R4
   \   00000044   0x.... 0x....      BL       _SetCapture
    464                /* Invalidate menu item. This is needed because the appearance may have changed */
    465                MENU__InvalidateItem(hObj, pObj, pObj->Sel);
   \   00000048   0x6EEA             LDR      R2,[R5, #+108]
   \   0000004A   0x4629             MOV      R1,R5
   \   0000004C   0x4620             MOV      R0,R4
   \   0000004E   0xE8BD 0x40F8      POP      {R3-R7,LR}
   \   00000052   0x.... 0x....      B.W      MENU__InvalidateItem
    466              }
    467            }
    468          }
   \                     ??_CloseSubmenu_0: (+1)
   \   00000056   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    469          
    470          /*********************************************************************
    471          *
    472          *       _OpenSubmenu
    473          */

   \                                 In section .text, align 2, keep-with-next
    474          static void _OpenSubmenu(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index) {
   \                     _OpenSubmenu: (+1)
   \   00000000   0xE92D 0x4FFE      PUSH     {R1-R11,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4616             MOV      R6,R2
    475            if (pObj->Flags & MENU_SF_ACTIVE) {
   \   0000000A   0xF105 0x075C      ADD      R7,R5,#+92
   \   0000000E   0x78B8             LDRB     R0,[R7, #+2]
   \   00000010   0x0640             LSLS     R0,R0,#+25
   \   00000012   0xF140 0x8086      BPL.W    ??_OpenSubmenu_0
    476              MENU_ITEM* pItem;
    477              char PrevActiveSubmenu;
    478              PrevActiveSubmenu = pObj->IsSubmenuActive;
   \   00000016   0xF997 0x8004      LDRSB    R8,[R7, #+4]
    479              /* Close previous submenu (if needed) */
    480              _CloseSubmenu(hObj, pObj);
   \   0000001A   0x4620             MOV      R0,R4
   \   0000001C   0x.... 0x....      BL       _CloseSubmenu
    481              pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
   \   00000020   0x4631             MOV      R1,R6
   \   00000022   0xF105 0x0058      ADD      R0,R5,#+88
   \   00000026   0x.... 0x....      BL       GUI_ARRAY_GetpItem
   \   0000002A   0x4681             MOV      R9,R0
    482              if (pItem->hSubmenu) {
   \   0000002C   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD076             BEQ.N    ??_OpenSubmenu_0
    483                if ((pItem->Flags & MENU_IF_DISABLED) == 0) {
   \   00000034   0xF899 0x0004      LDRB     R0,[R9, #+4]
   \   00000038   0x07C0             LSLS     R0,R0,#+31
   \   0000003A   0xD472             BMI.N    ??_OpenSubmenu_0
    484                  int x, y, EffectSize;
    485                  /* Calculate position of submenu */
    486                  EffectSize = _GetEffectSize(hObj, pObj);
   \   0000003C   0x4629             MOV      R1,R5
   \   0000003E   0x4620             MOV      R0,R4
   \   00000040   0x.... 0x....      BL       _GetEffectSize
   \   00000044   0x4682             MOV      R10,R0
    487                  _GetItemPos(hObj, pObj, Index, &x, &y);
   \   00000046   0xA801             ADD      R0,SP,#+4
   \   00000048   0x9000             STR      R0,[SP, #+0]
   \   0000004A   0xAB02             ADD      R3,SP,#+8
   \   0000004C   0x4632             MOV      R2,R6
   \   0000004E   0x4629             MOV      R1,R5
   \   00000050   0x4620             MOV      R0,R4
   \   00000052   0x.... 0x....      BL       _GetItemPos
    488                  if (pObj->Flags & MENU_SF_VERTICAL) {
   \   00000056   0x78B8             LDRB     R0,[R7, #+2]
   \   00000058   0x07C0             LSLS     R0,R0,#+31
   \   0000005A   0x4629             MOV      R1,R5
   \   0000005C   0x4620             MOV      R0,R4
   \   0000005E   0xD510             BPL.N    ??_OpenSubmenu_1
    489                    x += _CalcMenuSizeX(hObj, pObj) - (_GetEffectSize(hObj, pObj) << 1);
   \   00000060   0x.... 0x....      BL       _CalcMenuSizeX
   \   00000064   0x4683             MOV      R11,R0
   \   00000066   0x4629             MOV      R1,R5
   \   00000068   0x4620             MOV      R0,R4
   \   0000006A   0x.... 0x....      BL       _GetEffectSize
   \   0000006E   0x9902             LDR      R1,[SP, #+8]
   \   00000070   0x4459             ADD      R1,R11,R1
   \   00000072   0xEBA1 0x0040      SUB      R0,R1,R0, LSL #+1
   \   00000076   0x9002             STR      R0,[SP, #+8]
    490                    y -= EffectSize;
   \   00000078   0x9801             LDR      R0,[SP, #+4]
   \   0000007A   0xEBA0 0x000A      SUB      R0,R0,R10
   \   0000007E   0x9001             STR      R0,[SP, #+4]
   \   00000080   0xE00F             B.N      ??_OpenSubmenu_2
    491                  } else {
    492                    y += _CalcMenuSizeY(hObj, pObj) - (_GetEffectSize(hObj, pObj) << 1);
   \                     ??_OpenSubmenu_1: (+1)
   \   00000082   0x.... 0x....      BL       _CalcMenuSizeY
   \   00000086   0x4683             MOV      R11,R0
   \   00000088   0x4629             MOV      R1,R5
   \   0000008A   0x4620             MOV      R0,R4
   \   0000008C   0x.... 0x....      BL       _GetEffectSize
   \   00000090   0x9901             LDR      R1,[SP, #+4]
   \   00000092   0x4459             ADD      R1,R11,R1
   \   00000094   0xEBA1 0x0040      SUB      R0,R1,R0, LSL #+1
   \   00000098   0x9001             STR      R0,[SP, #+4]
    493                    x -= EffectSize;
   \   0000009A   0x9802             LDR      R0,[SP, #+8]
   \   0000009C   0xEBA0 0x000A      SUB      R0,R0,R10
   \   000000A0   0x9002             STR      R0,[SP, #+8]
    494                  }
    495                  x += WM_GetWindowOrgX(hObj);
   \                     ??_OpenSubmenu_2: (+1)
   \   000000A2   0x4620             MOV      R0,R4
   \   000000A4   0x.... 0x....      BL       WM_GetWindowOrgX
   \   000000A8   0x9902             LDR      R1,[SP, #+8]
   \   000000AA   0x1840             ADDS     R0,R0,R1
   \   000000AC   0x9002             STR      R0,[SP, #+8]
    496                  y += WM_GetWindowOrgY(hObj);
   \   000000AE   0x4620             MOV      R0,R4
   \   000000B0   0x.... 0x....      BL       WM_GetWindowOrgY
   \   000000B4   0x9901             LDR      R1,[SP, #+4]
   \   000000B6   0x1840             ADDS     R0,R0,R1
   \   000000B8   0x9001             STR      R0,[SP, #+4]
    497                  /*
    498                   * Notify owner window when for the first time open a menu (when no
    499                   * other submenu was open), so it can initialize the menu items.
    500                   */
    501                  if (PrevActiveSubmenu == 0) {
   \   000000BA   0xF1B8 0x0F00      CMP      R8,#+0
   \   000000BE   0xD10C             BNE.N    ??_OpenSubmenu_3
    502                    if (_IsTopLevelMenu(hObj, pObj)) {
   \   000000C0   0x4629             MOV      R1,R5
   \   000000C2   0x4620             MOV      R0,R4
   \   000000C4   0x.... 0x....      BL       _IsTopLevelMenu
   \   000000C8   0x2800             CMP      R0,#+0
   \   000000CA   0xD006             BEQ.N    ??_OpenSubmenu_3
    503                      MENU__SendMenuMessage(hObj, pObj->hOwner, MENU_ON_INITMENU, 0);
   \   000000CC   0x2300             MOVS     R3,#+0
   \   000000CE   0x2201             MOVS     R2,#+1
   \   000000D0   0xF9B5 0x105C      LDRSH    R1,[R5, #+92]
   \   000000D4   0x4620             MOV      R0,R4
   \   000000D6   0x.... 0x....      BL       MENU__SendMenuMessage
    504                    }
    505                  }
    506                  /* Notify owner window when a submenu opens, so it can initialize the menu items. */
    507                  MENU__SendMenuMessage(hObj, pObj->hOwner, MENU_ON_INITSUBMENU, pItem->Id);
   \                     ??_OpenSubmenu_3: (+1)
   \   000000DA   0xF8B9 0x3002      LDRH     R3,[R9, #+2]
   \   000000DE   0x2202             MOVS     R2,#+2
   \   000000E0   0xF9B5 0x105C      LDRSH    R1,[R5, #+92]
   \   000000E4   0x4620             MOV      R0,R4
   \   000000E6   0x.... 0x....      BL       MENU__SendMenuMessage
    508                  /* Set active menu as owner of submenu. */
    509                  MENU_SetOwner(pItem->hSubmenu, hObj);
   \   000000EA   0x4621             MOV      R1,R4
   \   000000EC   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   000000F0   0x.... 0x....      BL       MENU_SetOwner
    510                  /* Attach submenu and inform it about its activation. */
    511                  WM_AttachWindowAt(pItem->hSubmenu, WM_HBKWIN, x, y);
   \   000000F4   0x.... 0x....      BL       WM_GetDesktopWindow
   \   000000F8   0x4601             MOV      R1,R0
   \   000000FA   0x9B01             LDR      R3,[SP, #+4]
   \   000000FC   0x9A02             LDR      R2,[SP, #+8]
   \   000000FE   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000102   0x.... 0x....      BL       WM_AttachWindowAt
    512                  MENU__SendMenuMessage(hObj, pItem->hSubmenu, MENU_ON_OPEN, 0);
   \   00000106   0x2300             MOVS     R3,#+0
   \   00000108   0x2203             MOVS     R2,#+3
   \   0000010A   0xF9B9 0x1000      LDRSH    R1,[R9, #+0]
   \   0000010E   0x4620             MOV      R0,R4
   \   00000110   0x.... 0x....      BL       MENU__SendMenuMessage
    513                  pObj->IsSubmenuActive = 1;
   \   00000114   0x2001             MOVS     R0,#+1
   \   00000116   0x7138             STRB     R0,[R7, #+4]
    514                  /* Invalidate menu item. This is needed because the appearance may have changed. */
    515                  MENU__InvalidateItem(hObj, pObj, Index);
   \   00000118   0x4632             MOV      R2,R6
   \   0000011A   0x4629             MOV      R1,R5
   \   0000011C   0x4620             MOV      R0,R4
   \   0000011E   0x.... 0x....      BL       MENU__InvalidateItem
    516                }
    517              }
    518            }
    519          }
   \                     ??_OpenSubmenu_0: (+1)
   \   00000122   0xE8BD 0x8FF7      POP      {R0-R2,R4-R11,PC}  ;; return
    520          
    521          /*********************************************************************
    522          *
    523          *       _ClosePopup
    524          */

   \                                 In section .text, align 2, keep-with-next
    525          static void _ClosePopup(MENU_Handle hObj, MENU_Obj* pObj) {
   \                     _ClosePopup: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    526            if (pObj->Flags & MENU_SF_POPUP) {
   \   00000002   0xF8B1 0x205E      LDRH     R2,[R1, #+94]
   \   00000006   0x0613             LSLS     R3,R2,#+24
   \   00000008   0xD50A             BPL.N    ??_ClosePopup_0
    527              pObj->Flags &= ~(MENU_SF_POPUP);
   \   0000000A   0xF64F 0x737F      MOVW     R3,#+65407
   \   0000000E   0x401A             ANDS     R2,R3,R2
   \   00000010   0xF8A1 0x205E      STRH     R2,[R1, #+94]
    528              WM_DetachWindow(hObj);
   \   00000014   0x.... 0x....      BL       WM_DetachWindow
    529              WM_ReleaseCapture();
   \   00000018   0xE8BD 0x4001      POP      {R0,LR}
   \   0000001C   0x.... 0x....      B.W      WM_ReleaseCapture
    530            }
    531          }
   \                     ??_ClosePopup_0: (+1)
   \   00000020   0xBD01             POP      {R0,PC}          ;; return
    532          
    533          /*********************************************************************
    534          *
    535          *       _SetSelection
    536          */

   \                                 In section .text, align 2, keep-with-next
    537          static void _SetSelection(MENU_Handle hObj, MENU_Obj* pObj, int Index) {
   \                     _SetSelection: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
    538            if (Index != pObj->Sel) {
   \   00000008   0x6EEA             LDR      R2,[R5, #+108]
   \   0000000A   0x4296             CMP      R6,R2
   \   0000000C   0xD007             BEQ.N    ??_SetSelection_0
    539              MENU__InvalidateItem(hObj, pObj, pObj->Sel); /* Invalidate previous selection */
   \   0000000E   0x.... 0x....      BL       MENU__InvalidateItem
    540              MENU__InvalidateItem(hObj, pObj, Index);     /* Invalidate new selection */
   \   00000012   0x4632             MOV      R2,R6
   \   00000014   0x4629             MOV      R1,R5
   \   00000016   0x4620             MOV      R0,R4
   \   00000018   0x.... 0x....      BL       MENU__InvalidateItem
    541              pObj->Sel = Index;
   \   0000001C   0x66EE             STR      R6,[R5, #+108]
    542            }
    543          }
   \                     ??_SetSelection_0: (+1)
   \   0000001E   0xBD70             POP      {R4-R6,PC}       ;; return
    544          
    545          /*********************************************************************
    546          *
    547          *       _SelectItem
    548          */

   \                                 In section .text, align 2, keep-with-next
    549          static void _SelectItem(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index) {
   \                     _SelectItem: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
    550            if (pObj->Sel != (int)Index) {
   \   00000008   0x6EE8             LDR      R0,[R5, #+108]
   \   0000000A   0x42B0             CMP      R0,R6
   \   0000000C   0xD00D             BEQ.N    ??_SelectItem_0
    551              _SetCapture(hObj, pObj);
   \   0000000E   0x4620             MOV      R0,R4
   \   00000010   0x.... 0x....      BL       _SetCapture
    552              _OpenSubmenu(hObj, pObj, Index);
   \   00000014   0x4632             MOV      R2,R6
   \   00000016   0x4629             MOV      R1,R5
   \   00000018   0x4620             MOV      R0,R4
   \   0000001A   0x.... 0x....      BL       _OpenSubmenu
    553              _SetSelection(hObj, pObj, Index);
   \   0000001E   0x4632             MOV      R2,R6
   \   00000020   0x4629             MOV      R1,R5
   \   00000022   0x4620             MOV      R0,R4
   \   00000024   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000028   0x....             B.N      _SetSelection
    554            }
    555          }
   \                     ??_SelectItem_0: (+1)
   \   0000002A   0xBD70             POP      {R4-R6,PC}       ;; return
    556          
    557          /*********************************************************************
    558          *
    559          *       _DeselectItem
    560          */

   \                                 In section .text, align 2, keep-with-next
    561          static void _DeselectItem(MENU_Handle hObj, MENU_Obj* pObj) {
   \                     _DeselectItem: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    562            if (pObj->IsSubmenuActive == 0) {
   \   00000006   0xF995 0x0060      LDRSB    R0,[R5, #+96]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD109             BNE.N    ??_DeselectItem_0
    563              _SetSelection(hObj, pObj, -1);
   \   0000000E   0xF04F 0x32FF      MOV      R2,#-1
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       _SetSelection
    564              _ReleaseCapture(hObj, pObj);
   \   00000018   0x4629             MOV      R1,R5
   \   0000001A   0x4620             MOV      R0,R4
   \   0000001C   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \   00000020   0x....             B.N      _ReleaseCapture
    565            }
    566          }
   \                     ??_DeselectItem_0: (+1)
   \   00000022   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    567          
    568          /*********************************************************************
    569          *
    570          *       _ActivateItem
    571          */

   \                                 In section .text, align 2, keep-with-next
    572          static void _ActivateItem(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index) {
   \                     _ActivateItem: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4611             MOV      R1,R2
    573            MENU_ITEM* pItem;
    574            pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
   \   00000008   0xF105 0x0058      ADD      R0,R5,#+88
   \   0000000C   0x.... 0x....      BL       GUI_ARRAY_GetpItem
   \   00000010   0x4606             MOV      R6,R0
    575            if (pItem->hSubmenu == 0) {
   \   00000012   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD10F             BNE.N    ??_ActivateItem_0
    576              if ((pItem->Flags & (MENU_IF_DISABLED | MENU_IF_SEPARATOR)) == 0) {
   \   0000001A   0x7930             LDRB     R0,[R6, #+4]
   \   0000001C   0x2103             MOVS     R1,#+3
   \   0000001E   0x4208             TST      R0,R1
   \   00000020   0xD10B             BNE.N    ??_ActivateItem_0
    577                _ClosePopup(hObj, pObj);
   \   00000022   0x4629             MOV      R1,R5
   \   00000024   0x4620             MOV      R0,R4
   \   00000026   0x.... 0x....      BL       _ClosePopup
    578                /* Send item select message to owner. */
    579                MENU__SendMenuMessage(hObj, pObj->hOwner, MENU_ON_ITEMSELECT, pItem->Id);
   \   0000002A   0x8873             LDRH     R3,[R6, #+2]
   \   0000002C   0x2200             MOVS     R2,#+0
   \   0000002E   0xF9B5 0x105C      LDRSH    R1,[R5, #+92]
   \   00000032   0x4620             MOV      R0,R4
   \   00000034   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000038   0x....             B.N      MENU__SendMenuMessage
    580              }
    581            }
    582          }
   \                     ??_ActivateItem_0: (+1)
   \   0000003A   0xBD70             POP      {R4-R6,PC}       ;; return
    583          
    584          /*********************************************************************
    585          *
    586          *       _ActivateMenu
    587          */

   \                                 In section .text, align 2, keep-with-next
    588          static void _ActivateMenu(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index) {
   \                     _ActivateMenu: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
    589            if ((pObj->Flags & MENU_SF_OPEN_ON_POINTEROVER) == 0) {
   \   00000008   0xF895 0x005E      LDRB     R0,[R5, #+94]
   \   0000000C   0x0780             LSLS     R0,R0,#+30
   \   0000000E   0xD42E             BMI.N    ??_ActivateMenu_0
    590              MENU_ITEM* pItem;
    591              pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
   \   00000010   0x4631             MOV      R1,R6
   \   00000012   0xF105 0x0058      ADD      R0,R5,#+88
   \   00000016   0x.... 0x....      BL       GUI_ARRAY_GetpItem
    592              if (pItem->hSubmenu) {
   \   0000001A   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \   0000001E   0x2900             CMP      R1,#+0
   \   00000020   0xD025             BEQ.N    ??_ActivateMenu_0
    593                if ((pItem->Flags & MENU_IF_DISABLED) == 0) {
   \   00000022   0x7900             LDRB     R0,[R0, #+4]
   \   00000024   0x07C0             LSLS     R0,R0,#+31
   \   00000026   0xD422             BMI.N    ??_ActivateMenu_0
    594                  if ((pObj->Flags & MENU_SF_ACTIVE) == 0) {
   \   00000028   0xF8B5 0x005E      LDRH     R0,[R5, #+94]
   \   0000002C   0x0641             LSLS     R1,R0,#+25
   \   0000002E   0xD40E             BMI.N    ??_ActivateMenu_1
    595                    pObj->Flags |= MENU_SF_ACTIVE;
   \   00000030   0xF040 0x0040      ORR      R0,R0,#0x40
   \   00000034   0xF8A5 0x005E      STRH     R0,[R5, #+94]
    596                    _OpenSubmenu(hObj, pObj, Index);
   \   00000038   0x4632             MOV      R2,R6
   \   0000003A   0x4629             MOV      R1,R5
   \   0000003C   0x4620             MOV      R0,R4
   \   0000003E   0x.... 0x....      BL       _OpenSubmenu
    597                    _SetSelection(hObj, pObj, Index);
   \   00000042   0x4632             MOV      R2,R6
   \   00000044   0x4629             MOV      R1,R5
   \   00000046   0x4620             MOV      R0,R4
   \   00000048   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000004C   0x....             B.N      _SetSelection
    598                  } else if (pObj->Flags & MENU_SF_CLOSE_ON_SECOND_CLICK) {
   \                     ??_ActivateMenu_1: (+1)
   \   0000004E   0x0740             LSLS     R0,R0,#+29
   \   00000050   0xD50D             BPL.N    ??_ActivateMenu_0
    599                    if ((int)Index == pObj->Sel) {
   \   00000052   0x6EE8             LDR      R0,[R5, #+108]
   \   00000054   0x4286             CMP      R6,R0
   \   00000056   0xD10A             BNE.N    ??_ActivateMenu_0
    600                      _CloseSubmenu(hObj, pObj);
   \   00000058   0x4629             MOV      R1,R5
   \   0000005A   0x4620             MOV      R0,R4
   \   0000005C   0x.... 0x....      BL       _CloseSubmenu
    601                      pObj->Flags &= ~MENU_SF_ACTIVE;
   \   00000060   0xF8B5 0x005E      LDRH     R0,[R5, #+94]
   \   00000064   0xF64F 0x71BF      MOVW     R1,#+65471
   \   00000068   0x4008             ANDS     R0,R1,R0
   \   0000006A   0xF8A5 0x005E      STRH     R0,[R5, #+94]
    602                    }
    603                  }
    604                }
    605              }
    606            }
    607          }
   \                     ??_ActivateMenu_0: (+1)
   \   0000006E   0xBD70             POP      {R4-R6,PC}       ;; return
    608          
    609          /*********************************************************************
    610          *
    611          *       _DeactivateMenu
    612          */

   \                                 In section .text, align 2, keep-with-next
    613          static void _DeactivateMenu(MENU_Handle hObj, MENU_Obj* pObj) {
   \                     _DeactivateMenu: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x460C             MOV      R4,R1
    614            _CloseSubmenu(hObj, pObj);
   \   00000004   0x.... 0x....      BL       _CloseSubmenu
    615            if ((pObj->Flags & MENU_SF_OPEN_ON_POINTEROVER) == 0) {
   \   00000008   0xF8B4 0x005E      LDRH     R0,[R4, #+94]
   \   0000000C   0x0781             LSLS     R1,R0,#+30
   \   0000000E   0xD404             BMI.N    ??_DeactivateMenu_0
    616              pObj->Flags &= ~MENU_SF_ACTIVE;
   \   00000010   0xF64F 0x71BF      MOVW     R1,#+65471
   \   00000014   0x4008             ANDS     R0,R1,R0
   \   00000016   0xF8A4 0x005E      STRH     R0,[R4, #+94]
    617            }
    618          }
   \                     ??_DeactivateMenu_0: (+1)
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
    619          
    620          /*******************************************************************
    621          *
    622          *       _ForwardMouseOverMsg
    623          */

   \                                 In section .text, align 2, keep-with-next
    624          static int _ForwardMouseOverMsg(MENU_Handle hObj, MENU_Obj* pObj, int x, int y) {
    625          #if (GUI_SUPPORT_MOUSE)
    626            if ((pObj->IsSubmenuActive == 0) && !(pObj->Flags & MENU_SF_POPUP)) {
    627              if (_IsTopLevelMenu(hObj, pObj)) {
    628                WM_HWIN hBelow;
    629                x += WM_GetWindowOrgX(hObj);
    630                y += WM_GetWindowOrgY(hObj);
    631                hBelow = WM_Screen2hWin(x, y);
    632                if (hBelow && (hBelow != hObj)) {
    633                  WM_MESSAGE Msg;
    634                  GUI_PID_STATE State;
    635                  x -= WM_GetWindowOrgX(hBelow);
    636                  y -= WM_GetWindowOrgY(hBelow);
    637                  State.Pressed = 0;
    638                  State.x = x;
    639                  State.y = y;
    640                  Msg.Data.p = &State;
    641                  Msg.MsgId = WM_MOUSEOVER;
    642                  WM__SendMessage(hBelow, &Msg);
    643                  return 1;
    644                }
    645              }
    646            }
    647          #endif
    648            return 0;
   \                     _ForwardMouseOverMsg: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
    649          }
    650          
    651          /*********************************************************************
    652          *
    653          *       _HandlePID
    654          *
    655          * Return values:
    656          *   1 = We need to forward PID message to owner.
    657          *   0 = We do not need to inform owner.
    658          */

   \                                 In section .text, align 2, keep-with-next
    659          static char _HandlePID(MENU_Handle hObj, MENU_Obj* pObj, int x, int y, int Pressed) {
   \                     _HandlePID: (+1)
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
   \   00000006   0x4604             MOV      R4,R0
   \   00000008   0x460D             MOV      R5,R1
   \   0000000A   0x4616             MOV      R6,R2
   \   0000000C   0x461F             MOV      R7,R3
    660            GUI_PID_STATE PrevState;
    661            char XYInWidget = 0;
   \   0000000E   0xF04F 0x0900      MOV      R9,#+0
    662            WM_PID__GetPrevState(&PrevState);
   \   00000012   0xA802             ADD      R0,SP,#+8
   \   00000014   0x.... 0x....      BL       WM_PID__GetPrevState
    663            /*
    664             * Check if coordinates are inside the widget.
    665             */
    666            if ((x >= 0) && (y >= 0)) {
   \   00000018   0x2E00             CMP      R6,#+0
   \   0000001A   0xD40F             BMI.N    ??_HandlePID_0
   \   0000001C   0x2F00             CMP      R7,#+0
   \   0000001E   0xD40D             BMI.N    ??_HandlePID_0
    667              GUI_RECT r;
    668              WM__GetClientRectWin(&pObj->Widget.Win, &r);
   \   00000020   0xA900             ADD      R1,SP,#+0
   \   00000022   0x4628             MOV      R0,R5
   \   00000024   0x.... 0x....      BL       WM__GetClientRectWin
    669              if ((x <= r.x1) && (y <= r.y1)) {
   \   00000028   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   0000002C   0x42B0             CMP      R0,R6
   \   0000002E   0xDB05             BLT.N    ??_HandlePID_0
   \   00000030   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   00000034   0x42B8             CMP      R0,R7
   \   00000036   0xDB01             BLT.N    ??_HandlePID_0
    670                XYInWidget = 1;
   \   00000038   0xF04F 0x0901      MOV      R9,#+1
   \                     ??_HandlePID_0: (+1)
   \   0000003C   0xF8DD 0x8030      LDR      R8,[SP, #+48]
    671              }
    672            }
    673          
    674            if (XYInWidget) {
   \   00000040   0xF1B9 0x0F00      CMP      R9,#+0
   \   00000044   0xD052             BEQ.N    ??_HandlePID_1
    675              int ItemIndex;
    676              ItemIndex = _GetItemFromPos(hObj, pObj, x, y);
   \   00000046   0x463B             MOV      R3,R7
   \   00000048   0x4632             MOV      R2,R6
   \   0000004A   0x4629             MOV      R1,R5
   \   0000004C   0x4620             MOV      R0,R4
   \   0000004E   0x.... 0x....      BL       _GetItemFromPos
   \   00000052   0x4681             MOV      R9,R0
    677              /* 
    678               * Handle PID when coordinates are inside the widget.
    679               */
    680              if (ItemIndex >= 0) {
   \   00000054   0xF1B9 0x0F00      CMP      R9,#+0
   \   00000058   0xD42F             BMI.N    ??_HandlePID_2
    681                /* 
    682                 * Coordinates are inside the menu.
    683                 */
    684                if (Pressed == 1) {
   \   0000005A   0xF1B8 0x0F01      CMP      R8,#+1
   \   0000005E   0xD109             BNE.N    ??_HandlePID_3
    685                  if (PrevState.Pressed == 0) {  /* Clicked */
   \   00000060   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   00000064   0x2800             CMP      R0,#+0
   \   00000066   0xD11D             BNE.N    ??_HandlePID_4
    686                    _ActivateMenu(hObj, pObj, ItemIndex);
   \   00000068   0x464A             MOV      R2,R9
   \   0000006A   0x4629             MOV      R1,R5
   \   0000006C   0x4620             MOV      R0,R4
   \   0000006E   0x.... 0x....      BL       _ActivateMenu
   \   00000072   0xE017             B.N      ??_HandlePID_4
    687                  }
    688                  _SelectItem(hObj, pObj, ItemIndex);
    689                } else if ((Pressed == 0) && (PrevState.Pressed == 1)) {  /* Released */
   \                     ??_HandlePID_3: (+1)
   \   00000074   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000078   0xD109             BNE.N    ??_HandlePID_5
   \   0000007A   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   0000007E   0x2801             CMP      R0,#+1
   \   00000080   0xD105             BNE.N    ??_HandlePID_5
    690                  _ActivateItem(hObj, pObj, ItemIndex);
   \   00000082   0x464A             MOV      R2,R9
   \   00000084   0x4629             MOV      R1,R5
   \   00000086   0x4620             MOV      R0,R4
   \   00000088   0x.... 0x....      BL       _ActivateItem
   \   0000008C   0xE02C             B.N      ??_HandlePID_6
    691                } else if (Pressed < 0) {  /* Mouse moved */
   \                     ??_HandlePID_5: (+1)
   \   0000008E   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000092   0xD529             BPL.N    ??_HandlePID_6
    692                  if (_ForwardMouseOverMsg(hObj, pObj, x, y) == 0) {
   \   00000094   0x463B             MOV      R3,R7
   \   00000096   0x4632             MOV      R2,R6
   \   00000098   0x4629             MOV      R1,R5
   \   0000009A   0x4620             MOV      R0,R4
   \   0000009C   0x.... 0x....      BL       _ForwardMouseOverMsg
   \   000000A0   0x2800             CMP      R0,#+0
   \   000000A2   0xD105             BNE.N    ??_HandlePID_7
    693                    _SelectItem(hObj, pObj, ItemIndex);
   \                     ??_HandlePID_4: (+1)
   \   000000A4   0x464A             MOV      R2,R9
   \   000000A6   0x4629             MOV      R1,R5
   \   000000A8   0x4620             MOV      R0,R4
   \   000000AA   0x.... 0x....      BL       _SelectItem
   \   000000AE   0xE01B             B.N      ??_HandlePID_6
    694                  } else {
    695                    _DeselectItem(hObj, pObj);
   \                     ??_HandlePID_7: (+1)
   \   000000B0   0x4629             MOV      R1,R5
   \   000000B2   0x4620             MOV      R0,R4
   \   000000B4   0x.... 0x....      BL       _DeselectItem
   \   000000B8   0xE016             B.N      ??_HandlePID_6
    696                  }
    697                }
    698              } else {
    699                /* 
    700                 * Coordinates are outside the menu but inside the widget.
    701                 */
    702                if (Pressed == 1) {
   \                     ??_HandlePID_2: (+1)
   \   000000BA   0xF1B8 0x0F01      CMP      R8,#+1
   \   000000BE   0xD10C             BNE.N    ??_HandlePID_8
    703                  if (PrevState.Pressed == 0) {  /* Clicked */
   \   000000C0   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   000000C4   0x2800             CMP      R0,#+0
   \   000000C6   0xD103             BNE.N    ??_HandlePID_9
    704                    /* 
    705                     * User has clicked outside the menu. Close the active submenu.
    706                     * The widget itself must be closed (if needed) by the owner.
    707                     */
    708                    _DeactivateMenu(hObj, pObj);
   \   000000C8   0x4629             MOV      R1,R5
   \   000000CA   0x4620             MOV      R0,R4
   \   000000CC   0x.... 0x....      BL       _DeactivateMenu
    709                  }
    710                  _DeselectItem(hObj, pObj);
   \                     ??_HandlePID_9: (+1)
   \   000000D0   0x4629             MOV      R1,R5
   \   000000D2   0x4620             MOV      R0,R4
   \   000000D4   0x.... 0x....      BL       _DeselectItem
   \   000000D8   0xE006             B.N      ??_HandlePID_6
    711                } else if (Pressed < 0) {  /* Moved out or mouse moved */
   \                     ??_HandlePID_8: (+1)
   \   000000DA   0xF1B8 0x0F00      CMP      R8,#+0
   \   000000DE   0xD503             BPL.N    ??_HandlePID_6
    712                  _DeselectItem(hObj, pObj);
   \   000000E0   0x4629             MOV      R1,R5
   \   000000E2   0x4620             MOV      R0,R4
   \   000000E4   0x.... 0x....      BL       _DeselectItem
    713                }
    714              }
    715              return 0;
   \                     ??_HandlePID_6: (+1)
   \   000000E8   0x2000             MOVS     R0,#+0
   \   000000EA   0xE019             B.N      ??_HandlePID_10
    716            } else {
    717              /* 
    718               * Handle PID when coordinates are outside the widget.
    719               */
    720              if ((Pressed == 1) && (PrevState.Pressed == 0)) {
   \                     ??_HandlePID_1: (+1)
   \   000000EC   0xF1B8 0x0F01      CMP      R8,#+1
   \   000000F0   0xD10B             BNE.N    ??_HandlePID_11
   \   000000F2   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   000000F6   0x2800             CMP      R0,#+0
   \   000000F8   0xD107             BNE.N    ??_HandlePID_11
    721                /* 
    722                 * User has clicked outside the menu. Close the active submenu.
    723                 * The widget itself must be closed (if needed) by the owner.
    724                 */
    725                _DeactivateMenu(hObj, pObj);
   \   000000FA   0x4629             MOV      R1,R5
   \   000000FC   0x4620             MOV      R0,R4
   \   000000FE   0x.... 0x....      BL       _DeactivateMenu
    726                _ClosePopup(hObj, pObj);
   \   00000102   0x4629             MOV      R1,R5
   \   00000104   0x4620             MOV      R0,R4
   \   00000106   0x.... 0x....      BL       _ClosePopup
    727              }
    728              _DeselectItem(hObj, pObj);
   \                     ??_HandlePID_11: (+1)
   \   0000010A   0x4629             MOV      R1,R5
   \   0000010C   0x4620             MOV      R0,R4
   \   0000010E   0x.... 0x....      BL       _DeselectItem
    729              _ForwardMouseOverMsg(hObj, pObj, x, y);
   \   00000112   0x463B             MOV      R3,R7
   \   00000114   0x4632             MOV      R2,R6
   \   00000116   0x4629             MOV      R1,R5
   \   00000118   0x4620             MOV      R0,R4
   \   0000011A   0x.... 0x....      BL       _ForwardMouseOverMsg
    730            }
    731            return 1;   /* Coordinates are not in widget, we need to forward PID message to owner */
   \   0000011E   0x2001             MOVS     R0,#+1
   \                     ??_HandlePID_10: (+1)
   \   00000120   0xB005             ADD      SP,SP,#+20
   \   00000122   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
    732          }
    733          
    734          /*********************************************************************
    735          *
    736          *       _ForwardPIDMsgToOwner
    737          */

   \                                 In section .text, align 2, keep-with-next
    738          static void _ForwardPIDMsgToOwner(MENU_Handle hObj, MENU_Obj* pObj, WM_MESSAGE* pMsg) {
   \                     _ForwardPIDMsgToOwner: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4607             MOV      R7,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4614             MOV      R4,R2
    739            if (_IsTopLevelMenu(hObj, pObj) == 0) {
   \   0000000A   0x.... 0x....      BL       _IsTopLevelMenu
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD128             BNE.N    ??_ForwardPIDMsgToOwner_0
    740              WM_HWIN hOwner;
    741              hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
   \   00000012   0xF9B5 0x505C      LDRSH    R5,[R5, #+92]
   \   00000016   0x2D00             CMP      R5,#+0
   \   00000018   0xD103             BNE.N    ??_ForwardPIDMsgToOwner_1
   \   0000001A   0x4638             MOV      R0,R7
   \   0000001C   0x.... 0x....      BL       WM_GetParent
   \   00000020   0x4605             MOV      R5,R0
    742              if (hOwner) {
   \                     ??_ForwardPIDMsgToOwner_1: (+1)
   \   00000022   0x2D00             CMP      R5,#+0
   \   00000024   0xD01E             BEQ.N    ??_ForwardPIDMsgToOwner_0
    743                if (pMsg->Data.p) {
   \   00000026   0x68A6             LDR      R6,[R4, #+8]
   \   00000028   0x2E00             CMP      R6,#+0
   \   0000002A   0xD015             BEQ.N    ??_ForwardPIDMsgToOwner_2
    744                  GUI_PID_STATE* pState;
    745                  pState = (GUI_PID_STATE*)pMsg->Data.p;
    746                  pState->x += WM_GetWindowOrgX(hObj) - WM_GetWindowOrgX(hOwner);
   \   0000002C   0x4638             MOV      R0,R7
   \   0000002E   0x.... 0x....      BL       WM_GetWindowOrgX
   \   00000032   0x6831             LDR      R1,[R6, #+0]
   \   00000034   0xEB00 0x0801      ADD      R8,R0,R1
   \   00000038   0x4628             MOV      R0,R5
   \   0000003A   0x.... 0x....      BL       WM_GetWindowOrgX
   \   0000003E   0xEBA8 0x0000      SUB      R0,R8,R0
   \   00000042   0x6030             STR      R0,[R6, #+0]
    747                  pState->y += WM_GetWindowOrgY(hObj) - WM_GetWindowOrgY(hOwner);
   \   00000044   0x4638             MOV      R0,R7
   \   00000046   0x.... 0x....      BL       WM_GetWindowOrgY
   \   0000004A   0x6871             LDR      R1,[R6, #+4]
   \   0000004C   0x1847             ADDS     R7,R0,R1
   \   0000004E   0x4628             MOV      R0,R5
   \   00000050   0x.... 0x....      BL       WM_GetWindowOrgY
   \   00000054   0x1A38             SUBS     R0,R7,R0
   \   00000056   0x6070             STR      R0,[R6, #+4]
    748                }
    749                WM__SendMessage(hOwner, pMsg);
   \                     ??_ForwardPIDMsgToOwner_2: (+1)
   \   00000058   0x4621             MOV      R1,R4
   \   0000005A   0x4628             MOV      R0,R5
   \   0000005C   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000060   0x.... 0x....      B.W      WM__SendMessage
    750              }
    751            }
    752          }
   \                     ??_ForwardPIDMsgToOwner_0: (+1)
   \   00000064   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    753          
    754          /*********************************************************************
    755          *
    756          *       Static routines, callback
    757          *
    758          **********************************************************************
    759          */
    760          /*********************************************************************
    761          *
    762          *       _OnMenu
    763          */

   \                                 In section .text, align 4, keep-with-next
    764          static void _OnMenu(MENU_Handle hObj, MENU_Obj* pObj, WM_MESSAGE* pMsg) {
   \                     _OnMenu: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
    765            const MENU_MSG_DATA* pData = (const MENU_MSG_DATA*)pMsg->Data.p;
   \   00000008   0x68B0             LDR      R0,[R6, #+8]
    766            if (pData) {
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD03B             BEQ.N    ??_OnMenu_1
    767              switch (pData->MsgType) {
   \   0000000E   0x8800             LDRH     R0,[R0, #+0]
   \   00000010   0x2805             CMP      R0,#+5
   \   00000012   0xD838             BHI.N    ??_OnMenu_1
   \   00000014   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??_OnMenu_0:
   \   00000018   0x03 0x0E          DC8      0x3,0xE,0xE,0x1D
   \              0x0E 0x1D    
   \   0000001C   0x31 0x35          DC8      0x31,0x35
    768              case MENU_ON_ITEMSELECT:
    769                _DeactivateMenu(hObj, pObj);
   \                     ??_OnMenu_2: (+1)
   \   0000001E   0x4620             MOV      R0,R4
   \   00000020   0x.... 0x....      BL       _DeactivateMenu
    770                _DeselectItem(hObj, pObj);
   \   00000024   0x4629             MOV      R1,R5
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0x.... 0x....      BL       _DeselectItem
    771                _ClosePopup(hObj, pObj);
   \   0000002C   0x4629             MOV      R1,R5
   \   0000002E   0x4620             MOV      R0,R4
   \   00000030   0x.... 0x....      BL       _ClosePopup
    772                /* No break here. We need to forward message to owner. */
    773              case MENU_ON_INITMENU:
    774              case MENU_ON_INITSUBMENU:
    775                /* Forward message to owner. */
    776                {
    777                  WM_HWIN hOwner;
    778                  hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
   \                     ??_OnMenu_3: (+1)
   \   00000034   0xF9B5 0x005C      LDRSH    R0,[R5, #+92]
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD102             BNE.N    ??_OnMenu_4
   \   0000003C   0x4620             MOV      R0,R4
   \   0000003E   0x.... 0x....      BL       WM_GetParent
    779                  if (hOwner) {
   \                     ??_OnMenu_4: (+1)
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD01F             BEQ.N    ??_OnMenu_1
    780                    pMsg->hWinSrc = hObj;
   \   00000046   0x80F4             STRH     R4,[R6, #+6]
    781                    WM__SendMessage(hOwner, pMsg);
   \   00000048   0x4631             MOV      R1,R6
   \   0000004A   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000004E   0x.... 0x....      B.W      WM__SendMessage
    782                  }
    783                }
    784                break;
    785              case MENU_ON_OPEN:
    786                pObj->Sel = -1;
   \                     ??_OnMenu_5: (+1)
   \   00000052   0xF105 0x005C      ADD      R0,R5,#+92
   \   00000056   0xF04F 0x31FF      MOV      R1,#-1
   \   0000005A   0x6101             STR      R1,[R0, #+16]
    787                pObj->IsSubmenuActive = 0;
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x7101             STRB     R1,[R0, #+4]
    788                pObj->Flags |= MENU_SF_ACTIVE | MENU_SF_OPEN_ON_POINTEROVER;
   \   00000060   0x8841             LDRH     R1,[R0, #+2]
   \   00000062   0xF041 0x0142      ORR      R1,R1,#0x42
   \   00000066   0x8041             STRH     R1,[R0, #+2]
    789                _SetCapture(hObj, pObj);
   \   00000068   0x4629             MOV      R1,R5
   \   0000006A   0x4620             MOV      R0,R4
   \   0000006C   0x.... 0x....      BL       _SetCapture
    790                MENU__ResizeMenu(hObj, pObj);
   \   00000070   0x4629             MOV      R1,R5
   \   00000072   0x4620             MOV      R0,R4
   \   00000074   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000078   0x....             B.N      MENU__ResizeMenu
    791                break;
    792              case MENU_ON_CLOSE:
    793                _CloseSubmenu(hObj, pObj);
   \                     ??_OnMenu_6: (+1)
   \   0000007A   0x4620             MOV      R0,R4
   \   0000007C   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000080   0x....             B.N      _CloseSubmenu
    794                break;
    795              case MENU_IS_MENU:
    796                pMsg->Data.v = 1;
   \                     ??_OnMenu_7: (+1)
   \   00000082   0x2001             MOVS     R0,#+1
   \   00000084   0x60B0             STR      R0,[R6, #+8]
    797                break;
    798              }
    799            }
    800          }
   \                     ??_OnMenu_1: (+1)
   \   00000086   0xBD70             POP      {R4-R6,PC}       ;; return
    801          
    802          /*********************************************************************
    803          *
    804          *       _OnTouch
    805          */

   \                                 In section .text, align 2, keep-with-next
    806          static char _OnTouch(MENU_Handle hObj, MENU_Obj* pObj, WM_MESSAGE* pMsg) {
   \                     _OnTouch: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    807            const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
   \   00000002   0x6892             LDR      R2,[R2, #+8]
    808            if (pState) {  /* Something happened in our area (pressed or released) */
   \   00000004   0x2A00             CMP      R2,#+0
   \   00000006   0xD006             BEQ.N    ??_OnTouch_0
    809              return _HandlePID(hObj, pObj, pState->x, pState->y, pState->Pressed);
   \   00000008   0x7A13             LDRB     R3,[R2, #+8]
   \   0000000A   0x9300             STR      R3,[SP, #+0]
   \   0000000C   0x6853             LDR      R3,[R2, #+4]
   \   0000000E   0x6812             LDR      R2,[R2, #+0]
   \   00000010   0x.... 0x....      BL       _HandlePID
   \   00000014   0xBD02             POP      {R1,PC}
    810            }
    811            return _HandlePID(hObj, pObj, -1, -1, -1); /* Moved out */
   \                     ??_OnTouch_0: (+1)
   \   00000016   0xF04F 0x32FF      MOV      R2,#-1
   \   0000001A   0x9200             STR      R2,[SP, #+0]
   \   0000001C   0x4613             MOV      R3,R2
   \   0000001E   0x.... 0x....      BL       _HandlePID
   \   00000022   0xBD02             POP      {R1,PC}          ;; return
    812          }
    813          
    814          /*********************************************************************
    815          *
    816          *       _OnMouseOver
    817          */
    818          #if (GUI_SUPPORT_MOUSE)
    819          static char _OnMouseOver(MENU_Handle hObj, MENU_Obj* pObj, WM_MESSAGE* pMsg) {
    820            const GUI_PID_STATE* pState = (const GUI_PID_STATE *)pMsg->Data.p;
    821            if (pState) {
    822              return _HandlePID(hObj, pObj, pState->x, pState->y, -1);
    823            }
    824            return 0;
    825          }
    826          #endif
    827          
    828          /*********************************************************************
    829          *
    830          *       _SetPaintColors
    831          */

   \                                 In section .text, align 2, keep-with-next
    832          static void _SetPaintColors(const MENU_Obj* pObj, const MENU_ITEM* pItem, int ItemIndex) {
   \                     _SetPaintColors: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    833            char Selected;
    834            unsigned ColorIndex;
    835            Selected = (ItemIndex == pObj->Sel) ? 1 : 0;
   \   00000002   0x6EC3             LDR      R3,[R0, #+108]
   \   00000004   0x429A             CMP      R2,R3
   \   00000006   0xD101             BNE.N    ??_SetPaintColors_0
   \   00000008   0x2201             MOVS     R2,#+1
   \   0000000A   0xE000             B.N      ??_SetPaintColors_1
   \                     ??_SetPaintColors_0: (+1)
   \   0000000C   0x2200             MOVS     R2,#+0
    836            if (pObj->IsSubmenuActive && Selected) {
   \                     ??_SetPaintColors_1: (+1)
   \   0000000E   0xF990 0x3060      LDRSB    R3,[R0, #+96]
   \   00000012   0x2B00             CMP      R3,#+0
   \   00000014   0xD003             BEQ.N    ??_SetPaintColors_2
   \   00000016   0x2A00             CMP      R2,#+0
   \   00000018   0xD001             BEQ.N    ??_SetPaintColors_2
    837              ColorIndex = MENU_CI_ACTIVE_SUBMENU;
   \   0000001A   0x2104             MOVS     R1,#+4
   \   0000001C   0xE012             B.N      ??_SetPaintColors_3
    838            } else if (pItem->Flags & MENU_IF_SEPARATOR) {
   \                     ??_SetPaintColors_2: (+1)
   \   0000001E   0x888B             LDRH     R3,[R1, #+4]
   \   00000020   0x0799             LSLS     R1,R3,#+30
   \   00000022   0xD501             BPL.N    ??_SetPaintColors_4
    839              ColorIndex = MENU_CI_ENABLED;
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0xE00D             B.N      ??_SetPaintColors_3
    840            } else {
    841              ColorIndex = (Selected) ? MENU_CI_SELECTED : MENU_CI_ENABLED;
   \                     ??_SetPaintColors_4: (+1)
   \   00000028   0x4611             MOV      R1,R2
   \   0000002A   0x1E49             SUBS     R1,R1,#+1
   \   0000002C   0x4189             SBCS     R1,R1,R1
   \   0000002E   0x43C9             MVNS     R1,R1
   \   00000030   0x0FC9             LSRS     R1,R1,#+31
    842              if (pItem->Flags & MENU_IF_DISABLED) {
   \   00000032   0x07DA             LSLS     R2,R3,#+31
   \   00000034   0xD506             BPL.N    ??_SetPaintColors_3
    843                if (pObj->Flags & MENU_CF_HIDE_DISABLED_SEL) {
   \   00000036   0xF890 0x205E      LDRB     R2,[R0, #+94]
   \   0000003A   0x0712             LSLS     R2,R2,#+28
   \   0000003C   0xD501             BPL.N    ??_SetPaintColors_5
    844                  ColorIndex = MENU_CI_DISABLED;
   \   0000003E   0x2102             MOVS     R1,#+2
   \   00000040   0xE000             B.N      ??_SetPaintColors_3
    845                } else {
    846                  ColorIndex += MENU_CI_DISABLED;
   \                     ??_SetPaintColors_5: (+1)
   \   00000042   0x1C89             ADDS     R1,R1,#+2
    847                }
    848              }
    849            }
    850            GUI_SetBkColor(pObj->Props.aBkColor[ColorIndex]);
   \                     ??_SetPaintColors_3: (+1)
   \   00000044   0xEB00 0x0481      ADD      R4,R0,R1, LSL #+2
   \   00000048   0x6BE0             LDR      R0,[R4, #+60]
   \   0000004A   0x.... 0x....      BL       GUI_SetBkColor
    851            GUI_SetColor(pObj->Props.aTextColor[ColorIndex]);
   \   0000004E   0x6AA0             LDR      R0,[R4, #+40]
   \   00000050   0xE8BD 0x4010      POP      {R4,LR}
   \   00000054   0x.... 0x....      B.W      GUI_SetColor
    852          }
    853          
    854          /*********************************************************************
    855          *
    856          *       _OnPaint
    857          */

   \                                 In section .text, align 2, keep-with-next
    858          static void _OnPaint(MENU_Handle hObj, MENU_Obj* pObj) {
   \                     _OnPaint: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB087             SUB      SP,SP,#+28
   \   00000006   0x4604             MOV      R4,R0
   \   00000008   0x460D             MOV      R5,R1
    859            GUI_RECT FillRect, TextRect;
    860            MENU_ITEM* pItem;
    861            unsigned TextWidth, NumItems, i;
    862            U8 BorderLeft   = pObj->Props.aBorder[MENU_BI_LEFT];
   \   0000000A   0xF895 0x8050      LDRB     R8,[R5, #+80]
   \   0000000E   0xF105 0x0050      ADD      R0,R5,#+80
   \   00000012   0x7880             LDRB     R0,[R0, #+2]
   \   00000014   0x9004             STR      R0,[SP, #+16]
    863            U8 BorderTop    = pObj->Props.aBorder[MENU_BI_TOP];
    864            int FontHeight  = GUI_GetYDistOfFont(pObj->Props.pFont);
   \   00000016   0xF105 0x0050      ADD      R0,R5,#+80
   \   0000001A   0x6840             LDR      R0,[R0, #+4]
   \   0000001C   0x.... 0x....      BL       GUI_GetYDistOfFont
   \   00000020   0x4683             MOV      R11,R0
    865            int EffectSize  = _GetEffectSize(hObj, pObj);
   \   00000022   0x4629             MOV      R1,R5
   \   00000024   0x4620             MOV      R0,R4
   \   00000026   0x.... 0x....      BL       _GetEffectSize
   \   0000002A   0x4606             MOV      R6,R0
    866            NumItems = MENU__GetNumItems(pObj);
   \   0000002C   0x4628             MOV      R0,R5
   \   0000002E   0x.... 0x....      BL       MENU__GetNumItems
   \   00000032   0x4607             MOV      R7,R0
    867            WM__GetClientRectWin(&pObj->Widget.Win, &FillRect);
   \   00000034   0xA900             ADD      R1,SP,#+0
   \   00000036   0x4628             MOV      R0,R5
   \   00000038   0x.... 0x....      BL       WM__GetClientRectWin
    868            GUI__ReduceRect(&FillRect, &FillRect, EffectSize);
   \   0000003C   0x4632             MOV      R2,R6
   \   0000003E   0xA900             ADD      R1,SP,#+0
   \   00000040   0xA800             ADD      R0,SP,#+0
   \   00000042   0x.... 0x....      BL       GUI__ReduceRect
    869            GUI_SetFont(pObj->Props.pFont);
   \   00000046   0xF105 0x0050      ADD      R0,R5,#+80
   \   0000004A   0x6840             LDR      R0,[R0, #+4]
   \   0000004C   0x.... 0x....      BL       GUI_SetFont
    870            if (pObj->Flags & MENU_SF_VERTICAL) {
   \   00000050   0xF105 0x0050      ADD      R0,R5,#+80
   \   00000054   0x7B80             LDRB     R0,[R0, #+14]
   \   00000056   0x07C0             LSLS     R0,R0,#+31
   \   00000058   0x4629             MOV      R1,R5
   \   0000005A   0x4620             MOV      R0,R4
   \   0000005C   0xD55F             BPL.N    ??_OnPaint_0
    871              int ItemHeight, xSize;
    872              xSize = _CalcMenuSizeX(hObj, pObj);
    873              FillRect.x1 = xSize - EffectSize - 1;
   \   0000005E   0x.... 0x....      BL       _CalcMenuSizeX
   \   00000062   0x1B80             SUBS     R0,R0,R6
   \   00000064   0x1E40             SUBS     R0,R0,#+1
   \   00000066   0xF8AD 0x0004      STRH     R0,[SP, #+4]
    874              TextRect.x0 = FillRect.x0 + BorderLeft;
   \   0000006A   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   0000006E   0x4440             ADD      R0,R8,R0
   \   00000070   0xF8AD 0x0008      STRH     R0,[SP, #+8]
    875              for (i = 0; i < NumItems; i++) {
   \   00000074   0xF04F 0x0900      MOV      R9,#+0
   \   00000078   0xE01F             B.N      ??_OnPaint_1
    876                pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, i);
    877                ItemHeight = _GetItemHeight(hObj, pObj, i);
    878                _SetPaintColors(pObj, pItem, i);
    879                FillRect.y1 = FillRect.y0 + ItemHeight - 1;
    880                if (pItem->Flags & MENU_IF_SEPARATOR) {
    881                  GUI_ClearRectEx(&FillRect);
    882                  GUI_SetColor(0x7C7C7C);
    883                  GUI_DrawHLine(FillRect.y0 + BorderTop + 1, FillRect.x0 + 2, FillRect.x1 - 2);
    884                } else {
    885                  TextWidth = pItem->TextWidth;
    886                  TextRect.x1 = TextRect.x0 + TextWidth - 1;
   \                     ??_OnPaint_2: (+1)
   \   0000007A   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \   0000007E   0xF8DA 0x1008      LDR      R1,[R10, #+8]
   \   00000082   0x1808             ADDS     R0,R1,R0
   \   00000084   0x1E40             SUBS     R0,R0,#+1
   \   00000086   0xF8AD 0x000C      STRH     R0,[SP, #+12]
    887                  TextRect.y0 = FillRect.y0 + BorderTop;
   \   0000008A   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   0000008E   0x9904             LDR      R1,[SP, #+16]
   \   00000090   0x1808             ADDS     R0,R1,R0
   \   00000092   0xF8AD 0x000A      STRH     R0,[SP, #+10]
    888                  TextRect.y1 = TextRect.y0 + FontHeight - 1;
   \   00000096   0x4458             ADD      R0,R11,R0
   \   00000098   0x1E40             SUBS     R0,R0,#+1
   \   0000009A   0xF8AD 0x000E      STRH     R0,[SP, #+14]
    889                  WIDGET__FillStringInRect(pItem->acText, &FillRect, &TextRect, &TextRect);
   \   0000009E   0xAB02             ADD      R3,SP,#+8
   \   000000A0   0xAA02             ADD      R2,SP,#+8
   \   000000A2   0xA900             ADD      R1,SP,#+0
   \   000000A4   0xF10A 0x000C      ADD      R0,R10,#+12
   \   000000A8   0x.... 0x....      BL       WIDGET__FillStringInRect
    890                }
    891                FillRect.y0 += ItemHeight;
   \                     ??_OnPaint_3: (+1)
   \   000000AC   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   000000B0   0x4440             ADD      R0,R8,R0
   \   000000B2   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \   000000B6   0xF109 0x0901      ADD      R9,R9,#+1
   \                     ??_OnPaint_1: (+1)
   \   000000BA   0x45B9             CMP      R9,R7
   \   000000BC   0xF080 0x808D      BCS.W    ??_OnPaint_4
   \   000000C0   0x4649             MOV      R1,R9
   \   000000C2   0xF105 0x0058      ADD      R0,R5,#+88
   \   000000C6   0x.... 0x....      BL       GUI_ARRAY_GetpItem
   \   000000CA   0x4682             MOV      R10,R0
   \   000000CC   0x464A             MOV      R2,R9
   \   000000CE   0x4629             MOV      R1,R5
   \   000000D0   0x4620             MOV      R0,R4
   \   000000D2   0x.... 0x....      BL       _GetItemHeight
   \   000000D6   0x4680             MOV      R8,R0
   \   000000D8   0x464A             MOV      R2,R9
   \   000000DA   0x4651             MOV      R1,R10
   \   000000DC   0x4628             MOV      R0,R5
   \   000000DE   0x.... 0x....      BL       _SetPaintColors
   \   000000E2   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   000000E6   0x4440             ADD      R0,R8,R0
   \   000000E8   0x1E40             SUBS     R0,R0,#+1
   \   000000EA   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   \   000000EE   0xF89A 0x0004      LDRB     R0,[R10, #+4]
   \   000000F2   0x0780             LSLS     R0,R0,#+30
   \   000000F4   0xD5C1             BPL.N    ??_OnPaint_2
   \   000000F6   0xA800             ADD      R0,SP,#+0
   \   000000F8   0x.... 0x....      BL       GUI_ClearRectEx
   \   000000FC   0x....             LDR.N    R0,??DataTable5_1  ;; 0x7c7c7c
   \   000000FE   0x.... 0x....      BL       GUI_SetColor
   \   00000102   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   00000106   0x1E82             SUBS     R2,R0,#+2
   \   00000108   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   0000010C   0x1C81             ADDS     R1,R0,#+2
   \   0000010E   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   00000112   0x9B04             LDR      R3,[SP, #+16]
   \   00000114   0x1818             ADDS     R0,R3,R0
   \   00000116   0x1C40             ADDS     R0,R0,#+1
   \   00000118   0x.... 0x....      BL       GUI_DrawHLine
   \   0000011C   0xE7C6             B.N      ??_OnPaint_3
    892              }
    893            } else {
    894              int ItemWidth, ySize;
    895              ySize = _CalcMenuSizeY(hObj, pObj);
    896              FillRect.y1 = ySize - EffectSize - 1;
   \                     ??_OnPaint_0: (+1)
   \   0000011E   0x.... 0x....      BL       _CalcMenuSizeY
   \   00000122   0x1B80             SUBS     R0,R0,R6
   \   00000124   0x1E40             SUBS     R0,R0,#+1
   \   00000126   0xF8AD 0x0006      STRH     R0,[SP, #+6]
    897              TextRect.y0 = FillRect.y0 + BorderTop;
   \   0000012A   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   0000012E   0x9904             LDR      R1,[SP, #+16]
   \   00000130   0x1808             ADDS     R0,R1,R0
   \   00000132   0xF8AD 0x000A      STRH     R0,[SP, #+10]
    898              TextRect.y1 = TextRect.y0 + FontHeight - 1;
   \   00000136   0x4458             ADD      R0,R11,R0
   \   00000138   0x1E40             SUBS     R0,R0,#+1
   \   0000013A   0xF8AD 0x000E      STRH     R0,[SP, #+14]
    899              for (i = 0; i < NumItems; i++) {
   \   0000013E   0xF04F 0x0900      MOV      R9,#+0
   \   00000142   0xE01A             B.N      ??_OnPaint_5
    900                pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, i);
    901                ItemWidth = _GetItemWidth(hObj, pObj, i);
    902                _SetPaintColors(pObj, pItem, i);
    903                FillRect.x1 = FillRect.x0 + ItemWidth - 1;
    904                if (pItem->Flags & MENU_IF_SEPARATOR) {
    905                  GUI_ClearRectEx(&FillRect);
    906                  GUI_SetColor(0x7C7C7C);
    907                  GUI_DrawVLine(FillRect.x0 + BorderLeft + 1, FillRect.y0 + 2, FillRect.y1 - 2);
    908                } else {
    909                  TextWidth = pItem->TextWidth;
   \                     ??_OnPaint_6: (+1)
   \   00000144   0xF8DA 0x0008      LDR      R0,[R10, #+8]
    910                  TextRect.x0 = FillRect.x0 + BorderLeft;
   \   00000148   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   0000014C   0x4441             ADD      R1,R8,R1
   \   0000014E   0xF8AD 0x1008      STRH     R1,[SP, #+8]
    911                  TextRect.x1 = TextRect.x0 + TextWidth - 1;
   \   00000152   0xF8BD 0x1008      LDRH     R1,[SP, #+8]
   \   00000156   0x1840             ADDS     R0,R0,R1
   \   00000158   0x1E40             SUBS     R0,R0,#+1
   \   0000015A   0xF8AD 0x000C      STRH     R0,[SP, #+12]
    912                  WIDGET__FillStringInRect(pItem->acText, &FillRect, &TextRect, &TextRect);
   \   0000015E   0xAB02             ADD      R3,SP,#+8
   \   00000160   0xAA02             ADD      R2,SP,#+8
   \   00000162   0xA900             ADD      R1,SP,#+0
   \   00000164   0xF10A 0x000C      ADD      R0,R10,#+12
   \   00000168   0x.... 0x....      BL       WIDGET__FillStringInRect
    913                }
    914                FillRect.x0 += ItemWidth;
   \                     ??_OnPaint_7: (+1)
   \   0000016C   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000170   0x4458             ADD      R0,R11,R0
   \   00000172   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   00000176   0xF109 0x0901      ADD      R9,R9,#+1
   \                     ??_OnPaint_5: (+1)
   \   0000017A   0x45B9             CMP      R9,R7
   \   0000017C   0xD22D             BCS.N    ??_OnPaint_4
   \   0000017E   0x4649             MOV      R1,R9
   \   00000180   0xF105 0x0058      ADD      R0,R5,#+88
   \   00000184   0x.... 0x....      BL       GUI_ARRAY_GetpItem
   \   00000188   0x4682             MOV      R10,R0
   \   0000018A   0x464A             MOV      R2,R9
   \   0000018C   0x4629             MOV      R1,R5
   \   0000018E   0x4620             MOV      R0,R4
   \   00000190   0x.... 0x....      BL       _GetItemWidth
   \   00000194   0x4683             MOV      R11,R0
   \   00000196   0x464A             MOV      R2,R9
   \   00000198   0x4651             MOV      R1,R10
   \   0000019A   0x4628             MOV      R0,R5
   \   0000019C   0x.... 0x....      BL       _SetPaintColors
   \   000001A0   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   000001A4   0x4458             ADD      R0,R11,R0
   \   000001A6   0x1E40             SUBS     R0,R0,#+1
   \   000001A8   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   \   000001AC   0xF89A 0x0004      LDRB     R0,[R10, #+4]
   \   000001B0   0x0780             LSLS     R0,R0,#+30
   \   000001B2   0xD5C7             BPL.N    ??_OnPaint_6
   \   000001B4   0xA800             ADD      R0,SP,#+0
   \   000001B6   0x.... 0x....      BL       GUI_ClearRectEx
   \   000001BA   0x....             LDR.N    R0,??DataTable5_1  ;; 0x7c7c7c
   \   000001BC   0x.... 0x....      BL       GUI_SetColor
   \   000001C0   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   000001C4   0x1E82             SUBS     R2,R0,#+2
   \   000001C6   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   000001CA   0x1C81             ADDS     R1,R0,#+2
   \   000001CC   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   000001D0   0x4440             ADD      R0,R8,R0
   \   000001D2   0x1C40             ADDS     R0,R0,#+1
   \   000001D4   0x.... 0x....      BL       GUI_DrawVLine
   \   000001D8   0xE7C8             B.N      ??_OnPaint_7
    915              }
    916            }
    917            if (pObj->Width || pObj->Height) {
   \                     ??_OnPaint_4: (+1)
   \   000001DA   0xF105 0x0050      ADD      R0,R5,#+80
   \   000001DE   0x6940             LDR      R0,[R0, #+20]
   \   000001E0   0x2800             CMP      R0,#+0
   \   000001E2   0xD104             BNE.N    ??_OnPaint_8
   \   000001E4   0xF105 0x0050      ADD      R0,R5,#+80
   \   000001E8   0x6980             LDR      R0,[R0, #+24]
   \   000001EA   0x2800             CMP      R0,#+0
   \   000001EC   0xD01F             BEQ.N    ??_OnPaint_9
    918              GUI_RECT r;
    919              WM__GetClientRectWin(&pObj->Widget.Win, &r);
   \                     ??_OnPaint_8: (+1)
   \   000001EE   0xA905             ADD      R1,SP,#+20
   \   000001F0   0x4628             MOV      R0,R5
   \   000001F2   0x.... 0x....      BL       WM__GetClientRectWin
    920              GUI__ReduceRect(&r, &r, EffectSize);
   \   000001F6   0x4632             MOV      R2,R6
   \   000001F8   0xA905             ADD      R1,SP,#+20
   \   000001FA   0xA805             ADD      R0,SP,#+20
   \   000001FC   0x.... 0x....      BL       GUI__ReduceRect
    921              GUI_SetBkColor(pObj->Props.aBkColor[MENU_CI_ENABLED]);
   \   00000200   0x6BE8             LDR      R0,[R5, #+60]
   \   00000202   0x.... 0x....      BL       GUI_SetBkColor
    922              GUI_ClearRect(FillRect.x1 + 1, EffectSize, r.x1, FillRect.y1);
   \   00000206   0xF9BD 0x3006      LDRSH    R3,[SP, #+6]
   \   0000020A   0xF9BD 0x2018      LDRSH    R2,[SP, #+24]
   \   0000020E   0x4631             MOV      R1,R6
   \   00000210   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   00000214   0x1C40             ADDS     R0,R0,#+1
   \   00000216   0x.... 0x....      BL       GUI_ClearRect
    923              GUI_ClearRect(EffectSize, FillRect.y1 + 1, r.x1, r.y1);
   \   0000021A   0xF9BD 0x301A      LDRSH    R3,[SP, #+26]
   \   0000021E   0xF9BD 0x2018      LDRSH    R2,[SP, #+24]
   \   00000222   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   00000226   0x1C41             ADDS     R1,R0,#+1
   \   00000228   0x4630             MOV      R0,R6
   \   0000022A   0x.... 0x....      BL       GUI_ClearRect
    924            }
    925            /* Draw 3D effect (if configured) */
    926            if (_HasEffect(hObj, pObj)) {
   \                     ??_OnPaint_9: (+1)
   \   0000022E   0x4629             MOV      R1,R5
   \   00000230   0x4620             MOV      R0,R4
   \   00000232   0x.... 0x....      BL       _HasEffect
   \   00000236   0x2800             CMP      R0,#+0
   \   00000238   0xD002             BEQ.N    ??_OnPaint_10
    927              pObj->Widget.pEffect->pfDrawUp();
   \   0000023A   0x6A28             LDR      R0,[R5, #+32]
   \   0000023C   0x6800             LDR      R0,[R0, #+0]
   \   0000023E   0x4780             BLX      R0
    928            }
    929          }
   \                     ??_OnPaint_10: (+1)
   \   00000240   0xB007             ADD      SP,SP,#+28
   \   00000242   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    930          
    931          /*********************************************************************
    932          *
    933          *       _MENU_Callback
    934          */

   \                                 In section .text, align 2, keep-with-next
    935          static void _MENU_Callback(WM_MESSAGE* pMsg) {
   \                     _MENU_Callback: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
    936            MENU_Handle hObj;
    937            MENU_Obj* pObj;
    938            hObj = pMsg->hWin;
   \   00000004   0xF9B4 0x5004      LDRSH    R5,[R4, #+4]
    939            if (pMsg->MsgId != WM_PID_STATE_CHANGED) {
   \   00000008   0x6820             LDR      R0,[R4, #+0]
   \   0000000A   0x2811             CMP      R0,#+17
   \   0000000C   0xD005             BEQ.N    ??_MENU_Callback_0
    940              /* Let widget handle the standard messages */
    941              if (WIDGET_HandleActive(hObj, pMsg) == 0) {
   \   0000000E   0x4621             MOV      R1,R4
   \   00000010   0x4628             MOV      R0,R5
   \   00000012   0x.... 0x....      BL       WIDGET_HandleActive
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD02D             BEQ.N    ??_MENU_Callback_1
    942                return;
    943              }
    944            }
    945            pObj = (MENU_Obj*) GUI_ALLOC_h2p(hObj);
   \                     ??_MENU_Callback_0: (+1)
   \   0000001A   0x4628             MOV      R0,R5
   \   0000001C   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000020   0x4606             MOV      R6,R0
    946            switch (pMsg->MsgId) {
   \   00000022   0x6820             LDR      R0,[R4, #+0]
   \   00000024   0x280B             CMP      R0,#+11
   \   00000026   0xD01D             BEQ.N    ??_MENU_Callback_2
   \   00000028   0x280C             CMP      R0,#+12
   \   0000002A   0xD009             BEQ.N    ??_MENU_Callback_3
   \   0000002C   0x280F             CMP      R0,#+15
   \   0000002E   0xD014             BEQ.N    ??_MENU_Callback_4
   \   00000030   0x282C             CMP      R0,#+44
   \   00000032   0xD11B             BNE.N    ??_MENU_Callback_5
    947            case WM_MENU:
    948              _OnMenu(hObj, pObj, pMsg);
   \   00000034   0x4622             MOV      R2,R4
   \   00000036   0x4631             MOV      R1,R6
   \   00000038   0x4628             MOV      R0,R5
   \   0000003A   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000003E   0x....             B.N      _OnMenu
    949              return;     /* Message handled, do not call WM_DefaultProc() here. */
    950            case WM_TOUCH:
    951              if (_OnTouch(hObj, pObj, pMsg)) {
   \                     ??_MENU_Callback_3: (+1)
   \   00000040   0x4622             MOV      R2,R4
   \   00000042   0x4631             MOV      R1,R6
   \   00000044   0x4628             MOV      R0,R5
   \   00000046   0x.... 0x....      BL       _OnTouch
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD00E             BEQ.N    ??_MENU_Callback_5
    952                _ForwardPIDMsgToOwner(hObj, pObj, pMsg);
   \   0000004E   0x4622             MOV      R2,R4
   \   00000050   0x4631             MOV      R1,R6
   \   00000052   0x4628             MOV      R0,R5
   \   00000054   0x.... 0x....      BL       _ForwardPIDMsgToOwner
   \   00000058   0xE008             B.N      ??_MENU_Callback_5
    953              }
    954              break;
    955          #if (GUI_SUPPORT_MOUSE)
    956            case WM_MOUSEOVER:
    957              if (_OnMouseOver(hObj, pObj, pMsg)) {
    958                _ForwardPIDMsgToOwner(hObj, pObj, pMsg);
    959              }
    960              break;
    961          #endif
    962            case WM_PAINT:
    963              _OnPaint(hObj, pObj);
   \                     ??_MENU_Callback_4: (+1)
   \   0000005A   0x4631             MOV      R1,R6
   \   0000005C   0x4628             MOV      R0,R5
   \   0000005E   0x.... 0x....      BL       _OnPaint
    964              break;
   \   00000062   0xE003             B.N      ??_MENU_Callback_5
    965            case WM_DELETE:
    966              GUI_ARRAY_Delete(&pObj->ItemArray);
   \                     ??_MENU_Callback_2: (+1)
   \   00000064   0xF106 0x0058      ADD      R0,R6,#+88
   \   00000068   0x.... 0x....      BL       GUI_ARRAY_Delete
    967              break;      /* No return here ... WM_DefaultProc needs to be called */
    968            }
    969            WM_DefaultProc(pMsg);
   \                     ??_MENU_Callback_5: (+1)
   \   0000006C   0x4620             MOV      R0,R4
   \   0000006E   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000072   0x.... 0x....      B.W      WM_DefaultProc
   \                     ??_MENU_Callback_1: (+1)
   \   00000076   0xBD70             POP      {R4-R6,PC}       ;; return
    970          }
    971          
    972          /*********************************************************************
    973          *
    974          *       Public code, Create
    975          *
    976          **********************************************************************
    977          */
    978          /*********************************************************************
    979          *
    980          *       MENU_CreateEx
    981          */

   \                                 In section .text, align 2, keep-with-next
    982          MENU_Handle MENU_CreateEx(int x0, int y0, int xSize, int ySize, WM_HWIN hParent, int WinFlags, int ExFlags, int Id) {
   \                     MENU_CreateEx: (+1)
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
   \   00000006   0x4614             MOV      R4,R2
   \   00000008   0x461D             MOV      R5,R3
    983            MENU_Handle hObj;
    984            /* Create the window */
    985            hObj = WM_CreateWindowAsChild(x0, y0, xSize, ySize, hParent, WM_CF_SHOW | WM_CF_STAYONTOP | WinFlags, &_MENU_Callback,
    986                                          sizeof(MENU_Obj) - sizeof(WM_Obj));
   \   0000000A   0x2250             MOVS     R2,#+80
   \   0000000C   0x9203             STR      R2,[SP, #+12]
   \   0000000E   0x....             LDR.N    R2,??DataTable5_2
   \   00000010   0x9202             STR      R2,[SP, #+8]
   \   00000012   0x9A0D             LDR      R2,[SP, #+52]
   \   00000014   0xF042 0x020A      ORR      R2,R2,#0xA
   \   00000018   0xB292             UXTH     R2,R2
   \   0000001A   0x9201             STR      R2,[SP, #+4]
   \   0000001C   0xF9BD 0x2030      LDRSH    R2,[SP, #+48]
   \   00000020   0x9200             STR      R2,[SP, #+0]
   \   00000022   0x4622             MOV      R2,R4
   \   00000024   0x.... 0x....      BL       WM_CreateWindowAsChild
   \   00000028   0x0006             MOVS     R6,R0
    987            if (hObj) {
   \   0000002A   0xD030             BEQ.N    ??MENU_CreateEx_0
    988              MENU_Obj* pObj;
    989              WM_LOCK();
    990              pObj = (MENU_Obj*)GUI_ALLOC_h2p(hObj);
   \   0000002C   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000030   0x4607             MOV      R7,R0
    991               /* Init sub-classes */
    992              GUI_ARRAY_CREATE(&pObj->ItemArray);
    993              /* init widget specific variables */
    994              WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
   \   00000032   0x2210             MOVS     R2,#+16
   \   00000034   0x990F             LDR      R1,[SP, #+60]
   \   00000036   0x.... 0x....      BL       WIDGET__Init
   \   0000003A   0xF8DD 0x9038      LDR      R9,[SP, #+56]
    995              /* init member variables */
    996              if (ExFlags & MENU_SF_OPEN_ON_POINTEROVER) {
   \   0000003E   0xEA5F 0x7089      LSLS     R0,R9,#+30
   \   00000042   0xD502             BPL.N    ??MENU_CreateEx_1
    997                ExFlags |= MENU_SF_ACTIVE;
   \   00000044   0xF049 0x0940      ORR      R9,R9,#0x40
   \   00000048   0xE001             B.N      ??MENU_CreateEx_2
    998              } else {
    999                ExFlags &= ~(MENU_SF_ACTIVE);
   \                     ??MENU_CreateEx_1: (+1)
   \   0000004A   0xF029 0x0940      BIC      R9,R9,#0x40
   1000              }
   1001              pObj->Props           = MENU__DefaultProps;
   \                     ??MENU_CreateEx_2: (+1)
   \   0000004E   0x.... 0x....      LDR.W    R8,??DataTable5_3
   \   00000052   0xF107 0x0028      ADD      R0,R7,#+40
   \   00000056   0x4641             MOV      R1,R8
   \   00000058   0x2230             MOVS     R2,#+48
   \   0000005A   0x.... 0x....      BL       __aeabi_memcpy4
   1002              pObj->Flags           = ExFlags;
   \   0000005E   0xF107 0x005C      ADD      R0,R7,#+92
   \   00000062   0xF8A0 0x9002      STRH     R9,[R0, #+2]
   1003              pObj->Width           = ((xSize > 0) ? xSize : 0);
   \   00000066   0x2C01             CMP      R4,#+1
   \   00000068   0xDA00             BGE.N    ??MENU_CreateEx_3
   \   0000006A   0x2400             MOVS     R4,#+0
   \                     ??MENU_CreateEx_3: (+1)
   \   0000006C   0x6084             STR      R4,[R0, #+8]
   1004              pObj->Height          = ((ySize > 0) ? ySize : 0);
   \   0000006E   0x2D01             CMP      R5,#+1
   \   00000070   0xDA00             BGE.N    ??MENU_CreateEx_4
   \   00000072   0x2500             MOVS     R5,#+0
   \                     ??MENU_CreateEx_4: (+1)
   \   00000074   0x60C5             STR      R5,[R0, #+12]
   1005              pObj->Sel             = -1;
   \   00000076   0xF04F 0x31FF      MOV      R1,#-1
   \   0000007A   0x6101             STR      R1,[R0, #+16]
   1006              pObj->hOwner          = 0;
   \   0000007C   0x2100             MOVS     R1,#+0
   \   0000007E   0xF8A7 0x105C      STRH     R1,[R7, #+92]
   1007              pObj->IsSubmenuActive = 0;
   \   00000082   0x7101             STRB     R1,[R0, #+4]
   1008              WIDGET_SetEffect(hObj, MENU__pDefaultEffect);
   \   00000084   0xF8D8 0x1030      LDR      R1,[R8, #+48]
   \   00000088   0x4630             MOV      R0,R6
   \   0000008A   0x.... 0x....      BL       WIDGET_SetEffect
   1009              INIT_ID(pObj);
   1010              WM_UNLOCK();
   1011            } else {
   1012              GUI_DEBUG_ERROROUT_IF(hObj==0, "MENU_CreateEx failed")
   1013            }
   1014            return hObj;
   \                     ??MENU_CreateEx_0: (+1)
   \   0000008E   0x4630             MOV      R0,R6
   \   00000090   0xB005             ADD      SP,SP,#+20
   \   00000092   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
   1015          }
   1016          
   1017          /*********************************************************************
   1018          *
   1019          *       Public code, modul internal functions
   1020          *
   1021          **********************************************************************
   1022          */
   1023          /*********************************************************************
   1024          *
   1025          *       MENU__GetNumItems
   1026          */

   \                                 In section .text, align 2, keep-with-next
   1027          unsigned MENU__GetNumItems(MENU_Obj* pObj) {
   1028            return GUI_ARRAY_GetNumItems(&pObj->ItemArray);
   \                     MENU__GetNumItems: (+1)
   \   00000000   0x3058             ADDS     R0,R0,#+88
   \   00000002   0x.... 0x....      B.W      GUI_ARRAY_GetNumItems
   1029          }
   1030          
   1031          /*********************************************************************
   1032          *
   1033          *       MENU__InvalidateItem
   1034          */

   \                                 In section .text, align 2, keep-with-next
   1035          void MENU__InvalidateItem(MENU_Handle hObj, const MENU_Obj* pObj, unsigned Index) {
   1036            GUI_USE_PARA(pObj);
   1037            GUI_USE_PARA(Index);
   1038            WM_InvalidateWindow(hObj);  /* Can be optimized, no need to invalidate all items */
   \                     MENU__InvalidateItem: (+1)
   \   00000000   0x.... 0x....      B.W      WM_InvalidateWindow
   1039          }
   1040          
   1041          /*********************************************************************
   1042          *
   1043          *       MENU__RecalcTextWidthOfItems
   1044          */

   \                                 In section .text, align 2, keep-with-next
   1045          void MENU__RecalcTextWidthOfItems(MENU_Obj* pObj) {
   \                     MENU__RecalcTextWidthOfItems: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
   1046            const GUI_FONT GUI_UNI_PTR* pOldFont;
   1047            MENU_ITEM* pItem;
   1048            unsigned i, NumItems;
   1049            NumItems = MENU__GetNumItems(pObj);
   \   00000006   0x.... 0x....      BL       MENU__GetNumItems
   \   0000000A   0x4605             MOV      R5,R0
   1050            pOldFont  = GUI_SetFont(pObj->Props.pFont);
   \   0000000C   0x6D60             LDR      R0,[R4, #+84]
   \   0000000E   0x.... 0x....      BL       GUI_SetFont
   \   00000012   0x4606             MOV      R6,R0
   1051            for (i = 0; i < NumItems; i++) {
   \   00000014   0x2700             MOVS     R7,#+0
   \   00000016   0xE00C             B.N      ??MENU__RecalcTextWidthOfItems_0
   1052              pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, i);
   \                     ??MENU__RecalcTextWidthOfItems_1: (+1)
   \   00000018   0x4639             MOV      R1,R7
   \   0000001A   0xF104 0x0058      ADD      R0,R4,#+88
   \   0000001E   0x.... 0x....      BL       GUI_ARRAY_GetpItem
   \   00000022   0x4680             MOV      R8,R0
   1053              pItem->TextWidth = GUI_GetStringDistX(pItem->acText);
   \   00000024   0xF108 0x000C      ADD      R0,R8,#+12
   \   00000028   0x.... 0x....      BL       GUI_GetStringDistX
   \   0000002C   0xF8C8 0x0008      STR      R0,[R8, #+8]
   1054            }
   \   00000030   0x1C7F             ADDS     R7,R7,#+1
   \                     ??MENU__RecalcTextWidthOfItems_0: (+1)
   \   00000032   0x42AF             CMP      R7,R5
   \   00000034   0xD3F0             BCC.N    ??MENU__RecalcTextWidthOfItems_1
   1055            GUI_SetFont(pOldFont);
   \   00000036   0x4630             MOV      R0,R6
   \   00000038   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000003C   0x.... 0x....      B.W      GUI_SetFont
   1056          }
   1057          
   1058          /*********************************************************************
   1059          *
   1060          *       MENU__ResizeMenu
   1061          */

   \                                 In section .text, align 2, keep-with-next
   1062          void MENU__ResizeMenu(MENU_Handle hObj, MENU_Obj* pObj) {
   \                     MENU__ResizeMenu: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   1063            int xSize, ySize;
   1064            xSize = _CalcWindowSizeX(hObj, pObj);
   \   00000006   0x.... 0x....      BL       _CalcWindowSizeX
   \   0000000A   0x4606             MOV      R6,R0
   1065            ySize = _CalcWindowSizeY(hObj, pObj);
   \   0000000C   0x4629             MOV      R1,R5
   \   0000000E   0x4620             MOV      R0,R4
   \   00000010   0x.... 0x....      BL       _CalcWindowSizeY
   1066            WM_SetSize(hObj, xSize, ySize);
   \   00000014   0x4602             MOV      R2,R0
   \   00000016   0x4631             MOV      R1,R6
   \   00000018   0x4620             MOV      R0,R4
   \   0000001A   0x.... 0x....      BL       WM_SetSize
   1067            WM_InvalidateWindow(hObj);
   \   0000001E   0x4620             MOV      R0,R4
   \   00000020   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000024   0x.... 0x....      B.W      WM_InvalidateWindow
   1068          }
   1069          
   1070          /*********************************************************************
   1071          *
   1072          *       MENU__SetItem
   1073          */

   \                                 In section .text, align 2, keep-with-next
   1074          char MENU__SetItem(MENU_Handle hObj, MENU_Obj* pObj, unsigned Index, const MENU_ITEM_DATA* pItemData) {
   \                     MENU__SetItem: (+1)
   \   00000000   0xE92D 0x41FF      PUSH     {R0-R8,LR}
   \   00000004   0x4605             MOV      R5,R0
   \   00000006   0x460E             MOV      R6,R1
   \   00000008   0x4617             MOV      R7,R2
   \   0000000A   0x461C             MOV      R4,R3
   1075            MENU_ITEM Item = {0};
   \   0000000C   0xA800             ADD      R0,SP,#+0
   \   0000000E   0x2110             MOVS     R1,#+16
   \   00000010   0x.... 0x....      BL       __aeabi_memclr4
   1076            const char* pText;
   1077            pText = pItemData->pText;
   \   00000014   0xF8D4 0x8000      LDR      R8,[R4, #+0]
   1078            if (!pText) {
   \   00000018   0xF1B8 0x0F00      CMP      R8,#+0
   \   0000001C   0xD101             BNE.N    ??MENU__SetItem_0
   1079              pText = "";
   \   0000001E   0x.... 0x....      ADR.W    R8,??DataTable5  ;; ""
   1080            }
   1081            Item.Id        = pItemData->Id;
   \                     ??MENU__SetItem_0: (+1)
   \   00000022   0x88A0             LDRH     R0,[R4, #+4]
   \   00000024   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   1082            Item.Flags     = pItemData->Flags;
   \   00000028   0x88E0             LDRH     R0,[R4, #+6]
   \   0000002A   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1083            Item.hSubmenu  = pItemData->hSubmenu;
   \   0000002E   0x8920             LDRH     R0,[R4, #+8]
   \   00000030   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1084            Item.TextWidth = _CalcTextWidth(pObj, pText);
   \   00000034   0x4641             MOV      R1,R8
   \   00000036   0x4630             MOV      R0,R6
   \   00000038   0x.... 0x....      BL       _CalcTextWidth
   \   0000003C   0x9002             STR      R0,[SP, #+8]
   1085            if (Item.Flags & MENU_IF_SEPARATOR) {
   \   0000003E   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   00000042   0x0780             LSLS     R0,R0,#+30
   \   00000044   0xD502             BPL.N    ??MENU__SetItem_1
   1086              Item.hSubmenu = 0;   /* Ensures that no separator is a submenu */
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1087            }
   1088            if (GUI_ARRAY_SetItem(&pObj->ItemArray, Index, &Item, sizeof(MENU_ITEM) + strlen(pText)) != 0) {
   \                     ??MENU__SetItem_1: (+1)
   \   0000004C   0x4640             MOV      R0,R8
   \   0000004E   0x.... 0x....      BL       strlen
   \   00000052   0xF100 0x0310      ADD      R3,R0,#+16
   \   00000056   0xAA00             ADD      R2,SP,#+0
   \   00000058   0x4639             MOV      R1,R7
   \   0000005A   0xF106 0x0058      ADD      R0,R6,#+88
   \   0000005E   0x.... 0x....      BL       GUI_ARRAY_SetItem
   \   00000062   0x2800             CMP      R0,#+0
   \   00000064   0xD00F             BEQ.N    ??MENU__SetItem_2
   1089              MENU_ITEM* pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
   \   00000066   0x4639             MOV      R1,R7
   \   00000068   0xF106 0x0058      ADD      R0,R6,#+88
   \   0000006C   0x.... 0x....      BL       GUI_ARRAY_GetpItem
   1090              strcpy(pItem->acText, pText);
   \   00000070   0x4641             MOV      R1,R8
   \   00000072   0x300C             ADDS     R0,R0,#+12
   \   00000074   0x.... 0x....      BL       strcpy
   1091              MENU_SetOwner(Item.hSubmenu, hObj);
   \   00000078   0x4629             MOV      R1,R5
   \   0000007A   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   0000007E   0x.... 0x....      BL       MENU_SetOwner
   1092              return 1;
   \   00000082   0x2001             MOVS     R0,#+1
   \   00000084   0xE000             B.N      ??MENU__SetItem_3
   1093            }
   1094            return 0;
   \                     ??MENU__SetItem_2: (+1)
   \   00000086   0x2000             MOVS     R0,#+0
   \                     ??MENU__SetItem_3: (+1)
   \   00000088   0xB004             ADD      SP,SP,#+16
   \   0000008A   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   1095          }
   1096          
   1097          /*********************************************************************
   1098          *
   1099          *       MENU__SetItemFlags
   1100          */

   \                                 In section .text, align 2, keep-with-next
   1101          void MENU__SetItemFlags(MENU_Obj* pObj, unsigned Index, U16 Mask, U16 Flags) {
   \                     MENU__SetItemFlags: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4614             MOV      R4,R2
   \   00000004   0x461D             MOV      R5,R3
   1102            MENU_ITEM* pItem = (MENU_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
   \   00000006   0x3058             ADDS     R0,R0,#+88
   \   00000008   0x.... 0x....      BL       GUI_ARRAY_GetpItem
   1103            pItem->Flags &= ~Mask;
   \   0000000C   0x8881             LDRH     R1,[R0, #+4]
   \   0000000E   0x43A1             BICS     R1,R1,R4
   \   00000010   0x8081             STRH     R1,[R0, #+4]
   1104            pItem->Flags |= Flags;
   \   00000012   0x4329             ORRS     R1,R5,R1
   \   00000014   0x8081             STRH     R1,[R0, #+4]
   1105          }
   \   00000016   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1106          
   1107          /*********************************************************************
   1108          *
   1109          *       MENU__SendMenuMessage
   1110          */

   \                                 In section .text, align 2, keep-with-next
   1111          int MENU__SendMenuMessage(MENU_Handle hObj, WM_HWIN hDestWin, U16 MsgType, U16 ItemId) {
   \                     MENU__SendMenuMessage: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x460C             MOV      R4,R1
   1112            MENU_MSG_DATA MsgData;
   1113            WM_MESSAGE    Msg = {0};
   \   00000006   0xA901             ADD      R1,SP,#+4
   \   00000008   0x2500             MOVS     R5,#+0
   \   0000000A   0x462E             MOV      R6,R5
   \   0000000C   0x462F             MOV      R7,R5
   \   0000000E   0xC1E0             STM      R1!,{R5-R7}
   1114            MsgData.MsgType   = MsgType;
   \   00000010   0xF8AD 0x2000      STRH     R2,[SP, #+0]
   1115            MsgData.ItemId    = ItemId;
   \   00000014   0xF8AD 0x3002      STRH     R3,[SP, #+2]
   1116            Msg.MsgId         = WM_MENU;
   \   00000018   0x212C             MOVS     R1,#+44
   \   0000001A   0x9101             STR      R1,[SP, #+4]
   1117            Msg.Data.p        = &MsgData;
   \   0000001C   0xA900             ADD      R1,SP,#+0
   \   0000001E   0x9103             STR      R1,[SP, #+12]
   1118            Msg.hWinSrc       = hObj;
   \   00000020   0xF8AD 0x000A      STRH     R0,[SP, #+10]
   1119            if (!hDestWin) {
   \   00000024   0x2C00             CMP      R4,#+0
   \   00000026   0xD102             BNE.N    ??MENU__SendMenuMessage_0
   1120              hDestWin = WM_GetParent(hObj);
   \   00000028   0x.... 0x....      BL       WM_GetParent
   \   0000002C   0x4604             MOV      R4,R0
   1121            }
   1122            if (hDestWin) {
   \                     ??MENU__SendMenuMessage_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD005             BEQ.N    ??MENU__SendMenuMessage_1
   1123              WM__SendMessage(hDestWin, &Msg);
   \   00000032   0xA901             ADD      R1,SP,#+4
   \   00000034   0x4620             MOV      R0,R4
   \   00000036   0x.... 0x....      BL       WM__SendMessage
   1124              return Msg.Data.v;
   \   0000003A   0x9803             LDR      R0,[SP, #+12]
   \   0000003C   0xE000             B.N      ??MENU__SendMenuMessage_2
   1125            }
   1126            return 0;
   \                     ??MENU__SendMenuMessage_1: (+1)
   \   0000003E   0x4628             MOV      R0,R5
   \                     ??MENU__SendMenuMessage_2: (+1)
   \   00000040   0xB005             ADD      SP,SP,#+20
   \   00000042   0xBDF0             POP      {R4-R7,PC}       ;; return
   1127          }
   1128          
   1129          /*********************************************************************
   1130          *
   1131          *       Public code, member functions
   1132          *
   1133          **********************************************************************
   1134          */
   1135          /*********************************************************************
   1136          *
   1137          *       MENU_AddItem
   1138          */

   \                                 In section .text, align 2, keep-with-next
   1139          void MENU_AddItem(MENU_Handle hObj, const MENU_ITEM_DATA* pItemData) {
   \                     MENU_AddItem: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   1140            if (hObj && pItemData) {
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD025             BEQ.N    ??MENU_AddItem_0
   \   0000000A   0x2D00             CMP      R5,#+0
   \   0000000C   0xD023             BEQ.N    ??MENU_AddItem_0
   1141              MENU_Obj* pObj;
   1142              WM_LOCK();
   1143              pObj = MENU_H2P(hObj);
   \   0000000E   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000012   0x0006             MOVS     R6,R0
   1144              if (pObj) {
   \   00000014   0xD01F             BEQ.N    ??MENU_AddItem_0
   1145                if (GUI_ARRAY_AddItem(&pObj->ItemArray, NULL, 0) == 0) {
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x4611             MOV      R1,R2
   \   0000001A   0xF106 0x0058      ADD      R0,R6,#+88
   \   0000001E   0x.... 0x....      BL       GUI_ARRAY_AddItem
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD117             BNE.N    ??MENU_AddItem_0
   1146                  unsigned Index;
   1147                  Index = MENU__GetNumItems(pObj) - 1;
   \   00000026   0x4630             MOV      R0,R6
   \   00000028   0x.... 0x....      BL       MENU__GetNumItems
   \   0000002C   0x1E47             SUBS     R7,R0,#+1
   1148                  if (MENU__SetItem(hObj, pObj, Index, pItemData) == 0) {
   \   0000002E   0x462B             MOV      R3,R5
   \   00000030   0x463A             MOV      R2,R7
   \   00000032   0x4631             MOV      R1,R6
   \   00000034   0x4620             MOV      R0,R4
   \   00000036   0x.... 0x....      BL       MENU__SetItem
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD106             BNE.N    ??MENU_AddItem_1
   1149                    GUI_ARRAY_DeleteItem(&pObj->ItemArray, Index);
   \   0000003E   0x4639             MOV      R1,R7
   \   00000040   0xF106 0x0058      ADD      R0,R6,#+88
   \   00000044   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   00000048   0x.... 0x....      B.W      GUI_ARRAY_DeleteItem
   1150                  } else {
   1151                    MENU__ResizeMenu(hObj, pObj);
   \                     ??MENU_AddItem_1: (+1)
   \   0000004C   0x4631             MOV      R1,R6
   \   0000004E   0x4620             MOV      R0,R4
   \   00000050   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   00000054   0x....             B.N      MENU__ResizeMenu
   1152                  }
   1153                }
   1154              }
   1155              WM_UNLOCK();
   1156            }
   1157          }
   \                     ??MENU_AddItem_0: (+1)
   \   00000056   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1158          
   1159          /*********************************************************************
   1160          *
   1161          *       MENU_SetOwner
   1162          */

   \                                 In section .text, align 2, keep-with-next
   1163          void MENU_SetOwner(MENU_Handle hObj, WM_HWIN hOwner) {
   \                     MENU_SetOwner: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x460C             MOV      R4,R1
   1164            if (hObj) {
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD005             BEQ.N    ??MENU_SetOwner_0
   1165              MENU_Obj* pObj;
   1166              WM_LOCK();
   1167              pObj = MENU_H2P(hObj);
   \   00000008   0x.... 0x....      BL       GUI_ALLOC_h2p
   1168              if (pObj) {
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD001             BEQ.N    ??MENU_SetOwner_0
   1169                pObj->hOwner = hOwner;
   \   00000010   0xF8A0 0x405C      STRH     R4,[R0, #+92]
   1170              }
   1171              WM_UNLOCK();
   1172            }
   1173          }
   \                     ??MENU_SetOwner_0: (+1)
   \   00000014   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x007C7C7C         DC32     0x7c7c7c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     _MENU_Callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     MENU__DefaultProps

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {0}>`:
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 1, keep-with-next
   \                     `?<Constant "">`:
   \   00000000   0x00               DC8 ""

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {0}>_1`:
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   1174          
   1175          #else  /* avoid empty object files */
   1176            void Menu_C(void);
   1177            void Menu_C(void) {}
   1178          #endif
   1179          
   1180          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   MENU_AddItem
        24   -> GUI_ALLOC_h2p
        24   -> GUI_ARRAY_AddItem
         0   -> GUI_ARRAY_DeleteItem
        24   -> MENU__GetNumItems
         0   -> MENU__ResizeMenu
        24   -> MENU__SetItem
      48   MENU_CreateEx
        48   -> GUI_ALLOC_h2p
        48   -> WIDGET_SetEffect
        48   -> WIDGET__Init
        48   -> WM_CreateWindowAsChild
        48   -> __aeabi_memcpy4
       8   MENU_SetOwner
         8   -> GUI_ALLOC_h2p
       0   MENU__GetNumItems
         0   -> GUI_ARRAY_GetNumItems
       0   MENU__InvalidateItem
         0   -> WM_InvalidateWindow
      24   MENU__RecalcTextWidthOfItems
        24   -> GUI_ARRAY_GetpItem
        24   -> GUI_GetStringDistX
         0   -> GUI_SetFont
        24   -> GUI_SetFont
        24   -> MENU__GetNumItems
      16   MENU__ResizeMenu
         0   -> WM_InvalidateWindow
        16   -> WM_SetSize
        16   -> _CalcWindowSizeX
        16   -> _CalcWindowSizeY
      40   MENU__SendMenuMessage
        40   -> WM_GetParent
        40   -> WM__SendMessage
      40   MENU__SetItem
        40   -> GUI_ARRAY_GetpItem
        40   -> GUI_ARRAY_SetItem
        40   -> MENU_SetOwner
        40   -> _CalcTextWidth
        40   -> __aeabi_memclr4
        40   -> strcpy
        40   -> strlen
      16   MENU__SetItemFlags
        16   -> GUI_ARRAY_GetpItem
      16   _ActivateItem
        16   -> GUI_ARRAY_GetpItem
         0   -> MENU__SendMenuMessage
        16   -> _ClosePopup
      16   _ActivateMenu
        16   -> GUI_ARRAY_GetpItem
        16   -> _CloseSubmenu
        16   -> _OpenSubmenu
         0   -> _SetSelection
      24   _CalcMenuSizeX
        24   -> MENU__GetNumItems
        24   -> _GetEffectSize
        24   -> _GetItemWidth
      24   _CalcMenuSizeY
        24   -> MENU__GetNumItems
        24   -> _GetEffectSize
        24   -> _GetItemHeight
      16   _CalcTextWidth
        16   -> GUI_GetStringDistX
        16   -> GUI_SetFont
       0   _CalcWindowSizeX
         0   -> _CalcMenuSizeX
       0   _CalcWindowSizeY
         0   -> _CalcMenuSizeY
       8   _ClosePopup
         8   -> WM_DetachWindow
         0   -> WM_ReleaseCapture
      24   _CloseSubmenu
        24   -> GUI_ARRAY_GetpItem
         0   -> MENU__InvalidateItem
        24   -> MENU__SendMenuMessage
        24   -> WM_DetachWindow
        24   -> _SetCapture
       8   _DeactivateMenu
         8   -> _CloseSubmenu
      16   _DeselectItem
         0   -> _ReleaseCapture
        16   -> _SetSelection
       0   _ForwardMouseOverMsg
      24   _ForwardPIDMsgToOwner
        24   -> WM_GetParent
        24   -> WM_GetWindowOrgX
        24   -> WM_GetWindowOrgY
         0   -> WM__SendMessage
        24   -> _IsTopLevelMenu
      16   _GetEffectSize
        16   -> _HasEffect
      32   _GetItemFromPos
        32   -> MENU__GetNumItems
        32   -> _CalcMenuSizeX
        32   -> _CalcMenuSizeY
        32   -> _GetEffectSize
        32   -> _GetItemHeight
        32   -> _GetItemWidth
      24   _GetItemHeight
        24   -> GUI_ARRAY_GetpItem
        24   -> GUI_GetYDistOfFont
        24   -> _GetEffectSize
      40   _GetItemPos
        40   -> _GetEffectSize
        40   -> _GetItemHeight
        40   -> _GetItemWidth
      16   _GetItemWidth
        16   -> GUI_ARRAY_GetpItem
        16   -> _GetEffectSize
      48   _HandlePID
        48   -> WM_PID__GetPrevState
        48   -> WM__GetClientRectWin
        48   -> _ActivateItem
        48   -> _ActivateMenu
        48   -> _ClosePopup
        48   -> _DeactivateMenu
        48   -> _DeselectItem
        48   -> _ForwardMouseOverMsg
        48   -> _GetItemFromPos
        48   -> _SelectItem
       8   _HasEffect
         8   -> _IsTopLevelMenu
       8   _IsTopLevelMenu
         8   -> MENU__SendMenuMessage
      16   _MENU_Callback
        16   -> GUI_ALLOC_h2p
        16   -> GUI_ARRAY_Delete
        16   -> WIDGET_HandleActive
         0   -> WM_DefaultProc
        16   -> _ForwardPIDMsgToOwner
         0   -> _OnMenu
        16   -> _OnPaint
        16   -> _OnTouch
      16   _OnMenu
         0   -> MENU__ResizeMenu
        16   -> WM_GetParent
         0   -> WM__SendMessage
        16   -> _ClosePopup
         0   -> _CloseSubmenu
        16   -> _DeactivateMenu
        16   -> _DeselectItem
        16   -> _SetCapture
      64   _OnPaint
        64   -- Indirect call
        64   -> GUI_ARRAY_GetpItem
        64   -> GUI_ClearRect
        64   -> GUI_ClearRectEx
        64   -> GUI_DrawHLine
        64   -> GUI_DrawVLine
        64   -> GUI_GetYDistOfFont
        64   -> GUI_SetBkColor
        64   -> GUI_SetColor
        64   -> GUI_SetFont
        64   -> GUI__ReduceRect
        64   -> MENU__GetNumItems
        64   -> WIDGET__FillStringInRect
        64   -> WM__GetClientRectWin
        64   -> _CalcMenuSizeX
        64   -> _CalcMenuSizeY
        64   -> _GetEffectSize
        64   -> _GetItemHeight
        64   -> _GetItemWidth
        64   -> _HasEffect
        64   -> _SetPaintColors
       8   _OnTouch
         8   -> _HandlePID
      48   _OpenSubmenu
        48   -> GUI_ARRAY_GetpItem
        48   -> MENU_SetOwner
        48   -> MENU__InvalidateItem
        48   -> MENU__SendMenuMessage
        48   -> WM_AttachWindowAt
        48   -> WM_GetDesktopWindow
        48   -> WM_GetWindowOrgX
        48   -> WM_GetWindowOrgY
        48   -> _CalcMenuSizeX
        48   -> _CalcMenuSizeY
        48   -> _CloseSubmenu
        48   -> _GetEffectSize
        48   -> _GetItemPos
        48   -> _IsTopLevelMenu
      16   _ReleaseCapture
        16   -> WM_HasCaptured
         0   -> WM_ReleaseCapture
        16   -> _IsTopLevelMenu
      16   _SelectItem
        16   -> _OpenSubmenu
        16   -> _SetCapture
         0   -> _SetSelection
       8   _SetCapture
         8   -> WM_HasCaptured
         0   -> WM_SetCapture
       8   _SetPaintColors
         8   -> GUI_SetBkColor
         0   -> GUI_SetColor
      16   _SetSelection
        16   -> MENU__InvalidateItem


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       1  ?<Constant "">
      16  ?<Constant {0}>
      12  ?<Constant {0}>_1
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
      88  MENU_AddItem
     150  MENU_CreateEx
      22  MENU_SetOwner
      52  MENU__DefaultProps
          MENU__pDefaultEffect
       6  MENU__GetNumItems
       4  MENU__InvalidateItem
      64  MENU__RecalcTextWidthOfItems
      40  MENU__ResizeMenu
      68  MENU__SendMenuMessage
     142  MENU__SetItem
      24  MENU__SetItemFlags
      60  _ActivateItem
     112  _ActivateMenu
      90  _CalcMenuSizeX
      90  _CalcMenuSizeY
      36  _CalcTextWidth
      14  _CalcWindowSizeX
      14  _CalcWindowSizeY
      34  _ClosePopup
      88  _CloseSubmenu
      28  _DeactivateMenu
      36  _DeselectItem
       4  _ForwardMouseOverMsg
     104  _ForwardPIDMsgToOwner
      22  _GetEffectSize
     192  _GetItemFromPos
      82  _GetItemHeight
     106  _GetItemPos
      74  _GetItemWidth
     294  _HandlePID
      26  _HasEffect
      26  _IsTopLevelMenu
     120  _MENU_Callback
     136  _OnMenu
     582  _OnPaint
      36  _OnTouch
     294  _OpenSubmenu
      44  _ReleaseCapture
      44  _SelectItem
      36  _SetCapture
      88  _SetPaintColors
      32  _SetSelection

 
    52 bytes in section .data
    29 bytes in section .rodata
 3 568 bytes in section .text
 
 3 568 bytes of CODE  memory
    29 bytes of CONST memory
    52 bytes of DATA  memory

Errors: none
Warnings: none
