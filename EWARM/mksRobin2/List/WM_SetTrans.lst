###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:28
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_SetTrans.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_SetTrans.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\WM_SetTrans.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WM_SetTrans.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_SetTrans.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_SetTrans.C
     16          Purpose     : Windows manager, optional routines
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "WM_Intern.h"
     21          
     22          #if GUI_WINSUPPORT
     23          #if WM_SUPPORT_TRANSPARENCY   /* If 0, WM will not generate any code */
     24          
     25          #include "GUIDebug.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       WM_SetHasTrans
     36          */

   \                                 In section .text, align 2, keep-with-next
     37          void WM_SetHasTrans(WM_HWIN hWin) {
   \                     WM_SetHasTrans: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     38            WM_Obj *pWin;
     39            WM_LOCK();
     40            if (hWin) {
   \   00000004   0xD010             BEQ.N    ??WM_SetHasTrans_0
     41              pWin = WM_H2P(hWin);  
   \   00000006   0x.... 0x....      BL       GUI_ALLOC_h2p
     42              /* First check if this is necessary at all */
     43              if ((pWin->Status & WM_SF_HASTRANS) == 0) {
   \   0000000A   0x8B81             LDRH     R1,[R0, #+28]
   \   0000000C   0x07CA             LSLS     R2,R1,#+31
   \   0000000E   0xD40B             BMI.N    ??WM_SetHasTrans_0
     44                pWin->Status |= WM_SF_HASTRANS; /* Set Transparency flag */
   \   00000010   0xF041 0x0101      ORR      R1,R1,#0x1
   \   00000014   0x8381             STRH     R1,[R0, #+28]
     45                WM__TransWindowCnt++;          /* Increment counter for transparency windows */
   \   00000016   0x....             LDR.N    R0,??DataTable1
   \   00000018   0x6801             LDR      R1,[R0, #+0]
   \   0000001A   0x1C49             ADDS     R1,R1,#+1
   \   0000001C   0x6001             STR      R1,[R0, #+0]
     46                WM_InvalidateWindow(hWin);      /* Mark content as invalid */
   \   0000001E   0x4620             MOV      R0,R4
   \   00000020   0xE8BD 0x4010      POP      {R4,LR}
   \   00000024   0x.... 0x....      B.W      WM_InvalidateWindow
     47              }
     48            }
     49            WM_UNLOCK();
     50          }
   \                     ??WM_SetHasTrans_0: (+1)
   \   00000028   0xBD10             POP      {R4,PC}          ;; return
     51          
     52          /*********************************************************************
     53          *
     54          *       WM_ClrHasTrans
     55          */

   \                                 In section .text, align 2, keep-with-next
     56          void WM_ClrHasTrans(WM_HWIN hWin) {
   \                     WM_ClrHasTrans: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     57            WM_Obj *pWin;
     58            WM_LOCK();
     59            if (hWin) {
   \   00000004   0xD011             BEQ.N    ??WM_ClrHasTrans_0
     60              pWin = WM_H2P(hWin);  
   \   00000006   0x.... 0x....      BL       GUI_ALLOC_h2p
     61              /* First check if this is necessary at all */
     62              if (pWin->Status & WM_SF_HASTRANS) {
   \   0000000A   0x8B81             LDRH     R1,[R0, #+28]
   \   0000000C   0x07CA             LSLS     R2,R1,#+31
   \   0000000E   0xD50C             BPL.N    ??WM_ClrHasTrans_0
     63                pWin->Status &= ~WM_SF_HASTRANS;
   \   00000010   0xF64F 0x72FE      MOVW     R2,#+65534
   \   00000014   0x4011             ANDS     R1,R2,R1
   \   00000016   0x8381             STRH     R1,[R0, #+28]
     64                WM__TransWindowCnt--;            /* Decrement counter for transparency windows */
   \   00000018   0x....             LDR.N    R0,??DataTable1
   \   0000001A   0x6801             LDR      R1,[R0, #+0]
   \   0000001C   0x1E49             SUBS     R1,R1,#+1
   \   0000001E   0x6001             STR      R1,[R0, #+0]
     65                WM_InvalidateWindow(hWin);        /* Mark content as invalid */
   \   00000020   0x4620             MOV      R0,R4
   \   00000022   0xE8BD 0x4010      POP      {R4,LR}
   \   00000026   0x.... 0x....      B.W      WM_InvalidateWindow
     66              }
     67            }
     68            WM_UNLOCK();
     69          }
   \                     ??WM_ClrHasTrans_0: (+1)
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
     70          
     71          /*********************************************************************
     72          *
     73          *       WM_GetHasTrans
     74          */

   \                                 In section .text, align 2, keep-with-next
     75          int WM_GetHasTrans(WM_HWIN hWin) {
   \                     WM_GetHasTrans: (+1)
   \   00000000   0x4601             MOV      R1,R0
     76            int r = 0;
   \   00000002   0x2000             MOVS     R0,#+0
     77            WM_Obj *pWin;
     78            WM_LOCK();
     79            if (hWin) {
   \   00000004   0x2900             CMP      R1,#+0
   \   00000006   0xD100             BNE.N    ??WM_GetHasTrans_0
   \   00000008   0x4770             BX       LR
     80              pWin = WM_H2P(hWin);  
   \                     ??WM_GetHasTrans_0: (+1)
   \   0000000A   0xB580             PUSH     {R7,LR}
   \   0000000C   0x4608             MOV      R0,R1
   \   0000000E   0x.... 0x....      BL       GUI_ALLOC_h2p
     81              r = pWin->Status & WM_SF_HASTRANS;
   \   00000012   0x7F00             LDRB     R0,[R0, #+28]
   \   00000014   0xF000 0x0001      AND      R0,R0,#0x1
     82            }
     83            WM_UNLOCK();
     84            return r;
   \   00000018   0xBD02             POP      {R1,PC}          ;; return
     85          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     WM__TransWindowCnt
     86          
     87          #endif /*WM_SUPPORT_TRANSPARENCY*/
     88          
     89          #else
     90            void WM_SetTrans_c(void) {} /* avoid empty object files */
     91          #endif   /* GUI_WINSUPPORT */
     92          
     93          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   WM_ClrHasTrans
         8   -> GUI_ALLOC_h2p
         0   -> WM_InvalidateWindow
       8   WM_GetHasTrans
         8   -> GUI_ALLOC_h2p
       8   WM_SetHasTrans
         8   -> GUI_ALLOC_h2p
         0   -> WM_InvalidateWindow


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      44  WM_ClrHasTrans
      26  WM_GetHasTrans
      42  WM_SetHasTrans

 
 116 bytes in section .text
 
 116 bytes of CODE memory

Errors: none
Warnings: none
