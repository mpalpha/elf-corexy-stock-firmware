###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:23
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\FRAMEWIN__UpdateButtons.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\FRAMEWIN__UpdateButtons.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\FRAMEWIN__UpdateButtons.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\FRAMEWIN__UpdateButtons.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\FRAMEWIN__UpdateButtons.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : FRAMEWIN__UpdateButtons.c
     16          Purpose     : 
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stdlib.h>
     21          #include <string.h>
     22          #include "FRAMEWIN_Private.h"
     23          
     24          #if GUI_WINSUPPORT
     25          
     26          
     27          /*********************************************************************
     28          *
     29          *        Exported routines
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       FRAMEWIN__UpdateButtons
     36          *
     37          * Purpose:
     38          *   Adjust button positions & size.
     39          *   This is required after resizing the title bar
     40          */

   \                                 In section .text, align 4, keep-with-next
     41          void FRAMEWIN__UpdateButtons(FRAMEWIN_Obj* pObj, int OldHeight) {
   \                     FRAMEWIN__UpdateButtons: (+1)
   \   00000000   0xE92D 0x4FF2      PUSH     {R1,R4-R11,LR}
   \   00000004   0xB084             SUB      SP,SP,#+16
   \   00000006   0x4604             MOV      R4,R0
     42            int TitleHeight = FRAMEWIN__CalcTitleHeight(pObj);
     43            int Diff = TitleHeight - OldHeight;
   \   00000008   0x.... 0x....      BL       FRAMEWIN__CalcTitleHeight
   \   0000000C   0x9904             LDR      R1,[SP, #+16]
   \   0000000E   0x1A40             SUBS     R0,R0,R1
   \   00000010   0x9000             STR      R0,[SP, #+0]
     44            if (Diff) {
   \   00000012   0xD061             BEQ.N    ??FRAMEWIN__UpdateButtons_0
     45              WM_HWIN hLeft;
     46              WM_HWIN hRight;
     47              WM_HWIN hChild;
     48              WM_Obj* pChild;
     49              GUI_RECT r;
     50              int xLeft, xRight, n;
     51              n = 0;
   \   00000014   0x2500             MOVS     R5,#+0
     52              do {
     53                hLeft  = hRight = 0;
   \                     ??FRAMEWIN__UpdateButtons_1: (+1)
   \   00000016   0x2600             MOVS     R6,#+0
   \   00000018   0x4637             MOV      R7,R6
     54                xLeft  = GUI_XMAX;
   \   0000001A   0xF640 0x78FF      MOVW     R8,#+4095
     55                xRight = GUI_XMIN;
   \   0000001E   0xF8DF 0x90C0      LDR.W    R9,??FRAMEWIN__UpdateButtons_2  ;; 0xfffff001
     56                for (hChild = pObj->Widget.Win.hFirstChild; hChild; hChild = pChild->hNext) {
   \   00000022   0xF9B4 0xA018      LDRSH    R10,[R4, #+24]
   \   00000026   0xE007             B.N      ??FRAMEWIN__UpdateButtons_3
     57                  pChild = WM_H2P(hChild);
     58                  r = pChild->Rect;
     59                  GUI_MoveRect(&r, -pObj->Widget.Win.Rect.x0, -pObj->Widget.Win.Rect.y0);
     60                  if ((r.y0 == pObj->Props.BorderSize) && ((r.y1 - r.y0 + 1) == OldHeight)) {
     61                    if (pChild->Status & WM_SF_ANCHOR_RIGHT) {
     62                      if (r.x1 > xRight) {
     63                        hRight = hChild;
     64                        xRight = r.x0;
     65                      }
     66                    } else {
     67                      if (r.x0 < xLeft) {
   \                     ??FRAMEWIN__UpdateButtons_4: (+1)
   \   00000028   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   0000002C   0x4540             CMP      R0,R8
   \   0000002E   0xDA01             BGE.N    ??FRAMEWIN__UpdateButtons_5
     68                        hLeft = hChild;
   \   00000030   0x4657             MOV      R7,R10
     69                        xLeft = r.x0;
   \   00000032   0x4680             MOV      R8,R0
     70                      }
     71                    }
   \                     ??FRAMEWIN__UpdateButtons_5: (+1)
   \   00000034   0xF9BB 0xA01A      LDRSH    R10,[R11, #+26]
   \                     ??FRAMEWIN__UpdateButtons_3: (+1)
   \   00000038   0xF1BA 0x0F00      CMP      R10,#+0
   \   0000003C   0xD02A             BEQ.N    ??FRAMEWIN__UpdateButtons_6
   \   0000003E   0x4650             MOV      R0,R10
   \   00000040   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000044   0x4683             MOV      R11,R0
   \   00000046   0xA801             ADD      R0,SP,#+4
   \   00000048   0x4659             MOV      R1,R11
   \   0000004A   0x2208             MOVS     R2,#+8
   \   0000004C   0x.... 0x....      BL       __aeabi_memcpy
   \   00000050   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000054   0x4242             RSBS     R2,R0,#+0
   \   00000056   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000005A   0x4241             RSBS     R1,R0,#+0
   \   0000005C   0xA801             ADD      R0,SP,#+4
   \   0000005E   0x.... 0x....      BL       GUI_MoveRect
   \   00000062   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   00000066   0xF9B4 0x1042      LDRSH    R1,[R4, #+66]
   \   0000006A   0x4288             CMP      R0,R1
   \   0000006C   0xD1E2             BNE.N    ??FRAMEWIN__UpdateButtons_5
   \   0000006E   0xF9BD 0x100A      LDRSH    R1,[SP, #+10]
   \   00000072   0x1A08             SUBS     R0,R1,R0
   \   00000074   0x1C40             ADDS     R0,R0,#+1
   \   00000076   0x9904             LDR      R1,[SP, #+16]
   \   00000078   0x4288             CMP      R0,R1
   \   0000007A   0xD1DB             BNE.N    ??FRAMEWIN__UpdateButtons_5
   \   0000007C   0xF89B 0x001C      LDRB     R0,[R11, #+28]
   \   00000080   0x0600             LSLS     R0,R0,#+24
   \   00000082   0xD5D1             BPL.N    ??FRAMEWIN__UpdateButtons_4
   \   00000084   0xF9BD 0x0008      LDRSH    R0,[SP, #+8]
   \   00000088   0x4581             CMP      R9,R0
   \   0000008A   0xDAD3             BGE.N    ??FRAMEWIN__UpdateButtons_5
   \   0000008C   0x4656             MOV      R6,R10
   \   0000008E   0xF9BD 0x9004      LDRSH    R9,[SP, #+4]
   \   00000092   0xE7CF             B.N      ??FRAMEWIN__UpdateButtons_5
     72                  }
     73                }
     74                if (hLeft) {
   \                     ??FRAMEWIN__UpdateButtons_6: (+1)
   \   00000094   0x2F00             CMP      R7,#+0
   \   00000096   0xD00B             BEQ.N    ??FRAMEWIN__UpdateButtons_7
     75                  WM_ResizeWindow(hLeft, Diff, Diff);
   \   00000098   0x9A00             LDR      R2,[SP, #+0]
   \   0000009A   0x4611             MOV      R1,R2
   \   0000009C   0x4638             MOV      R0,R7
   \   0000009E   0x.... 0x....      BL       WM_ResizeWindow
     76                  WM_MoveWindow(hLeft, n * Diff, 0);
   \   000000A2   0x2200             MOVS     R2,#+0
   \   000000A4   0x9800             LDR      R0,[SP, #+0]
   \   000000A6   0xFB00 0xF105      MUL      R1,R0,R5
   \   000000AA   0x4638             MOV      R0,R7
   \   000000AC   0x.... 0x....      BL       WM_MoveWindow
     77                }
     78                if (hRight) {
   \                     ??FRAMEWIN__UpdateButtons_7: (+1)
   \   000000B0   0x2E00             CMP      R6,#+0
   \   000000B2   0xD00B             BEQ.N    ??FRAMEWIN__UpdateButtons_8
     79                  WM_ResizeWindow(hRight, Diff, Diff);
   \   000000B4   0x9A00             LDR      R2,[SP, #+0]
   \   000000B6   0x4611             MOV      R1,R2
   \   000000B8   0x4630             MOV      R0,R6
   \   000000BA   0x.... 0x....      BL       WM_ResizeWindow
     80                  WM_MoveWindow(hRight, -(n * Diff), 0);
   \   000000BE   0x2200             MOVS     R2,#+0
   \   000000C0   0x9800             LDR      R0,[SP, #+0]
   \   000000C2   0x4368             MULS     R0,R0,R5
   \   000000C4   0x4241             RSBS     R1,R0,#+0
   \   000000C6   0x4630             MOV      R0,R6
   \   000000C8   0x.... 0x....      BL       WM_MoveWindow
     81                }
     82                n++;
   \                     ??FRAMEWIN__UpdateButtons_8: (+1)
   \   000000CC   0x1C6D             ADDS     R5,R5,#+1
     83              } while (hLeft || hRight);
   \   000000CE   0xEA46 0x0007      ORR      R0,R6,R7
   \   000000D2   0xB200             SXTH     R0,R0
   \   000000D4   0x2800             CMP      R0,#+0
   \   000000D6   0xD19E             BNE.N    ??FRAMEWIN__UpdateButtons_1
     84            }
     85          }
   \                     ??FRAMEWIN__UpdateButtons_0: (+1)
   \   000000D8   0xB005             ADD      SP,SP,#+20
   \   000000DA   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \   000000DE   0xBF00             Nop      
   \                     ??FRAMEWIN__UpdateButtons_2:
   \   000000E0   0xFFFFF001         DC32     0xfffff001
     86          
     87          
     88          
     89          #else
     90            void FRAMEWIN__UpdateButtons_c(void) {} /* avoid empty object files */
     91          #endif /* GUI_WINSUPPORT */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      56   FRAMEWIN__UpdateButtons
        56   -> FRAMEWIN__CalcTitleHeight
        56   -> GUI_ALLOC_h2p
        56   -> GUI_MoveRect
        56   -> WM_MoveWindow
        56   -> WM_ResizeWindow
        56   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     228  FRAMEWIN__UpdateButtons

 
 228 bytes in section .text
 
 228 bytes of CODE memory

Errors: none
Warnings: none
