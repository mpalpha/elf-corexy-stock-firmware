###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:54
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_SIF_Prop.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_SIF_Prop.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\GUI_SIF_Prop.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\GUI_SIF_Prop.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_SIF_Prop.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_SIF_Prop.c
     16          Purpose     : Implementation of system independend fonts
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "GUI_Private.h"
     21          
     22          /*********************************************************************
     23          *
     24          *       Static code
     25          *
     26          **********************************************************************
     27          */
     28          
     29          /*********************************************************************
     30          *
     31          *       _GetNumCharAreas
     32          */

   \                                 In section .text, align 2, keep-with-next
     33          static int _GetNumCharAreas(const GUI_FONT GUI_UNI_PTR * pFont) {
   \                     _GetNumCharAreas: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     34            U16 NumCharAreas;
     35            const U8 * pData;
     36            pData = (const U8 *)pFont->p.pFontData + 14 /* Skip ID, YSize, YDist, Baseline, LHeight and CHeight */;
   \   00000002   0x6980             LDR      R0,[R0, #+24]
   \   00000004   0xF200 0x000E      ADDW     R0,R0,#+14
   \   00000008   0x9000             STR      R0,[SP, #+0]
     37            NumCharAreas = GUI__Read16(&pData);
     38            return NumCharAreas;
   \   0000000A   0xA800             ADD      R0,SP,#+0
   \   0000000C   0x.... 0x....      BL       GUI__Read16
   \   00000010   0xBD02             POP      {R1,PC}          ;; return
     39          }
     40          
     41          /*********************************************************************
     42          *
     43          *       _GetpCharInfo
     44          */

   \                                 In section .text, align 2, keep-with-next
     45          static const U8 * _GetpCharInfo(const GUI_FONT GUI_UNI_PTR * pFont, U16P c) {
   \                     _GetpCharInfo: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4606             MOV      R6,R0
   \   00000004   0x460C             MOV      R4,R1
     46            const U8 * pCharArea, * pCharInfo;
     47            int NumCharAreas;
     48            NumCharAreas = _GetNumCharAreas(pFont);                 /* Get # of char areas */
   \   00000006   0x.... 0x....      BL       _GetNumCharAreas
   \   0000000A   0x4605             MOV      R5,R0
     49            pCharArea = (const U8 *)pFont->p.pFontData 
     50                        + sizeof(GUI_SI_FONT);                      /* Set char area pointer to first char area */
   \   0000000C   0x69B0             LDR      R0,[R6, #+24]
   \   0000000E   0x3010             ADDS     R0,R0,#+16
   \   00000010   0x9000             STR      R0,[SP, #+0]
     51            pCharInfo = pCharArea
     52                        + sizeof(GUI_SIF_CHAR_AREA) * NumCharAreas; /* Set char info pointer to first character info */
   \   00000012   0xEB00 0x0685      ADD      R6,R0,R5, LSL #+2
     53            do {
     54              GUI_SIF_CHAR_AREA CharArea;
     55              CharArea.First    = GUI__Read16(&pCharArea);
   \                     ??_GetpCharInfo_0: (+1)
   \   00000016   0xA800             ADD      R0,SP,#+0
   \   00000018   0x.... 0x....      BL       GUI__Read16
   \   0000001C   0x4607             MOV      R7,R0
     56              CharArea.Last     = GUI__Read16(&pCharArea);
   \   0000001E   0xA800             ADD      R0,SP,#+0
   \   00000020   0x.... 0x....      BL       GUI__Read16
     57              if ((c >= CharArea.First) && (c <= CharArea.Last)) {
   \   00000024   0x4621             MOV      R1,R4
   \   00000026   0x42B9             CMP      R1,R7
   \   00000028   0xDB08             BLT.N    ??_GetpCharInfo_1
   \   0000002A   0x4288             CMP      R0,R1
   \   0000002C   0xDB06             BLT.N    ??_GetpCharInfo_1
     58                pCharInfo += sizeof(GUI_SIF_CHARINFO) * (c - CharArea.First);
   \   0000002E   0x1BE0             SUBS     R0,R4,R7
   \   00000030   0xEB00 0x0140      ADD      R1,R0,R0, LSL #+1
   \   00000034   0xEB06 0x0681      ADD      R6,R6,R1, LSL #+2
     59                return pCharInfo;
   \   00000038   0x4630             MOV      R0,R6
   \   0000003A   0xBDF2             POP      {R1,R4-R7,PC}
     60              }
     61              pCharInfo += sizeof(GUI_SIF_CHARINFO) * (CharArea.Last - CharArea.First + 1);
   \                     ??_GetpCharInfo_1: (+1)
   \   0000003C   0x1BC0             SUBS     R0,R0,R7
   \   0000003E   0xEB00 0x0140      ADD      R1,R0,R0, LSL #+1
   \   00000042   0xEB06 0x0081      ADD      R0,R6,R1, LSL #+2
   \   00000046   0xF100 0x060C      ADD      R6,R0,#+12
     62            } while(--NumCharAreas);
   \   0000004A   0x1E6D             SUBS     R5,R5,#+1
   \   0000004C   0xD1E3             BNE.N    ??_GetpCharInfo_0
     63            return 0;
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     64          }
     65          
     66          /*********************************************************************
     67          *
     68          *       Exported code
     69          *
     70          **********************************************************************
     71          */
     72          
     73          /*********************************************************************
     74          *
     75          *       GUI_SIF_DispChar
     76          */

   \                                 In section .text, align 2, keep-with-next
     77          static void _GUI_SIF_DispChar(U16P c) {
   \                     _GUI_SIF_DispChar: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB088             SUB      SP,SP,#+32
     78            const U8 * pCharInfo, * pData;
     79            pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c);
   \   00000006   0x....             LDR.N    R4,??DataTable3
   \   00000008   0x4601             MOV      R1,R0
   \   0000000A   0x69A0             LDR      R0,[R4, #+24]
   \   0000000C   0x.... 0x....      BL       _GetpCharInfo
   \   00000010   0x9006             STR      R0,[SP, #+24]
     80            if (pCharInfo) {
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD059             BEQ.N    ??_GUI_SIF_DispChar_0
     81              GUI_DRAWMODE DrawMode, OldDrawMode;
     82              GUI_SIF_CHARINFO CharInfo;
     83              CharInfo.XSize        = GUI__Read16(&pCharInfo);
   \   00000016   0xA806             ADD      R0,SP,#+24
   \   00000018   0x.... 0x....      BL       GUI__Read16
   \   0000001C   0x4605             MOV      R5,R0
     84              CharInfo.XDist        = GUI__Read16(&pCharInfo);
   \   0000001E   0xA806             ADD      R0,SP,#+24
   \   00000020   0x.... 0x....      BL       GUI__Read16
   \   00000024   0x4606             MOV      R6,R0
     85              CharInfo.BytesPerLine = GUI__Read16(&pCharInfo);
   \   00000026   0xA806             ADD      R0,SP,#+24
   \   00000028   0x.... 0x....      BL       GUI__Read16
   \   0000002C   0x4680             MOV      R8,R0
     86                                      GUI__Read16(&pCharInfo); /* Dummy */
   \   0000002E   0xA806             ADD      R0,SP,#+24
   \   00000030   0x.... 0x....      BL       GUI__Read16
     87              CharInfo.OffData      = GUI__Read32(&pCharInfo);
   \   00000034   0xA806             ADD      R0,SP,#+24
   \   00000036   0x.... 0x....      BL       GUI__Read32
     88              pData = (const U8 *)GUI_Context.pAFont->p.pFontData + CharInfo.OffData;
   \   0000003A   0x69A1             LDR      R1,[R4, #+24]
   \   0000003C   0x6989             LDR      R1,[R1, #+24]
   \   0000003E   0xEB00 0x0901      ADD      R9,R0,R1
     89              DrawMode = GUI_Context.TextMode;
   \   00000042   0xF9B4 0xA02A      LDRSH    R10,[R4, #+42]
     90              OldDrawMode  = LCD_SetDrawMode(DrawMode);
   \   00000046   0x4650             MOV      R0,R10
   \   00000048   0x.... 0x....      BL       LCD_SetDrawMode
   \   0000004C   0x4607             MOV      R7,R0
     91              LCD_DrawBitmap(GUI_Context.DispPosX, GUI_Context.DispPosY,
     92                             CharInfo.XSize,
     93          									 GUI_Context.pAFont->YSize,
     94                             GUI_Context.pAFont->XMag,
     95          									 GUI_Context.pAFont->YMag,
     96                             1,
     97                             CharInfo.BytesPerLine,
     98                             pData,
     99                             &LCD_BKCOLORINDEX);
   \   0000004E   0x69A0             LDR      R0,[R4, #+24]
   \   00000050   0x9405             STR      R4,[SP, #+20]
   \   00000052   0xF8CD 0x9010      STR      R9,[SP, #+16]
   \   00000056   0xF8CD 0x800C      STR      R8,[SP, #+12]
   \   0000005A   0x2101             MOVS     R1,#+1
   \   0000005C   0x9102             STR      R1,[SP, #+8]
   \   0000005E   0xF990 0x1017      LDRSB    R1,[R0, #+23]
   \   00000062   0x9101             STR      R1,[SP, #+4]
   \   00000064   0xF990 0x1016      LDRSB    R1,[R0, #+22]
   \   00000068   0x9100             STR      R1,[SP, #+0]
   \   0000006A   0x7D03             LDRB     R3,[R0, #+20]
   \   0000006C   0x462A             MOV      R2,R5
   \   0000006E   0xF9B4 0x1024      LDRSH    R1,[R4, #+36]
   \   00000072   0xF9B4 0x0022      LDRSH    R0,[R4, #+34]
   \   00000076   0x.... 0x....      BL       LCD_DrawBitmap
    100              /* Fill empty pixel lines */
    101              if (GUI_Context.pAFont->YDist > GUI_Context.pAFont->YSize) {
   \   0000007A   0x69A0             LDR      R0,[R4, #+24]
   \   0000007C   0x7D41             LDRB     R1,[R0, #+21]
   \   0000007E   0x7D02             LDRB     R2,[R0, #+20]
   \   00000080   0x428A             CMP      R2,R1
   \   00000082   0xD21C             BCS.N    ??_GUI_SIF_DispChar_1
    102                int YMag = GUI_Context.pAFont->YMag;
   \   00000084   0xF990 0x0017      LDRSB    R0,[R0, #+23]
    103                int YDist = GUI_Context.pAFont->YDist * YMag;
   \   00000088   0xFB00 0xF801      MUL      R8,R0,R1
    104                int YSize = GUI_Context.pAFont->YSize * YMag;
   \   0000008C   0xFB00 0xF902      MUL      R9,R0,R2
    105                if (DrawMode != LCD_DRAWMODE_TRANS) {
   \   00000090   0xF1BA 0x0F02      CMP      R10,#+2
   \   00000094   0xD013             BEQ.N    ??_GUI_SIF_DispChar_1
    106                  LCD_COLOR OldColor = GUI_GetColor();
   \   00000096   0x.... 0x....      BL       GUI_GetColor
   \   0000009A   0x4682             MOV      R10,R0
    107                  GUI_SetColor(GUI_GetBkColor());
   \   0000009C   0x.... 0x....      BL       GUI_GetBkColor
   \   000000A0   0x.... 0x....      BL       GUI_SetColor
   \   000000A4   0xF9B4 0x0022      LDRSH    R0,[R4, #+34]
   \   000000A8   0xF9B4 0x1024      LDRSH    R1,[R4, #+36]
   \   000000AC   0xEB08 0x0301      ADD      R3,R8,R1
   \   000000B0   0x182A             ADDS     R2,R5,R0
   \   000000B2   0x4449             ADD      R1,R9,R1
    108                  LCD_FillRect(GUI_Context.DispPosX, 
    109                               GUI_Context.DispPosY + YSize, 
    110                               GUI_Context.DispPosX + CharInfo.XSize, 
    111                               GUI_Context.DispPosY + YDist);
   \   000000B4   0x.... 0x....      BL       LCD_FillRect
    112                  GUI_SetColor(OldColor);
   \   000000B8   0x4650             MOV      R0,R10
   \   000000BA   0x.... 0x....      BL       GUI_SetColor
    113                }
    114              }
    115              LCD_SetDrawMode(OldDrawMode); /* Restore draw mode */
   \                     ??_GUI_SIF_DispChar_1: (+1)
   \   000000BE   0x4638             MOV      R0,R7
   \   000000C0   0x.... 0x....      BL       LCD_SetDrawMode
    116              GUI_Context.DispPosX += CharInfo.XDist;
   \   000000C4   0x8C60             LDRH     R0,[R4, #+34]
   \   000000C6   0x1830             ADDS     R0,R6,R0
   \   000000C8   0x8460             STRH     R0,[R4, #+34]
    117            }
    118          }
   \                     ??_GUI_SIF_DispChar_0: (+1)
   \   000000CA   0xB008             ADD      SP,SP,#+32
   \   000000CC   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    119          
    120          /*********************************************************************
    121          *
    122          *       GUI_SIF_GetCharDistX
    123          */

   \                                 In section .text, align 2, keep-with-next
    124          static int _GUI_SIF_GetCharDistX(U16P c) {
   \                     _GUI_SIF_GetCharDistX: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    125            const U8 * pCharInfo;
    126            U16 DistX = 0;
   \   00000004   0x2400             MOVS     R4,#+0
    127            pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c); /* Get pointer to char info data */
   \   00000006   0x4601             MOV      R1,R0
   \   00000008   0x....             LDR.N    R0,??DataTable3
   \   0000000A   0x6980             LDR      R0,[R0, #+24]
   \   0000000C   0x.... 0x....      BL       _GetpCharInfo
   \   00000010   0x9000             STR      R0,[SP, #+0]
    128            if (pCharInfo) {
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD005             BEQ.N    ??_GUI_SIF_GetCharDistX_0
    129              pCharInfo += 2 /* Skip XSize */;
   \   00000016   0x1C80             ADDS     R0,R0,#+2
   \   00000018   0x9000             STR      R0,[SP, #+0]
    130              DistX = GUI__Read16(&pCharInfo);
   \   0000001A   0xA800             ADD      R0,SP,#+0
   \   0000001C   0x.... 0x....      BL       GUI__Read16
   \   00000020   0x4604             MOV      R4,R0
    131            }
    132            return DistX;
   \                     ??_GUI_SIF_GetCharDistX_0: (+1)
   \   00000022   0x4620             MOV      R0,R4
   \   00000024   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    133          }
    134          
    135          /*********************************************************************
    136          *
    137          *       GUI_SIF_GetFontInfo
    138          */

   \                                 In section .text, align 2, keep-with-next
    139          static void _GUI_SIF_GetFontInfo(const GUI_FONT GUI_UNI_PTR * pFont, GUI_FONTINFO * pfi) {
   \                     _GUI_SIF_GetFontInfo: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x460C             MOV      R4,R1
    140            const U8 * pData;
    141            pData = (const U8 *)pFont->p.pFontData + 4 /* Skip XSize and XDist */;
   \   00000006   0x6980             LDR      R0,[R0, #+24]
   \   00000008   0x1D00             ADDS     R0,R0,#+4
   \   0000000A   0x9000             STR      R0,[SP, #+0]
    142            pfi->Baseline = GUI__Read16(&pData);
   \   0000000C   0xA800             ADD      R0,SP,#+0
   \   0000000E   0x.... 0x....      BL       GUI__Read16
   \   00000012   0x70A0             STRB     R0,[R4, #+2]
    143            pfi->LHeight  = GUI__Read16(&pData);
   \   00000014   0xA800             ADD      R0,SP,#+0
   \   00000016   0x.... 0x....      BL       GUI__Read16
   \   0000001A   0x70E0             STRB     R0,[R4, #+3]
    144            pfi->CHeight  = GUI__Read16(&pData);
   \   0000001C   0xA800             ADD      R0,SP,#+0
   \   0000001E   0x.... 0x....      BL       GUI__Read16
   \   00000022   0x7120             STRB     R0,[R4, #+4]
    145            pfi->Flags    = GUI_FONTINFO_FLAG_PROP;
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x8020             STRH     R0,[R4, #+0]
    146          }
   \   00000028   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    147          
    148          /*********************************************************************
    149          *
    150          *       GUI_SIF_IsInFont
    151          */

   \                                 In section .text, align 2, keep-with-next
    152          static char _GUI_SIF_IsInFont(const GUI_FONT GUI_UNI_PTR * pFont, U16 c) {
   \                     _GUI_SIF_IsInFont: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    153            const U8 * pCharInfo;
    154            GUI_USE_PARA(pFont);
    155            pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c);
    156            return (pCharInfo) ? 1 : 0;
   \   00000002   0x....             LDR.N    R0,??DataTable3
   \   00000004   0x6980             LDR      R0,[R0, #+24]
   \   00000006   0x.... 0x....      BL       _GetpCharInfo
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD001             BEQ.N    ??_GUI_SIF_IsInFont_0
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0xBD02             POP      {R1,PC}
   \                     ??_GUI_SIF_IsInFont_0: (+1)
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xBD02             POP      {R1,PC}          ;; return
    157          }
    158          
    159          /*********************************************************************
    160          *
    161          *       GUI_SIF_TYPE_PROP
    162          */

   \                                 In section .rodata, align 4, keep-with-next
    163          const tGUI_SIF_APIList GUI_SIF_APIList_Prop = {
   \                     GUI_SIF_APIList_Prop:
   \   00000000   0x........         DC32 _GUI_SIF_DispChar, _GUI_SIF_GetCharDistX, _GUI_SIF_GetFontInfo
   \              0x........   
   \              0x........   
   \   0000000C   0x........         DC32 _GUI_SIF_IsInFont

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     GUI_Context
    164            _GUI_SIF_DispChar,
    165            _GUI_SIF_GetCharDistX,
    166            _GUI_SIF_GetFontInfo,
    167            _GUI_SIF_IsInFont
    168          };

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      64   _GUI_SIF_DispChar
        64   -> GUI_GetBkColor
        64   -> GUI_GetColor
        64   -> GUI_SetColor
        64   -> GUI__Read16
        64   -> GUI__Read32
        64   -> LCD_DrawBitmap
        64   -> LCD_FillRect
        64   -> LCD_SetDrawMode
        64   -> _GetpCharInfo
      16   _GUI_SIF_GetCharDistX
        16   -> GUI__Read16
        16   -> _GetpCharInfo
      16   _GUI_SIF_GetFontInfo
        16   -> GUI__Read16
       8   _GUI_SIF_IsInFont
         8   -> _GetpCharInfo
       8   _GetNumCharAreas
         8   -> GUI__Read16
      24   _GetpCharInfo
        24   -> GUI__Read16
        24   -> _GetNumCharAreas


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
      16  GUI_SIF_APIList_Prop
     208  _GUI_SIF_DispChar
      38  _GUI_SIF_GetCharDistX
      42  _GUI_SIF_GetFontInfo
      22  _GUI_SIF_IsInFont
      18  _GetNumCharAreas
      82  _GetpCharInfo

 
  16 bytes in section .rodata
 414 bytes in section .text
 
 414 bytes of CODE  memory
  16 bytes of CONST memory

Errors: none
Warnings: none
