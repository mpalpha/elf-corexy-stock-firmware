###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:12
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\EDITDec.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\EDITDec.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\EDITDec.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\EDITDec.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\EDITDec.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : EditDec
     16          Purpose     : Edit decimal values
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <string.h>
     21          
     22          #include "EDIT.h"
     23          #include "GUIDebug.h"
     24          #include "GUI_Protected.h"
     25          #include "EDIT_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          
     30          /*********************************************************************
     31          *
     32          *        Defaults for config switches
     33          *
     34          **********************************************************************
     35          */
     36          #ifndef EDIT_DEC_DIGITONLY
     37            #define EDIT_DEC_DIGITONLY     0
     38          #endif
     39          
     40          
     41          /*********************************************************************
     42          *
     43          *        static Helpers
     44          *
     45          **********************************************************************
     46          */
     47          /*********************************************************************
     48          *
     49          *       _DecChar2Int
     50          */

   \                                 In section .text, align 2, keep-with-next
     51          static int _DecChar2Int(int Char) {
     52            if ((Char >= '0') && (Char <= '9'))
   \                     _DecChar2Int: (+1)
   \   00000000   0xF1A0 0x0130      SUB      R1,R0,#+48
   \   00000004   0x290A             CMP      R1,#+10
   \   00000006   0xD201             BCS.N    ??_DecChar2Int_0
     53              return Char - '0';
   \   00000008   0x3830             SUBS     R0,R0,#+48
   \   0000000A   0x4770             BX       LR
     54            return -1;
   \                     ??_DecChar2Int_0: (+1)
   \   0000000C   0xF04F 0x30FF      MOV      R0,#-1
   \   00000010   0x4770             BX       LR               ;; return
     55          }
     56          
     57          /*********************************************************************
     58          *
     59          *       _UpdateBuffer
     60          */

   \                                 In section .text, align 2, keep-with-next
     61          static void _UpdateBuffer(EDIT_Handle hObj) {
   \                     _UpdateBuffer: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     62            char * s;
     63            EDIT_Obj * pObj;
     64            pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
   \   00000002   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000006   0x4604             MOV      R4,R0
     65            s = (char*) GUI_ALLOC_h2p(pObj->hpText);
   \   00000008   0xF9B4 0x0028      LDRSH    R0,[R4, #+40]
   \   0000000C   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000010   0x9000             STR      R0,[SP, #+0]
     66            if (pObj->Flags == GUI_EDIT_SIGNED) {
   \   00000012   0xF104 0x0528      ADD      R5,R4,#+40
   \   00000016   0x6968             LDR      R0,[R5, #+20]
   \   00000018   0xF894 0x104A      LDRB     R1,[R4, #+74]
   \   0000001C   0x2901             CMP      R1,#+1
   \   0000001E   0xD10A             BNE.N    ??_UpdateBuffer_0
     67              I32 Result = GUI_AddSign(pObj->CurrentValue, &s);
   \   00000020   0xA900             ADD      R1,SP,#+0
   \   00000022   0x.... 0x....      BL       GUI_AddSign
     68              GUI_AddDecShift(Result, pObj->MaxLen - 1, pObj->NumDecs, &s);
   \   00000026   0xAB00             ADD      R3,SP,#+0
   \   00000028   0x7C2A             LDRB     R2,[R5, #+16]
   \   0000002A   0x8869             LDRH     R1,[R5, #+2]
   \   0000002C   0x1E49             SUBS     R1,R1,#+1
   \   0000002E   0xB2C9             UXTB     R1,R1
   \   00000030   0x.... 0x....      BL       GUI_AddDecShift
   \   00000034   0xBD31             POP      {R0,R4,R5,PC}
     69            } else {
     70              GUI_AddDecShift(pObj->CurrentValue, pObj->MaxLen, pObj->NumDecs, &s);
   \                     ??_UpdateBuffer_0: (+1)
   \   00000036   0xAB00             ADD      R3,SP,#+0
   \   00000038   0x7C2A             LDRB     R2,[R5, #+16]
   \   0000003A   0x8869             LDRH     R1,[R5, #+2]
   \   0000003C   0xB2C9             UXTB     R1,R1
   \   0000003E   0x.... 0x....      BL       GUI_AddDecShift
     71            }
     72          }
   \   00000042   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     73          
     74          /*********************************************************************
     75          *
     76          *       _EditDec
     77          */

   \                                 In section .text, align 2, keep-with-next
     78          static void _EditDec(int Digit, EDIT_Obj* pObj, EDIT_Handle hObj) {
   \                     _EditDec: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4616             MOV      R6,R2
     79            I32 Result = 0;
   \   0000000A   0x2700             MOVS     R7,#+0
     80            int i, Pos = 0;
   \   0000000C   0x46B8             MOV      R8,R7
     81            char * s = (char*) GUI_ALLOC_h2p(pObj->hpText);
   \   0000000E   0xF9B5 0x0028      LDRSH    R0,[R5, #+40]
   \   00000012   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000016   0x4681             MOV      R9,R0
     82            for (i = 0; i < pObj->MaxLen; i++) {
   \   00000018   0x46BA             MOV      R10,R7
   \   0000001A   0xE013             B.N      ??_EditDec_0
     83              int Index = pObj->MaxLen - i - 1;
     84              if (Index == pObj->CursorPos) {
     85                Result += GUI_Pow10[Pos++] * Digit;
     86              } else {
     87                char c = *(s + Index);
   \                     ??_EditDec_1: (+1)
   \   0000001C   0xF910 0xB009      LDRSB    R11,[R0, R9]
     88                int Value = _DecChar2Int(c);
   \   00000020   0x4658             MOV      R0,R11
   \   00000022   0x.... 0x....      BL       _DecChar2Int
     89                if (Value >= 0) {
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD406             BMI.N    ??_EditDec_2
     90                  Result += GUI_Pow10[Pos++] * Value;
   \   0000002A   0x....             LDR.N    R1,??DataTable1
   \   0000002C   0xF851 0x1028      LDR      R1,[R1, R8, LSL #+2]
   \   00000030   0xFB00 0x7701      MLA      R7,R0,R1,R7
   \   00000034   0xF108 0x0801      ADD      R8,R8,#+1
     91                }
     92                if (c == '-') {
   \                     ??_EditDec_2: (+1)
   \   00000038   0xF1BB 0x0F2D      CMP      R11,#+45
   \   0000003C   0xD100             BNE.N    ??_EditDec_3
     93                  Result *= -1;
   \   0000003E   0x427F             RSBS     R7,R7,#+0
     94                }
     95              }
   \                     ??_EditDec_3: (+1)
   \   00000040   0xF10A 0x0A01      ADD      R10,R10,#+1
   \                     ??_EditDec_0: (+1)
   \   00000044   0xF9B5 0x002A      LDRSH    R0,[R5, #+42]
   \   00000048   0x4582             CMP      R10,R0
   \   0000004A   0xDA0D             BGE.N    ??_EditDec_4
   \   0000004C   0xEBA0 0x000A      SUB      R0,R0,R10
   \   00000050   0x1E40             SUBS     R0,R0,#+1
   \   00000052   0x6C29             LDR      R1,[R5, #+64]
   \   00000054   0x4288             CMP      R0,R1
   \   00000056   0xD1E1             BNE.N    ??_EditDec_1
   \   00000058   0x....             LDR.N    R0,??DataTable1
   \   0000005A   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   0000005E   0xFB04 0x7700      MLA      R7,R4,R0,R7
   \   00000062   0xF108 0x0801      ADD      R8,R8,#+1
   \   00000066   0xE7EB             B.N      ??_EditDec_3
     96            }
     97            EDIT_SetValue(hObj, Result);
   \                     ??_EditDec_4: (+1)
   \   00000068   0x4639             MOV      R1,R7
   \   0000006A   0x4630             MOV      R0,R6
   \   0000006C   0xE8BD 0x4FF4      POP      {R2,R4-R11,LR}
   \   00000070   0x.... 0x....      B.W      EDIT_SetValue
     98          }
     99          
    100          /*********************************************************************
    101          *
    102          *       EDIT_DEC_DIGITONLY
    103          */
    104          #if EDIT_DEC_DIGITONLY
    105          static int GetCurrentDigit(EDIT_Obj* pObj) {
    106            return _DecChar2Int(EDIT__GetCurrentChar(pObj));
    107          }
    108          #endif
    109          
    110          /*********************************************************************
    111          *
    112          *       _MakePositive
    113          */

   \                                 In section .text, align 2, keep-with-next
    114          static void _MakePositive(EDIT_Obj* pObj, EDIT_Handle hObj) {
   \                     _MakePositive: (+1)
   \   00000000   0x460A             MOV      R2,R1
    115            if ((I32)pObj->CurrentValue < 0) {
   \   00000002   0x6BC0             LDR      R0,[R0, #+60]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD503             BPL.N    ??_MakePositive_0
    116              EDIT_SetValue(hObj, (I32)pObj->CurrentValue * -1);
   \   00000008   0x4241             RSBS     R1,R0,#+0
   \   0000000A   0x4610             MOV      R0,R2
   \   0000000C   0x.... 0x....      B.W      EDIT_SetValue
    117            }
    118          }
   \                     ??_MakePositive_0: (+1)
   \   00000010   0x4770             BX       LR               ;; return
    119          
    120          /*********************************************************************
    121          *
    122          *       _MakeNegative
    123          */

   \                                 In section .text, align 2, keep-with-next
    124          static void _MakeNegative(EDIT_Obj* pObj, EDIT_Handle hObj) {
   \                     _MakeNegative: (+1)
   \   00000000   0x460A             MOV      R2,R1
    125            if ((I32)pObj->CurrentValue > 0) {
   \   00000002   0x6BC0             LDR      R0,[R0, #+60]
   \   00000004   0x2801             CMP      R0,#+1
   \   00000006   0xDB03             BLT.N    ??_MakeNegative_0
    126              EDIT_SetValue(hObj, (I32)pObj->CurrentValue * -1);
   \   00000008   0x4241             RSBS     R1,R0,#+0
   \   0000000A   0x4610             MOV      R0,R2
   \   0000000C   0x.... 0x....      B.W      EDIT_SetValue
    127            }
    128          }
   \                     ??_MakeNegative_0: (+1)
   \   00000010   0x4770             BX       LR               ;; return
    129          
    130          /*********************************************************************
    131          *
    132          *       _SwapSign
    133          */

   \                                 In section .text, align 2, keep-with-next
    134          static void _SwapSign(EDIT_Obj* pObj, EDIT_Handle hObj) {
    135            if ((I32)pObj->CurrentValue > 0)
   \                     _SwapSign: (+1)
   \   00000000   0x6BC2             LDR      R2,[R0, #+60]
   \   00000002   0x2A01             CMP      R2,#+1
   \   00000004   0xDB00             BLT.N    ??_SwapSign_0
    136              _MakeNegative(pObj, hObj);
   \   00000006   0x....             B.N      _MakeNegative
    137            else
    138              _MakePositive(pObj, hObj);
   \                     ??_SwapSign_0: (+1)
   \   00000008   0x....             B.N      _MakePositive
    139          }
    140          
    141          /*********************************************************************
    142          *
    143          *       _IncrementCursor
    144          */

   \                                 In section .text, align 2, keep-with-next
    145          static void _IncrementCursor(EDIT_Obj* pObj) {
   \                     _IncrementCursor: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    146            EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
   \   00000004   0x6C20             LDR      R0,[R4, #+64]
   \   00000006   0x1C41             ADDS     R1,R0,#+1
   \   00000008   0x4620             MOV      R0,R4
   \   0000000A   0x.... 0x....      BL       EDIT__SetCursorPos
    147            if (EDIT__GetCurrentChar(pObj) == '.') {
   \   0000000E   0x4620             MOV      R0,R4
   \   00000010   0x.... 0x....      BL       EDIT__GetCurrentChar
   \   00000014   0x282E             CMP      R0,#+46
   \   00000016   0xD111             BNE.N    ??_IncrementCursor_0
    148              if (pObj->CursorPos < (pObj->MaxLen - 1)) {
   \   00000018   0x6C20             LDR      R0,[R4, #+64]
   \   0000001A   0xF9B4 0x102A      LDRSH    R1,[R4, #+42]
   \   0000001E   0x1E49             SUBS     R1,R1,#+1
   \   00000020   0x4288             CMP      R0,R1
   \   00000022   0xDA05             BGE.N    ??_IncrementCursor_1
    149                EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
   \   00000024   0x1C41             ADDS     R1,R0,#+1
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0xE8BD 0x4010      POP      {R4,LR}
   \   0000002C   0x.... 0x....      B.W      EDIT__SetCursorPos
    150              } else {
    151                EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
   \                     ??_IncrementCursor_1: (+1)
   \   00000030   0x1E41             SUBS     R1,R0,#+1
   \   00000032   0x4620             MOV      R0,R4
   \   00000034   0xE8BD 0x4010      POP      {R4,LR}
   \   00000038   0x.... 0x....      B.W      EDIT__SetCursorPos
    152              }
    153            }
    154          }
   \                     ??_IncrementCursor_0: (+1)
   \   0000003C   0xBD10             POP      {R4,PC}          ;; return
    155          
    156          /*********************************************************************
    157          *
    158          *       _AddPosition
    159          */
    160          #if !EDIT_DEC_DIGITONLY

   \                                 In section .text, align 2, keep-with-next
    161          static void _AddPosition(EDIT_Obj* pObj, EDIT_Handle hObj, int Sign) {
   \                     _AddPosition: (+1)
   \   00000000   0xB418             PUSH     {R3,R4}
   \   00000002   0x4603             MOV      R3,R0
   \   00000004   0x4608             MOV      R0,R1
    162            int Pos;
    163            I32 v;
    164            v = Sign;
    165            Pos = pObj->MaxLen - pObj->CursorPos-1;
   \   00000006   0xF9B3 0x102A      LDRSH    R1,[R3, #+42]
   \   0000000A   0x6C1C             LDR      R4,[R3, #+64]
   \   0000000C   0x1B09             SUBS     R1,R1,R4
   \   0000000E   0x1E49             SUBS     R1,R1,#+1
   \   00000010   0xF103 0x042A      ADD      R4,R3,#+42
   \   00000014   0x7BA4             LDRB     R4,[R4, #+14]
   \   00000016   0x2C00             CMP      R4,#+0
   \   00000018   0xD006             BEQ.N    ??_AddPosition_0
   \   0000001A   0x428C             CMP      R4,R1
   \   0000001C   0xDA04             BGE.N    ??_AddPosition_0
    166            if (pObj->NumDecs && (Pos > pObj->NumDecs)) {
    167              Pos--;
   \   0000001E   0x1E49             SUBS     R1,R1,#+1
   \   00000020   0xE002             B.N      ??_AddPosition_0
    168            }
    169            while (Pos--) {
    170              v *= 10;
   \                     ??_AddPosition_1: (+1)
   \   00000022   0xEB02 0x0482      ADD      R4,R2,R2, LSL #+2
   \   00000026   0x0062             LSLS     R2,R4,#+1
    171            }
   \                     ??_AddPosition_0: (+1)
   \   00000028   0x460C             MOV      R4,R1
   \   0000002A   0x1E61             SUBS     R1,R4,#+1
   \   0000002C   0x2C00             CMP      R4,#+0
   \   0000002E   0xD1F8             BNE.N    ??_AddPosition_1
    172            EDIT_SetValue(hObj, (I32)pObj->CurrentValue + v);
   \   00000030   0x6BD9             LDR      R1,[R3, #+60]
   \   00000032   0x1851             ADDS     R1,R2,R1
   \   00000034   0xBC14             POP      {R2,R4}
   \   00000036   0x.... 0x....      B.W      EDIT_SetValue
    173          }
    174          #endif
    175          
    176          /*********************************************************************
    177          *
    178          *             Handle input
    179          *
    180          **********************************************************************
    181          */
    182          /*********************************************************************
    183          *
    184          *       _AddKeyDec
    185          */

   \                                 In section .text, align 2, keep-with-next
    186          static void _AddKeyDec(EDIT_Handle hObj, int Key) {
   \                     _AddKeyDec: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460E             MOV      R6,R1
    187            char c;
    188            EDIT_Obj * pObj;
    189            pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
   \   00000006   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000000A   0x0005             MOVS     R5,R0
    190            if (pObj) {
   \   0000000C   0xD074             BEQ.N    ??_AddKeyDec_0
    191              switch (Key) {
   \   0000000E   0x4630             MOV      R0,R6
   \   00000010   0x2810             CMP      R0,#+16
   \   00000012   0xD046             BEQ.N    ??_AddKeyDec_1
   \   00000014   0x2811             CMP      R0,#+17
   \   00000016   0xD01E             BEQ.N    ??_AddKeyDec_2
   \   00000018   0x2812             CMP      R0,#+18
   \   0000001A   0xD03E             BEQ.N    ??_AddKeyDec_3
   \   0000001C   0x2813             CMP      R0,#+19
   \   0000001E   0xD028             BEQ.N    ??_AddKeyDec_4
   \   00000020   0x282B             CMP      R0,#+43
   \   00000022   0xD002             BEQ.N    ??_AddKeyDec_5
   \   00000024   0x282D             CMP      R0,#+45
   \   00000026   0xD00B             BEQ.N    ??_AddKeyDec_6
   \   00000028   0xE052             B.N      ??_AddKeyDec_7
    192                case '+':
    193                  if (pObj->CursorPos == 0) {
   \                     ??_AddKeyDec_5: (+1)
   \   0000002A   0x6C28             LDR      R0,[R5, #+64]
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD163             BNE.N    ??_AddKeyDec_0
    194                    _MakePositive(pObj, hObj);
   \   00000030   0x4621             MOV      R1,R4
   \   00000032   0x4628             MOV      R0,R5
   \   00000034   0x.... 0x....      BL       _MakePositive
    195                    _IncrementCursor(pObj);
   \   00000038   0x4628             MOV      R0,R5
   \   0000003A   0x.... 0x....      BL       _IncrementCursor
   \   0000003E   0xE05B             B.N      ??_AddKeyDec_0
    196                  }
    197                  break;
    198                case '-':
    199                  if (pObj->CursorPos == 0) {
   \                     ??_AddKeyDec_6: (+1)
   \   00000040   0x6C28             LDR      R0,[R5, #+64]
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD158             BNE.N    ??_AddKeyDec_0
    200                    _MakeNegative(pObj, hObj);
   \   00000046   0x4621             MOV      R1,R4
   \   00000048   0x4628             MOV      R0,R5
   \   0000004A   0x.... 0x....      BL       _MakeNegative
    201                    _IncrementCursor(pObj);
   \   0000004E   0x4628             MOV      R0,R5
   \   00000050   0x.... 0x....      BL       _IncrementCursor
   \   00000054   0xE050             B.N      ??_AddKeyDec_0
    202                  }
    203                  break;
    204                #if EDIT_DEC_DIGITONLY
    205                  case GUI_KEY_UP:
    206                    c = EDIT__GetCurrentChar(pObj);
    207                    if ((c == '-') || (c == '+')) {
    208                      _SwapSign(pObj, hObj);
    209                    } else {
    210                      int Digit = GetCurrentDigit(pObj) + 1;
    211                      if (Digit > 9)
    212                        Digit = 0;
    213                      _EditDec(Digit, pObj, hObj);
    214                    }
    215                    break;
    216                  case GUI_KEY_DOWN:
    217                    c = EDIT__GetCurrentChar(pObj);
    218                    if ((c == '-') || (c == '+')) {
    219                      _SwapSign(pObj, hObj);
    220                    } else {
    221                      int Digit = GetCurrentDigit(pObj) - 1;
    222                      if (Digit < 0)
    223                        Digit = 9;
    224                      _EditDec(Digit, pObj, hObj);
    225                    }
    226                    break;
    227                #else
    228                  case GUI_KEY_UP:
    229                    c = EDIT__GetCurrentChar(pObj);
   \                     ??_AddKeyDec_2: (+1)
   \   00000056   0x4628             MOV      R0,R5
   \   00000058   0x.... 0x....      BL       EDIT__GetCurrentChar
   \   0000005C   0xB240             SXTB     R0,R0
    230                    if ((c == '-') || (c == '+')) {
   \   0000005E   0x282D             CMP      R0,#+45
   \   00000060   0xD00F             BEQ.N    ??_AddKeyDec_8
   \   00000062   0x282B             CMP      R0,#+43
   \   00000064   0xD00D             BEQ.N    ??_AddKeyDec_8
    231                      _SwapSign(pObj, hObj);
    232                    } else {
    233                      _AddPosition(pObj, hObj, 1);
   \   00000066   0x2201             MOVS     R2,#+1
   \   00000068   0x4621             MOV      R1,R4
   \   0000006A   0x4628             MOV      R0,R5
   \   0000006C   0x.... 0x....      BL       _AddPosition
   \   00000070   0xE042             B.N      ??_AddKeyDec_0
    234                    }
    235                    break;
    236                  case GUI_KEY_DOWN:
    237                    c = EDIT__GetCurrentChar(pObj);
   \                     ??_AddKeyDec_4: (+1)
   \   00000072   0x4628             MOV      R0,R5
   \   00000074   0x.... 0x....      BL       EDIT__GetCurrentChar
   \   00000078   0xB240             SXTB     R0,R0
    238                    if ((c == '-') || (c == '+')) {
   \   0000007A   0x282D             CMP      R0,#+45
   \   0000007C   0xD001             BEQ.N    ??_AddKeyDec_8
   \   0000007E   0x282B             CMP      R0,#+43
   \   00000080   0xD104             BNE.N    ??_AddKeyDec_9
    239                      _SwapSign(pObj, hObj);
   \                     ??_AddKeyDec_8: (+1)
   \   00000082   0x4621             MOV      R1,R4
   \   00000084   0x4628             MOV      R0,R5
   \   00000086   0x.... 0x....      BL       _SwapSign
   \   0000008A   0xE035             B.N      ??_AddKeyDec_0
    240                    } else {
    241                      _AddPosition(pObj, hObj, -1);
   \                     ??_AddKeyDec_9: (+1)
   \   0000008C   0xF04F 0x32FF      MOV      R2,#-1
   \   00000090   0x4621             MOV      R1,R4
   \   00000092   0x4628             MOV      R0,R5
   \   00000094   0x.... 0x....      BL       _AddPosition
   \   00000098   0xE02E             B.N      ??_AddKeyDec_0
    242                    }
    243                    break;
    244                #endif
    245                case GUI_KEY_RIGHT:
    246                  _IncrementCursor(pObj);
   \                     ??_AddKeyDec_3: (+1)
   \   0000009A   0x4628             MOV      R0,R5
   \   0000009C   0x.... 0x....      BL       _IncrementCursor
    247                  break;
   \   000000A0   0xE02A             B.N      ??_AddKeyDec_0
    248                case GUI_KEY_LEFT:
    249                  EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
   \                     ??_AddKeyDec_1: (+1)
   \   000000A2   0x6C28             LDR      R0,[R5, #+64]
   \   000000A4   0x1E41             SUBS     R1,R0,#+1
   \   000000A6   0x4628             MOV      R0,R5
   \   000000A8   0x.... 0x....      BL       EDIT__SetCursorPos
    250                  if (EDIT__GetCurrentChar(pObj) == '.') {
   \   000000AC   0x4628             MOV      R0,R5
   \   000000AE   0x.... 0x....      BL       EDIT__GetCurrentChar
   \   000000B2   0x282E             CMP      R0,#+46
   \   000000B4   0xD120             BNE.N    ??_AddKeyDec_0
    251                    if (pObj->CursorPos > 0) {
   \   000000B6   0x6C28             LDR      R0,[R5, #+64]
   \   000000B8   0x2801             CMP      R0,#+1
   \   000000BA   0xDB04             BLT.N    ??_AddKeyDec_10
    252                      EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
   \   000000BC   0x1E41             SUBS     R1,R0,#+1
   \   000000BE   0x4628             MOV      R0,R5
   \   000000C0   0x.... 0x....      BL       EDIT__SetCursorPos
   \   000000C4   0xE018             B.N      ??_AddKeyDec_0
    253                    } else {
    254                      EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
   \                     ??_AddKeyDec_10: (+1)
   \   000000C6   0x1C41             ADDS     R1,R0,#+1
   \   000000C8   0x4628             MOV      R0,R5
   \   000000CA   0x.... 0x....      BL       EDIT__SetCursorPos
   \   000000CE   0xE013             B.N      ??_AddKeyDec_0
    255                    }
    256                  }
    257                  break;
    258                default:
    259                  {
    260                    char c = EDIT__GetCurrentChar(pObj);
   \                     ??_AddKeyDec_7: (+1)
   \   000000D0   0x4628             MOV      R0,R5
   \   000000D2   0x.... 0x....      BL       EDIT__GetCurrentChar
   \   000000D6   0xB240             SXTB     R0,R0
    261                    if ((c != '-') && (c != '+')) {
   \   000000D8   0x282D             CMP      R0,#+45
   \   000000DA   0xD00D             BEQ.N    ??_AddKeyDec_0
   \   000000DC   0x282B             CMP      R0,#+43
   \   000000DE   0xD00B             BEQ.N    ??_AddKeyDec_0
    262                      int Digit = _DecChar2Int(Key);
   \   000000E0   0x4630             MOV      R0,R6
   \   000000E2   0x.... 0x....      BL       _DecChar2Int
    263                      if (Digit >= 0) {
   \   000000E6   0x2800             CMP      R0,#+0
   \   000000E8   0xD406             BMI.N    ??_AddKeyDec_0
    264                        _EditDec(Digit, pObj, hObj);
   \   000000EA   0x4622             MOV      R2,R4
   \   000000EC   0x4629             MOV      R1,R5
   \   000000EE   0x.... 0x....      BL       _EditDec
    265                        _IncrementCursor(pObj);
   \   000000F2   0x4628             MOV      R0,R5
   \   000000F4   0x.... 0x....      BL       _IncrementCursor
    266                      }
    267                    }
    268                  }
    269                  break;
    270              }
    271            }
    272            _UpdateBuffer(hObj);
   \                     ??_AddKeyDec_0: (+1)
   \   000000F8   0x4620             MOV      R0,R4
   \   000000FA   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   000000FE   0x....             B.N      _UpdateBuffer
    273          }
    274          
    275          /*********************************************************************
    276          *
    277          *             Exported routines
    278          *
    279          **********************************************************************
    280          */
    281          /*********************************************************************
    282          *
    283          *       EDIT_SetDecMode
    284          */

   \                                 In section .text, align 2, keep-with-next
    285          void EDIT_SetDecMode(EDIT_Handle hEdit, I32 Value, I32 Min, I32 Max, int Shift, U8 Flags) {
   \                     EDIT_SetDecMode: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x4689             MOV      R9,R1
   \   00000008   0x4617             MOV      R7,R2
   \   0000000A   0x4698             MOV      R8,R3
    286            EDIT_Obj* pObj;
    287            WM_LOCK();
    288            if (hEdit) {
   \   0000000C   0x2C00             CMP      R4,#+0
   \   0000000E   0xD027             BEQ.N    ??EDIT_SetDecMode_0
    289              pObj = EDIT_H2P(hEdit);
   \   00000010   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000014   0x4605             MOV      R5,R0
    290              pObj->pfAddKeyEx    = _AddKeyDec;
   \   00000016   0xF105 0x0630      ADD      R6,R5,#+48
   \   0000001A   0x....             LDR.N    R0,??DataTable1_1
   \   0000001C   0x61F0             STR      R0,[R6, #+28]
    291              pObj->pfUpdateBuffer= _UpdateBuffer;
   \   0000001E   0x....             LDR.N    R0,??DataTable1_2
   \   00000020   0x6230             STR      R0,[R6, #+32]
    292              pObj->CurrentValue  = Value;
   \   00000022   0xF8C6 0x900C      STR      R9,[R6, #+12]
    293              pObj->CursorPos     = 0;
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x6130             STR      R0,[R6, #+16]
    294              pObj->Min           = Min;
   \   0000002A   0x632F             STR      R7,[R5, #+48]
    295              pObj->Max           = Max;
   \   0000002C   0xF8C6 0x8004      STR      R8,[R6, #+4]
    296              pObj->NumDecs       = Shift;
   \   00000030   0x9808             LDR      R0,[SP, #+32]
   \   00000032   0x7230             STRB     R0,[R6, #+8]
    297              pObj->Flags         = Flags;
   \   00000034   0x9809             LDR      R0,[SP, #+36]
   \   00000036   0x76B0             STRB     R0,[R6, #+26]
    298              pObj->EditMode      = GUI_EDIT_MODE_OVERWRITE;
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0x7630             STRB     R0,[R6, #+24]
    299              _UpdateBuffer(hEdit);
   \   0000003C   0x4620             MOV      R0,R4
   \   0000003E   0x.... 0x....      BL       _UpdateBuffer
    300              if (EDIT__GetCurrentChar(pObj) == '.') {
   \   00000042   0x4628             MOV      R0,R5
   \   00000044   0x.... 0x....      BL       EDIT__GetCurrentChar
   \   00000048   0x282E             CMP      R0,#+46
   \   0000004A   0xD104             BNE.N    ??EDIT_SetDecMode_1
    301                EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
   \   0000004C   0x6930             LDR      R0,[R6, #+16]
   \   0000004E   0x1C41             ADDS     R1,R0,#+1
   \   00000050   0x4628             MOV      R0,R5
   \   00000052   0x.... 0x....      BL       EDIT__SetCursorPos
    302              }
    303              WM_Invalidate(hEdit);
   \                     ??EDIT_SetDecMode_1: (+1)
   \   00000056   0x4620             MOV      R0,R4
   \   00000058   0xE8BD 0x43F2      POP      {R1,R4-R9,LR}
   \   0000005C   0x.... 0x....      B.W      WM_InvalidateWindow
    304            }
    305            WM_UNLOCK();
    306          }
   \                     ??EDIT_SetDecMode_0: (+1)
   \   00000060   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     GUI_Pow10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     _AddKeyDec

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     _UpdateBuffer
    307          
    308          #else  /* avoid empty object files */
    309          
    310          void EditDec_C(void);
    311          void EditDec_C(void){}
    312          
    313          #endif /* GUI_WINSUPPORT */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   EDIT_SetDecMode
        32   -> EDIT__GetCurrentChar
        32   -> EDIT__SetCursorPos
        32   -> GUI_ALLOC_h2p
         0   -> WM_InvalidateWindow
        32   -> _UpdateBuffer
      16   _AddKeyDec
        16   -> EDIT__GetCurrentChar
        16   -> EDIT__SetCursorPos
        16   -> GUI_ALLOC_h2p
        16   -> _AddPosition
        16   -> _DecChar2Int
        16   -> _EditDec
        16   -> _IncrementCursor
        16   -> _MakeNegative
        16   -> _MakePositive
        16   -> _SwapSign
         0   -> _UpdateBuffer
       8   _AddPosition
         0   -> EDIT_SetValue
       0   _DecChar2Int
      40   _EditDec
         0   -> EDIT_SetValue
        40   -> GUI_ALLOC_h2p
        40   -> _DecChar2Int
       8   _IncrementCursor
         8   -> EDIT__GetCurrentChar
         0   -> EDIT__SetCursorPos
         8   -> EDIT__SetCursorPos
       0   _MakeNegative
         0   -> EDIT_SetValue
       0   _MakePositive
         0   -> EDIT_SetValue
       0   _SwapSign
         0   -> _MakeNegative
         0   -> _MakePositive
      16   _UpdateBuffer
        16   -> GUI_ALLOC_h2p
        16   -> GUI_AddDecShift
        16   -> GUI_AddSign


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
     100  EDIT_SetDecMode
     256  _AddKeyDec
      58  _AddPosition
      18  _DecChar2Int
     116  _EditDec
      62  _IncrementCursor
      18  _MakeNegative
      18  _MakePositive
      10  _SwapSign
      68  _UpdateBuffer

 
 736 bytes in section .text
 
 736 bytes of CODE memory

Errors: none
Warnings: none
