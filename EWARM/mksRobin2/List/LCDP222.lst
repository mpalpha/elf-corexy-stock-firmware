###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:00:43
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\ConvertColor\LCDP222.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\ConvertColor\LCDP222.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\LCDP222.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\LCDP222.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈıÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\ConvertColor\LCDP222.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : LCD222.C
     16          Purpose     : Color conversion routines for 222 mode
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "LCD_Protected.h"    /* inter modul definitions */
     21          
     22          /*********************************************************************
     23          *
     24          *       Public code, LCD_FIXEDPALETTE == 222, 64 colors
     25          *
     26          **********************************************************************
     27          */
     28          /*********************************************************************
     29          *
     30          *       LCD_Color2Index_222
     31          */

   \                                 In section .text, align 2, keep-with-next
     32          unsigned LCD_Color2Index_222(LCD_COLOR Color) {
     33            int r,g,b;
     34            r = ((Color&255)      +0x2a)/0x55;
     35            g = (((Color>>8)&255) +0x2a)/0x55;
     36            b = (((Color>>16)&255)+0x2a)/0x55;
     37            return r+(g<<2)+(b<<4);
   \                     LCD_Color2Index_222: (+1)
   \   00000000   0xB2C1             UXTB     R1,R0
   \   00000002   0x312A             ADDS     R1,R1,#+42
   \   00000004   0x2255             MOVS     R2,#+85
   \   00000006   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000000A   0xF3C0 0x2207      UBFX     R2,R0,#+8,#+8
   \   0000000E   0x322A             ADDS     R2,R2,#+42
   \   00000010   0x2355             MOVS     R3,#+85
   \   00000012   0xFBB2 0xF2F3      UDIV     R2,R2,R3
   \   00000016   0xEB01 0x0182      ADD      R1,R1,R2, LSL #+2
   \   0000001A   0xF3C0 0x4007      UBFX     R0,R0,#+16,#+8
   \   0000001E   0x302A             ADDS     R0,R0,#+42
   \   00000020   0x461A             MOV      R2,R3
   \   00000022   0xFBB0 0xF0F2      UDIV     R0,R0,R2
   \   00000026   0xEB01 0x1000      ADD      R0,R1,R0, LSL #+4
   \   0000002A   0x4770             BX       LR               ;; return
     38          }
     39          
     40          /*********************************************************************
     41          *
     42          *       LCD_Index2Color_222
     43          */

   \                                 In section .text, align 2, keep-with-next
     44          LCD_COLOR LCD_Index2Color_222(int Index) {
     45            U16P r,g,b;
     46            r = ((Index>>0)&3)*0x55;
     47            g = ((Index>>2)&3)*0x55;
     48            b = (Index>>4)    *0x55;
     49            return (((U32)b)<<16)|(g<<8)|r;
   \                     LCD_Index2Color_222: (+1)
   \   00000000   0x2155             MOVS     R1,#+85
   \   00000002   0x1102             ASRS     R2,R0,#+4
   \   00000004   0x434A             MULS     R2,R1,R2
   \   00000006   0xB292             UXTH     R2,R2
   \   00000008   0xF3C0 0x0381      UBFX     R3,R0,#+2,#+2
   \   0000000C   0x434B             MULS     R3,R1,R3
   \   0000000E   0x021B             LSLS     R3,R3,#+8
   \   00000010   0xEA43 0x4202      ORR      R2,R3,R2, LSL #+16
   \   00000014   0xF000 0x0003      AND      R0,R0,#0x3
   \   00000018   0x4348             MULS     R0,R1,R0
   \   0000001A   0x4310             ORRS     R0,R0,R2
   \   0000001C   0x4770             BX       LR               ;; return
     50          }
     51          
     52          /*********************************************************************
     53          *
     54          *       LCD_GetIndexMask_222
     55          */

   \                                 In section .text, align 2, keep-with-next
     56          unsigned LCD_GetIndexMask_222(void) {
     57            return 0x0003f;
   \                     LCD_GetIndexMask_222: (+1)
   \   00000000   0x203F             MOVS     R0,#+63
   \   00000002   0x4770             BX       LR               ;; return
     58          }
     59          
     60          /*********************************************************************
     61          *
     62          *       Public code, LCD_FIXEDPALETTE == 222, 64 colors, SWAP_RB
     63          *
     64          **********************************************************************
     65          */
     66          /*********************************************************************
     67          *
     68          *       LCD_Color2Index_M222
     69          */

   \                                 In section .text, align 2, keep-with-next
     70          unsigned LCD_Color2Index_M222(LCD_COLOR Color) {
     71            int r,g,b;
     72            r = ((Color&255)      +0x2a)/0x55;
     73            g = (((Color>>8)&255) +0x2a)/0x55;
     74            b = (((Color>>16)&255)+0x2a)/0x55;
     75            return b+(g<<2)+(r<<4);
   \                     LCD_Color2Index_M222: (+1)
   \   00000000   0xF3C0 0x4107      UBFX     R1,R0,#+16,#+8
   \   00000004   0x312A             ADDS     R1,R1,#+42
   \   00000006   0x2255             MOVS     R2,#+85
   \   00000008   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000000C   0xF3C0 0x2207      UBFX     R2,R0,#+8,#+8
   \   00000010   0x322A             ADDS     R2,R2,#+42
   \   00000012   0x2355             MOVS     R3,#+85
   \   00000014   0xFBB2 0xF2F3      UDIV     R2,R2,R3
   \   00000018   0xEB01 0x0182      ADD      R1,R1,R2, LSL #+2
   \   0000001C   0xB2C0             UXTB     R0,R0
   \   0000001E   0x302A             ADDS     R0,R0,#+42
   \   00000020   0x461A             MOV      R2,R3
   \   00000022   0xFBB0 0xF0F2      UDIV     R0,R0,R2
   \   00000026   0xEB01 0x1000      ADD      R0,R1,R0, LSL #+4
   \   0000002A   0x4770             BX       LR               ;; return
     76          }
     77          
     78          /*********************************************************************
     79          *
     80          *       LCD_Index2Color_M222
     81          */

   \                                 In section .text, align 2, keep-with-next
     82          LCD_COLOR LCD_Index2Color_M222(int Index) {
     83            U16P r,g,b;
     84            r = ((Index>>0)&3)*0x55;
     85            g = ((Index>>2)&3)*0x55;
     86            b = (Index>>4)    *0x55;
     87            return (((U32)r)<<16)|(g<<8)|b;
   \                     LCD_Index2Color_M222: (+1)
   \   00000000   0x2155             MOVS     R1,#+85
   \   00000002   0xF000 0x0203      AND      R2,R0,#0x3
   \   00000006   0x434A             MULS     R2,R1,R2
   \   00000008   0xF3C0 0x0381      UBFX     R3,R0,#+2,#+2
   \   0000000C   0x434B             MULS     R3,R1,R3
   \   0000000E   0x021B             LSLS     R3,R3,#+8
   \   00000010   0xEA43 0x4202      ORR      R2,R3,R2, LSL #+16
   \   00000014   0x1100             ASRS     R0,R0,#+4
   \   00000016   0x4348             MULS     R0,R1,R0
   \   00000018   0xB280             UXTH     R0,R0
   \   0000001A   0x4310             ORRS     R0,R0,R2
   \   0000001C   0x4770             BX       LR               ;; return
     88          }
     89          
     90          /*********************************************************************
     91          *
     92          *       LCD_GetIndexMask_M222
     93          */

   \                                 In section .text, align 2, keep-with-next
     94          unsigned LCD_GetIndexMask_M222(void) {
     95            return 0x003f;
   \                     LCD_GetIndexMask_M222: (+1)
   \   00000000   0x203F             MOVS     R0,#+63
   \   00000002   0x4770             BX       LR               ;; return
     96          }
     97          
     98          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   LCD_Color2Index_222
       0   LCD_Color2Index_M222
       0   LCD_GetIndexMask_222
       0   LCD_GetIndexMask_M222
       0   LCD_Index2Color_222
       0   LCD_Index2Color_M222


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      44  LCD_Color2Index_222
      44  LCD_Color2Index_M222
       4  LCD_GetIndexMask_222
       4  LCD_GetIndexMask_M222
      30  LCD_Index2Color_222
      30  LCD_Index2Color_M222

 
 156 bytes in section .text
 
 156 bytes of CODE memory

Errors: none
Warnings: none
