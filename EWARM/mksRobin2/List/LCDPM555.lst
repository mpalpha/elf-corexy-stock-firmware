###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:00:46
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\ConvertColor\LCDPM555.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\ConvertColor\LCDPM555.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\LCDPM555.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\LCDPM555.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\ConvertColor\LCDPM555.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : LCDM555.C
     16          Purpose     : Color conversion routines
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "LCD_Protected.h"    /* inter modul definitions */
     21          
     22          /*********************************************************************
     23          *
     24          *       Defines
     25          *
     26          **********************************************************************
     27          */
     28          
     29          #define B_BITS 5
     30          #define G_BITS 5
     31          #define R_BITS 5
     32          
     33          #define R_MASK ((1 << R_BITS) -1)
     34          #define G_MASK ((1 << G_BITS) -1)
     35          #define B_MASK ((1 << B_BITS) -1)
     36          
     37          /*********************************************************************
     38          *
     39          *       Public code,
     40          *
     41          *       LCD_FIXEDPALETTE == 555, 32768 colors, 0RRRRRGGGGGBBBBB
     42          *
     43          **********************************************************************
     44          */
     45          /*********************************************************************
     46          *
     47          *       LCD_Color2Index_M555
     48          */

   \                                 In section .text, align 2, keep-with-next
     49          unsigned LCD_Color2Index_M555(LCD_COLOR Color) {
     50            int r,g,b;
     51            r = (Color>> (8  - R_BITS)) & R_MASK;
     52            g = (Color>> (16 - G_BITS)) & G_MASK;
     53            b = (Color>> (24 - B_BITS)) & B_MASK;
     54            return b + (g << B_BITS) + (r << (G_BITS + B_BITS));
   \                     LCD_Color2Index_M555: (+1)
   \   00000000   0xF3C0 0x41C4      UBFX     R1,R0,#+19,#+5
   \   00000004   0xF3C0 0x22C4      UBFX     R2,R0,#+11,#+5
   \   00000008   0xEB01 0x1142      ADD      R1,R1,R2, LSL #+5
   \   0000000C   0xF3C0 0x00C4      UBFX     R0,R0,#+3,#+5
   \   00000010   0xEB01 0x2080      ADD      R0,R1,R0, LSL #+10
   \   00000014   0x4770             BX       LR               ;; return
     55          }
     56          
     57          /*********************************************************************
     58          *
     59          *       LCD_Index2Color_M555
     60          */

   \                                 In section .text, align 2, keep-with-next
     61          LCD_COLOR LCD_Index2Color_M555(int Index) {
     62            unsigned int r,g,b;
     63            /* Seperate the color masks */
     64            b = Index                                  & B_MASK;
     65            g = (Index >> B_BITS)                      & G_MASK;
     66            r = ((unsigned)Index >> (B_BITS + G_BITS)) & R_MASK;
     67            /* Convert the color masks */
     68            r = r * 255 / R_MASK;
     69            g = g * 255 / G_MASK;
     70            b = b * 255 / B_MASK;
     71            return r + (g<<8) + (((U32)b)<<16);
   \                     LCD_Index2Color_M555: (+1)
   \   00000000   0xF3C0 0x2184      UBFX     R1,R0,#+10,#+5
   \   00000004   0xEBC1 0x2101      RSB      R1,R1,R1, LSL #+8
   \   00000008   0x221F             MOVS     R2,#+31
   \   0000000A   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000000E   0xF3C0 0x1244      UBFX     R2,R0,#+5,#+5
   \   00000012   0xEBC2 0x2202      RSB      R2,R2,R2, LSL #+8
   \   00000016   0x231F             MOVS     R3,#+31
   \   00000018   0xFBB2 0xF2F3      UDIV     R2,R2,R3
   \   0000001C   0xEB01 0x2102      ADD      R1,R1,R2, LSL #+8
   \   00000020   0xF000 0x001F      AND      R0,R0,#0x1F
   \   00000024   0xEBC0 0x2000      RSB      R0,R0,R0, LSL #+8
   \   00000028   0x461A             MOV      R2,R3
   \   0000002A   0xFBB0 0xF0F2      UDIV     R0,R0,R2
   \   0000002E   0xEB01 0x4000      ADD      R0,R1,R0, LSL #+16
   \   00000032   0x4770             BX       LR               ;; return
     72          }
     73          
     74          /*********************************************************************
     75          *
     76          *       LCD_GetIndexMask_M555
     77          */

   \                                 In section .text, align 2, keep-with-next
     78          unsigned LCD_GetIndexMask_M555(void) {
     79            return 0x7fff;
   \                     LCD_GetIndexMask_M555: (+1)
   \   00000000   0xF647 0x70FF      MOVW     R0,#+32767
   \   00000004   0x4770             BX       LR               ;; return
     80          }
     81          
     82          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   LCD_Color2Index_M555
       0   LCD_GetIndexMask_M555
       0   LCD_Index2Color_M555


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      22  LCD_Color2Index_M555
       6  LCD_GetIndexMask_M555
      52  LCD_Index2Color_M555

 
 80 bytes in section .text
 
 80 bytes of CODE memory

Errors: none
Warnings: none
