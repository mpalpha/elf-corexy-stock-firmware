###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:00:50
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\LISTBOX_SetAutoScroll.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\LISTBOX_SetAutoScroll.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\LISTBOX_SetAutoScroll.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\LISTBOX_SetAutoScroll.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\LISTBOX_SetAutoScroll.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : LISTBOX_SetAutoScroll.c
     16          Purpose     : Implementation of LISTBOX_SetAutoScroll
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stdlib.h>
     21          #include <string.h>
     22          #include "GUI_ARRAY.h"
     23          #include "LISTBOX_Private.h"
     24          #include "SCROLLBAR.h"
     25          #include "GUIDebug.h"
     26          #include "GUI_Protected.h"
     27          #include "WM_Intern.h"
     28          
     29          #if GUI_WINSUPPORT
     30          
     31          /*********************************************************************
     32          *
     33          *       Exported routines:  Various methods
     34          *
     35          **********************************************************************
     36          */
     37          /*********************************************************************
     38          *
     39          *       LISTBOX_SetAutoScrollH
     40          */

   \                                 In section .text, align 2, keep-with-next
     41          void LISTBOX_SetAutoScrollH(LISTBOX_Handle hObj, int State) {
   \                     LISTBOX_SetAutoScrollH: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     42            if (hObj) {
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD014             BEQ.N    ??LISTBOX_SetAutoScrollH_0
     43              LISTBOX_Obj* pObj;
     44              char Flags;
     45              WM_LOCK();
     46              pObj = LISTBOX_H2P(hObj);
   \   0000000A   0x.... 0x....      BL       GUI_ALLOC_h2p
     47              Flags = pObj->Flags & (~LISTBOX_SF_AUTOSCROLLBAR_H);
   \   0000000E   0xF890 0x1074      LDRB     R1,[R0, #+116]
   \   00000012   0xF021 0x0201      BIC      R2,R1,#0x1
     48              if (State) {
   \   00000016   0x2D00             CMP      R5,#+0
   \   00000018   0xD001             BEQ.N    ??LISTBOX_SetAutoScrollH_1
     49                Flags |= LISTBOX_SF_AUTOSCROLLBAR_H;
   \   0000001A   0xF042 0x0201      ORR      R2,R2,#0x1
     50              }
     51              if (pObj->Flags != Flags) {
   \                     ??LISTBOX_SetAutoScrollH_1: (+1)
   \   0000001E   0x4613             MOV      R3,R2
   \   00000020   0xB25B             SXTB     R3,R3
   \   00000022   0x4299             CMP      R1,R3
   \   00000024   0xD006             BEQ.N    ??LISTBOX_SetAutoScrollH_0
     52                pObj->Flags = Flags;
   \   00000026   0xF880 0x2074      STRB     R2,[R0, #+116]
     53                LISTBOX_UpdateScrollers(hObj);
   \   0000002A   0x4620             MOV      R0,R4
   \   0000002C   0xE8BD 0x4032      POP      {R1,R4,R5,LR}
   \   00000030   0x.... 0x....      B.W      LISTBOX_UpdateScrollers
     54              }
     55              WM_UNLOCK();
     56            }
     57          }
   \                     ??LISTBOX_SetAutoScrollH_0: (+1)
   \   00000034   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     58          
     59          /*********************************************************************
     60          *
     61          *       LISTBOX_SetAutoScrollV
     62          */

   \                                 In section .text, align 2, keep-with-next
     63          void LISTBOX_SetAutoScrollV(LISTBOX_Handle hObj, int State) {
   \                     LISTBOX_SetAutoScrollV: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     64            if (hObj) {
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD014             BEQ.N    ??LISTBOX_SetAutoScrollV_0
     65              LISTBOX_Obj* pObj;
     66              char Flags;
     67              WM_LOCK();
     68              pObj = LISTBOX_H2P(hObj);
   \   0000000A   0x.... 0x....      BL       GUI_ALLOC_h2p
     69              Flags = pObj->Flags & (~LISTBOX_SF_AUTOSCROLLBAR_V);
   \   0000000E   0xF890 0x1074      LDRB     R1,[R0, #+116]
   \   00000012   0xF021 0x0202      BIC      R2,R1,#0x2
     70              if (State) {
   \   00000016   0x2D00             CMP      R5,#+0
   \   00000018   0xD001             BEQ.N    ??LISTBOX_SetAutoScrollV_1
     71                Flags |= LISTBOX_SF_AUTOSCROLLBAR_V;
   \   0000001A   0xF042 0x0202      ORR      R2,R2,#0x2
     72              }
     73              if (pObj->Flags != Flags) {
   \                     ??LISTBOX_SetAutoScrollV_1: (+1)
   \   0000001E   0x4613             MOV      R3,R2
   \   00000020   0xB25B             SXTB     R3,R3
   \   00000022   0x4299             CMP      R1,R3
   \   00000024   0xD006             BEQ.N    ??LISTBOX_SetAutoScrollV_0
     74                pObj->Flags = Flags;
   \   00000026   0xF880 0x2074      STRB     R2,[R0, #+116]
     75                LISTBOX_UpdateScrollers(hObj);
   \   0000002A   0x4620             MOV      R0,R4
   \   0000002C   0xE8BD 0x4032      POP      {R1,R4,R5,LR}
   \   00000030   0x.... 0x....      B.W      LISTBOX_UpdateScrollers
     76              }
     77              WM_UNLOCK();
     78            }
     79          }
   \                     ??LISTBOX_SetAutoScrollV_0: (+1)
   \   00000034   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     80          
     81          
     82          #else                            /* Avoid problems with empty object modules */
     83            void LISTBOX_SetAutoScroll_C(void) {}
     84          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   LISTBOX_SetAutoScrollH
        16   -> GUI_ALLOC_h2p
         0   -> LISTBOX_UpdateScrollers
      16   LISTBOX_SetAutoScrollV
        16   -> GUI_ALLOC_h2p
         0   -> LISTBOX_UpdateScrollers


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      54  LISTBOX_SetAutoScrollH
      54  LISTBOX_SetAutoScrollV

 
 108 bytes in section .text
 
 108 bytes of CODE memory

Errors: none
Warnings: none
