###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:25
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_ResizeWindow.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_ResizeWindow.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\WM_ResizeWindow.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WM_ResizeWindow.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_ResizeWindow.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_ResizeWindow.C
     16          Purpose     : Windows manager, add. module
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include <stddef.h>
     21          #include "WM_Intern.h"
     22          
     23          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     24          #include "GUIDebug.h"
     25          #define WM_DEBUG_LEVEL 1
     26          
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       WM_ResizeWindow
     36          */

   \                                 In section .text, align 2, keep-with-next
     37          void WM_ResizeWindow(WM_HWIN hWin, int dx, int dy) {
   \                     WM_ResizeWindow: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460F             MOV      R7,R1
   \   00000008   0x4616             MOV      R6,R2
     38            GUI_RECT rOld, rNew, rMerge;
     39            WM_Obj* pWin;
     40            if (((dx | dy) == 0) || (hWin == 0)){ /* Early out if there is nothing to do */
   \   0000000A   0xEA56 0x0007      ORRS     R0,R6,R7
   \   0000000E   0xD061             BEQ.N    ??WM_ResizeWindow_0
   \   00000010   0x2C00             CMP      R4,#+0
   \   00000012   0xD05F             BEQ.N    ??WM_ResizeWindow_0
     41              return;
     42            }
     43            WM_LOCK();
     44            pWin = WM_HANDLE2PTR(hWin);
   \   00000014   0x4620             MOV      R0,R4
   \   00000016   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000001A   0x4605             MOV      R5,R0
     45            rOld = pWin->Rect;
   \   0000001C   0xA803             ADD      R0,SP,#+12
   \   0000001E   0x4629             MOV      R1,R5
   \   00000020   0x2208             MOVS     R2,#+8
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy
     46            rNew = rOld;
   \   00000026   0xE9DD 0x0103      LDRD     R0,R1,[SP, #+12]
   \   0000002A   0xE9CD 0x0101      STRD     R0,R1,[SP, #+4]
     47            if (dx) {
   \   0000002E   0x2F00             CMP      R7,#+0
   \   00000030   0xD00F             BEQ.N    ??WM_ResizeWindow_1
     48              if ((pWin->Status & WM_SF_ANCHOR_RIGHT) && (!(pWin->Status & WM_SF_ANCHOR_LEFT))) {
   \   00000032   0x8BA8             LDRH     R0,[R5, #+28]
   \   00000034   0xF400 0x7020      AND      R0,R0,#0x280
   \   00000038   0x2880             CMP      R0,#+128
   \   0000003A   0xD105             BNE.N    ??WM_ResizeWindow_2
     49                rNew.x0 -= dx;
   \   0000003C   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000040   0x1BC0             SUBS     R0,R0,R7
   \   00000042   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   \   00000046   0xE004             B.N      ??WM_ResizeWindow_1
     50              } else {
     51                rNew.x1 += dx;
   \                     ??WM_ResizeWindow_2: (+1)
   \   00000048   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \   0000004C   0x1838             ADDS     R0,R7,R0
   \   0000004E   0xF8AD 0x0008      STRH     R0,[SP, #+8]
     52              }
     53            }
     54            if (dy) {
   \                     ??WM_ResizeWindow_1: (+1)
   \   00000052   0x2E00             CMP      R6,#+0
   \   00000054   0xD010             BEQ.N    ??WM_ResizeWindow_3
     55              if ((pWin->Status & WM_SF_ANCHOR_BOTTOM) && (!(pWin->Status & WM_SF_ANCHOR_TOP))) {
   \   00000056   0x8BA8             LDRH     R0,[R5, #+28]
   \   00000058   0xF400 0x60A0      AND      R0,R0,#0x500
   \   0000005C   0xF5B0 0x7F80      CMP      R0,#+256
   \   00000060   0xD105             BNE.N    ??WM_ResizeWindow_4
     56                rNew.y0 -= dy;
   \   00000062   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   00000066   0x1B80             SUBS     R0,R0,R6
   \   00000068   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   \   0000006C   0xE004             B.N      ??WM_ResizeWindow_3
     57              } else {
     58                rNew.y1 += dy;
   \                     ??WM_ResizeWindow_4: (+1)
   \   0000006E   0xF8BD 0x000A      LDRH     R0,[SP, #+10]
   \   00000072   0x1830             ADDS     R0,R6,R0
   \   00000074   0xF8AD 0x000A      STRH     R0,[SP, #+10]
     59              }
     60            }
     61            GUI_MergeRect(&rMerge, &rOld, &rNew);
   \                     ??WM_ResizeWindow_3: (+1)
   \   00000078   0xAA01             ADD      R2,SP,#+4
   \   0000007A   0xA903             ADD      R1,SP,#+12
   \   0000007C   0xA805             ADD      R0,SP,#+20
   \   0000007E   0x.... 0x....      BL       GUI_MergeRect
     62            pWin->Rect = rNew;
   \   00000082   0x4628             MOV      R0,R5
   \   00000084   0xA901             ADD      R1,SP,#+4
   \   00000086   0x2208             MOVS     R2,#+8
   \   00000088   0x.... 0x....      BL       __aeabi_memcpy
     63            WM_InvalidateArea(&rMerge);
   \   0000008C   0xA805             ADD      R0,SP,#+20
   \   0000008E   0x.... 0x....      BL       WM_InvalidateArea
     64            WM__UpdateChildPositions(pWin, rNew.x0 - rOld.x0, rNew.y0 - rOld.y0, rNew.x1 - rOld.x1, rNew.y1 - rOld.y1);
   \   00000092   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   00000096   0xF9BD 0x1012      LDRSH    R1,[SP, #+18]
   \   0000009A   0x1A40             SUBS     R0,R0,R1
   \   0000009C   0x9000             STR      R0,[SP, #+0]
   \   0000009E   0xF9BD 0x0008      LDRSH    R0,[SP, #+8]
   \   000000A2   0xF9BD 0x1010      LDRSH    R1,[SP, #+16]
   \   000000A6   0x1A43             SUBS     R3,R0,R1
   \   000000A8   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   000000AC   0xF9BD 0x100E      LDRSH    R1,[SP, #+14]
   \   000000B0   0x1A42             SUBS     R2,R0,R1
   \   000000B2   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   000000B6   0xF9BD 0x100C      LDRSH    R1,[SP, #+12]
   \   000000BA   0x1A41             SUBS     R1,R0,R1
   \   000000BC   0x4628             MOV      R0,R5
   \   000000BE   0x.... 0x....      BL       WM__UpdateChildPositions
     65            GUI__IntersectRect(&pWin->InvalidRect, &pWin->Rect); /* Make sure invalid area is not bigger than window itself */
   \   000000C2   0x4629             MOV      R1,R5
   \   000000C4   0xF105 0x0008      ADD      R0,R5,#+8
   \   000000C8   0x.... 0x....      BL       GUI__IntersectRect
     66            WM__SendMsgNoData(hWin, WM_SIZE);                    /* Send size message to the window */
   \   000000CC   0x2105             MOVS     R1,#+5
   \   000000CE   0x4620             MOV      R0,R4
   \   000000D0   0x.... 0x....      BL       WM__SendMsgNoData
     67            WM_UNLOCK();
     68          }
   \                     ??WM_ResizeWindow_0: (+1)
   \   000000D4   0xB007             ADD      SP,SP,#+28
   \   000000D6   0xBDF0             POP      {R4-R7,PC}       ;; return
     69          
     70          #else
     71            void WM_ResizeWindow(void) {} /* avoid empty object files */
     72          #endif   /* GUI_WINSUPPORT */
     73          
     74          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      48   WM_ResizeWindow
        48   -> GUI_ALLOC_h2p
        48   -> GUI_MergeRect
        48   -> GUI__IntersectRect
        48   -> WM_InvalidateArea
        48   -> WM__SendMsgNoData
        48   -> WM__UpdateChildPositions
        48   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     216  WM_ResizeWindow

 
 216 bytes in section .text
 
 216 bytes of CODE memory

Errors: none
Warnings: none
