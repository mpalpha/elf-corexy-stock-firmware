###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:06
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\RADIO_SetGroupId.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\RADIO_SetGroupId.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\RADIO_SetGroupId.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\RADIO_SetGroupId.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\RADIO_SetGroupId.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : RADIO_SetGroupId.c
     16          Purpose     : Implementation of RADIO widget
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stdlib.h>
     21          #include "RADIO.h"
     22          #include "RADIO_Private.h"
     23          
     24          #if GUI_WINSUPPORT
     25          
     26          /*********************************************************************
     27          *
     28          *       static code
     29          *
     30          **********************************************************************
     31          */
     32          /*********************************************************************
     33          *
     34          *       _SetValue
     35          */

   \                                 In section .text, align 2, keep-with-next
     36          static void _SetValue(RADIO_Handle hObj, int v) {
   \                     _SetValue: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     37            RADIO_Obj* pObj;
     38            pObj = RADIO_H2P(hObj);
   \   00000006   0x.... 0x....      BL       GUI_ALLOC_h2p
     39            RADIO__SetValue(hObj, pObj, v);
   \   0000000A   0x462A             MOV      R2,R5
   \   0000000C   0x4601             MOV      R1,R0
   \   0000000E   0x4620             MOV      R0,R4
   \   00000010   0xE8BD 0x4038      POP      {R3-R5,LR}
   \   00000014   0x.... 0x....      B.W      RADIO__SetValue
     40          }
     41          
     42          /*********************************************************************
     43          *
     44          *       _IsInGroup
     45          */

   \                                 In section .text, align 2, keep-with-next
     46          static int _IsInGroup(WM_HWIN hWin, U8 GroupId) {
   \                     _IsInGroup: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
   \   00000004   0x000C             MOVS     R4,R1
     47            if (GroupId) {
   \   00000006   0xD00B             BEQ.N    ??_IsInGroup_0
     48              WM_MESSAGE Msg;
     49              Msg.MsgId = WM_GET_RADIOGROUP;
   \   00000008   0x212B             MOVS     R1,#+43
   \   0000000A   0x9100             STR      R1,[SP, #+0]
     50              WM_SendMessage(hWin, &Msg);
   \   0000000C   0xA900             ADD      R1,SP,#+0
   \   0000000E   0x.... 0x....      BL       WM_SendMessage
     51              return (Msg.Data.v == GroupId);
   \   00000012   0x9802             LDR      R0,[SP, #+8]
   \   00000014   0x42A0             CMP      R0,R4
   \   00000016   0xD101             BNE.N    ??_IsInGroup_1
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0xE002             B.N      ??_IsInGroup_2
   \                     ??_IsInGroup_1: (+1)
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xE000             B.N      ??_IsInGroup_2
     52            }
     53            return 0;
   \                     ??_IsInGroup_0: (+1)
   \   00000020   0x2000             MOVS     R0,#+0
   \                     ??_IsInGroup_2: (+1)
   \   00000022   0xB004             ADD      SP,SP,#+16
   \   00000024   0xBD10             POP      {R4,PC}          ;; return
     54          }
     55          
     56          /*********************************************************************
     57          *
     58          *       _GetPrevInGroup
     59          */

   \                                 In section .text, align 2, keep-with-next
     60          static WM_HWIN _GetPrevInGroup(WM_HWIN hWin, U8 GroupId) {
   \                     _GetPrevInGroup: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x460C             MOV      R4,R1
     61            for (hWin = WM__GetPrevSibling(hWin); hWin; hWin = WM__GetPrevSibling(hWin)) {
   \   00000004   0x.... 0x....      BL       WM__GetPrevSibling
   \   00000008   0x4605             MOV      R5,R0
   \   0000000A   0xE002             B.N      ??_GetPrevInGroup_0
   \                     ??_GetPrevInGroup_1: (+1)
   \   0000000C   0x.... 0x....      BL       WM__GetPrevSibling
   \   00000010   0x4605             MOV      R5,R0
   \                     ??_GetPrevInGroup_0: (+1)
   \   00000012   0x2D00             CMP      R5,#+0
   \   00000014   0xD007             BEQ.N    ??_GetPrevInGroup_2
     62              if (_IsInGroup(hWin, GroupId)) {
   \   00000016   0x4621             MOV      R1,R4
   \   00000018   0x4628             MOV      R0,R5
   \   0000001A   0x.... 0x....      BL       _IsInGroup
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0x4628             MOV      R0,R5
   \   00000022   0xD0F3             BEQ.N    ??_GetPrevInGroup_1
     63                return hWin;
   \   00000024   0xBD32             POP      {R1,R4,R5,PC}
     64              }
     65            }
     66            return 0;
   \                     ??_GetPrevInGroup_2: (+1)
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     67          }
     68          
     69          /*********************************************************************
     70          *
     71          *       _GetNextInGroup
     72          */

   \                                 In section .text, align 2, keep-with-next
     73          static WM_HWIN _GetNextInGroup(WM_HWIN hWin, U8 GroupId) {
   \                     _GetNextInGroup: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0xE002             B.N      ??_GetNextInGroup_0
     74            for (; hWin; hWin = WM_GetNextSibling(hWin)) {
   \                     ??_GetNextInGroup_1: (+1)
   \   00000008   0x.... 0x....      BL       WM_GetNextSibling
   \   0000000C   0x4604             MOV      R4,R0
   \                     ??_GetNextInGroup_0: (+1)
   \   0000000E   0x2C00             CMP      R4,#+0
   \   00000010   0xD007             BEQ.N    ??_GetNextInGroup_2
     75              if (_IsInGroup(hWin, GroupId)) {
   \   00000012   0x4629             MOV      R1,R5
   \   00000014   0x4620             MOV      R0,R4
   \   00000016   0x.... 0x....      BL       _IsInGroup
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0x4620             MOV      R0,R4
   \   0000001E   0xD0F3             BEQ.N    ??_GetNextInGroup_1
     76                return hWin;
   \   00000020   0xBD32             POP      {R1,R4,R5,PC}
     77              }
     78            }
     79            return 0;
   \                     ??_GetNextInGroup_2: (+1)
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     80          }
     81          
     82          /*********************************************************************
     83          *
     84          *       _ClearSelection
     85          */

   \                                 In section .text, align 2, keep-with-next
     86          static void _ClearSelection(RADIO_Handle hObj, U8 GroupId) {
   \                     _ClearSelection: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     87            WM_HWIN hWin;
     88            WM_Obj* pWin;
     89            for (hWin = WM__GetFirstSibling(hObj); hWin; hWin = pWin->hNext) {
   \   00000006   0x.... 0x....      BL       WM__GetFirstSibling
   \   0000000A   0x4606             MOV      R6,R0
   \   0000000C   0xE013             B.N      ??_ClearSelection_0
     90              pWin = WM_H2P(hWin);
   \                     ??_ClearSelection_1: (+1)
   \   0000000E   0x4630             MOV      R0,R6
   \   00000010   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000014   0x4607             MOV      R7,R0
     91              if (hWin != hObj) {
   \   00000016   0x42A6             CMP      R6,R4
   \   00000018   0xD00B             BEQ.N    ??_ClearSelection_2
     92                if (_IsInGroup(hWin, GroupId)) {
   \   0000001A   0x4629             MOV      R1,R5
   \   0000001C   0x4630             MOV      R0,R6
   \   0000001E   0x.... 0x....      BL       _IsInGroup
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD005             BEQ.N    ??_ClearSelection_2
     93                  RADIO__SetValue(hWin, (RADIO_Obj*)pWin, -1);
   \   00000026   0xF04F 0x32FF      MOV      R2,#-1
   \   0000002A   0x4639             MOV      R1,R7
   \   0000002C   0x4630             MOV      R0,R6
   \   0000002E   0x.... 0x....      BL       RADIO__SetValue
     94                }
     95              }
     96            }
   \                     ??_ClearSelection_2: (+1)
   \   00000032   0xF9B7 0x601A      LDRSH    R6,[R7, #+26]
   \                     ??_ClearSelection_0: (+1)
   \   00000036   0x2E00             CMP      R6,#+0
   \   00000038   0xD1E9             BNE.N    ??_ClearSelection_1
     97          }
   \   0000003A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
     98          
     99          /*********************************************************************
    100          *
    101          *       _HandleSetValue
    102          */

   \                                 In section .text, align 2, keep-with-next
    103          static void _HandleSetValue(RADIO_Handle hObj, RADIO_Obj* pObj, int v) {
   \                     _HandleSetValue: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    104            if (v < 0) {
   \   00000008   0xD514             BPL.N    ??_HandleSetValue_0
    105              WM_HWIN hWin = _GetPrevInGroup(hObj, pObj->GroupId);
   \   0000000A   0xF895 0x1040      LDRB     R1,[R5, #+64]
   \   0000000E   0x.... 0x....      BL       _GetPrevInGroup
   \   00000012   0x0006             MOVS     R6,R0
    106              if (hWin) {
   \   00000014   0xD039             BEQ.N    ??_HandleSetValue_1
    107                WM_SetFocus(hWin);
   \   00000016   0x.... 0x....      BL       WM_SetFocus
    108                _SetValue(hWin, 0x7FFF);
   \   0000001A   0xF647 0x71FF      MOVW     R1,#+32767
   \   0000001E   0x4630             MOV      R0,R6
   \   00000020   0x.... 0x....      BL       _SetValue
    109                RADIO__SetValue(hObj, pObj, -1);
   \   00000024   0xF04F 0x32FF      MOV      R2,#-1
   \   00000028   0x4629             MOV      R1,R5
   \   0000002A   0x4620             MOV      R0,R4
   \   0000002C   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000030   0x.... 0x....      B.W      RADIO__SetValue
    110              }
    111            } else if (v >= pObj->NumItems) {
   \                     ??_HandleSetValue_0: (+1)
   \   00000034   0xF205 0x001A      ADDW     R0,R5,#+26
   \   00000038   0x8C81             LDRH     R1,[R0, #+36]
   \   0000003A   0x428E             CMP      R6,R1
   \   0000003C   0xDB15             BLT.N    ??_HandleSetValue_2
    112              WM_HWIN hWin = _GetNextInGroup(pObj->Widget.Win.hNext, pObj->GroupId);
   \   0000003E   0xF895 0x1040      LDRB     R1,[R5, #+64]
   \   00000042   0xF9B5 0x001A      LDRSH    R0,[R5, #+26]
   \   00000046   0x.... 0x....      BL       _GetNextInGroup
   \   0000004A   0x0006             MOVS     R6,R0
    113              if (hWin) {
   \   0000004C   0xD01D             BEQ.N    ??_HandleSetValue_1
    114                WM_SetFocus(hWin);
   \   0000004E   0x.... 0x....      BL       WM_SetFocus
    115                _SetValue(hWin, 0);
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0x4630             MOV      R0,R6
   \   00000056   0x.... 0x....      BL       _SetValue
    116                RADIO__SetValue(hObj, pObj, -1);
   \   0000005A   0xF04F 0x32FF      MOV      R2,#-1
   \   0000005E   0x4629             MOV      R1,R5
   \   00000060   0x4620             MOV      R0,R4
   \   00000062   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000066   0x.... 0x....      B.W      RADIO__SetValue
    117              }
    118            } else {
    119              if (pObj->Sel != v) {
   \                     ??_HandleSetValue_2: (+1)
   \   0000006A   0xF9B0 0x001E      LDRSH    R0,[R0, #+30]
   \   0000006E   0x42B0             CMP      R0,R6
   \   00000070   0xD00B             BEQ.N    ??_HandleSetValue_1
    120                _ClearSelection(hObj, pObj->GroupId);
   \   00000072   0xF895 0x1040      LDRB     R1,[R5, #+64]
   \   00000076   0x4620             MOV      R0,R4
   \   00000078   0x.... 0x....      BL       _ClearSelection
    121                RADIO__SetValue(hObj, pObj, v);
   \   0000007C   0x4632             MOV      R2,R6
   \   0000007E   0x4629             MOV      R1,R5
   \   00000080   0x4620             MOV      R0,R4
   \   00000082   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000086   0x.... 0x....      B.W      RADIO__SetValue
    122              }
    123            }
    124          }
   \                     ??_HandleSetValue_1: (+1)
   \   0000008A   0xBD70             POP      {R4-R6,PC}       ;; return
    125          
    126          /*********************************************************************
    127          *
    128          *       Exported code
    129          *
    130          **********************************************************************
    131          */
    132          /*********************************************************************
    133          *
    134          *       RADIO_SetGroupId
    135          */

   \                                 In section .text, align 2, keep-with-next
    136          void RADIO_SetGroupId(RADIO_Handle hObj, U8 NewGroupId) {
   \                     RADIO_SetGroupId: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
    137            if (hObj) {
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD03D             BEQ.N    ??RADIO_SetGroupId_0
    138              RADIO_Obj* pObj;
    139              U8 OldGroupId;
    140              WM_LOCK();
    141              pObj = RADIO_H2P(hObj);
   \   0000000C   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000010   0x4606             MOV      R6,R0
    142              OldGroupId = pObj->GroupId;
   \   00000012   0xF106 0x0738      ADD      R7,R6,#+56
   \   00000016   0xF897 0x8008      LDRB     R8,[R7, #+8]
    143              if (NewGroupId != OldGroupId) {
   \   0000001A   0x4545             CMP      R5,R8
   \   0000001C   0xD034             BEQ.N    ??RADIO_SetGroupId_0
    144                WM_HWIN hFirst;
    145                hFirst = WM__GetFirstSibling(hObj);
   \   0000001E   0x4620             MOV      R0,R4
   \   00000020   0x.... 0x....      BL       WM__GetFirstSibling
   \   00000024   0x4681             MOV      R9,R0
    146                /* Set function pointer if necessary */
    147                if (NewGroupId && (RADIO__pfHandleSetValue == NULL)) {
   \   00000026   0x2D00             CMP      R5,#+0
   \   00000028   0xD005             BEQ.N    ??RADIO_SetGroupId_1
   \   0000002A   0x....             LDR.N    R0,??DataTable0
   \   0000002C   0x6801             LDR      R1,[R0, #+0]
   \   0000002E   0x2900             CMP      R1,#+0
   \   00000030   0xD101             BNE.N    ??RADIO_SetGroupId_1
    148                  RADIO__pfHandleSetValue = _HandleSetValue;
   \   00000032   0x....             LDR.N    R1,??DataTable0_1
   \   00000034   0x6001             STR      R1,[R0, #+0]
    149                }
    150                /* Pass our selection, if we have one, to another radio button in */
    151                /* our old group. So the group have a valid selection when we leave it. */
    152                if (OldGroupId && (pObj->Sel >= 0)) {
   \                     ??RADIO_SetGroupId_1: (+1)
   \   00000036   0xF1B8 0x0F00      CMP      R8,#+0
   \   0000003A   0xD00E             BEQ.N    ??RADIO_SetGroupId_2
   \   0000003C   0xF9B6 0x0038      LDRSH    R0,[R6, #+56]
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD40A             BMI.N    ??RADIO_SetGroupId_2
    153                  WM_HWIN hWin;
    154                  pObj->GroupId = 0; /* Leave group first, so _GetNextInGroup() could */
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x7238             STRB     R0,[R7, #+8]
    155                                     /* not find a handle to our own window. */
    156                  hWin = _GetNextInGroup(hFirst, OldGroupId);
   \   00000048   0x4641             MOV      R1,R8
   \   0000004A   0x4648             MOV      R0,R9
   \   0000004C   0x.... 0x....      BL       _GetNextInGroup
    157                  if (hWin) {
   \   00000050   0x2800             CMP      R0,#+0
   \   00000052   0xD002             BEQ.N    ??RADIO_SetGroupId_2
    158                    _SetValue(hWin, 0);
   \   00000054   0x2100             MOVS     R1,#+0
   \   00000056   0x.... 0x....      BL       _SetValue
    159                  }
    160                }
    161                /* Make sure we have a valid selection according to our new group */
    162                if (_GetNextInGroup(hFirst, NewGroupId) != 0) {
   \                     ??RADIO_SetGroupId_2: (+1)
   \   0000005A   0x4629             MOV      R1,R5
   \   0000005C   0x4648             MOV      R0,R9
   \   0000005E   0x.... 0x....      BL       _GetNextInGroup
   \   00000062   0x2800             CMP      R0,#+0
   \   00000064   0xD006             BEQ.N    ??RADIO_SetGroupId_3
    163                  /* Join an existing group with an already valid selection, so clear our own one */
    164                  RADIO__SetValue(hObj, pObj, -1);
   \   00000066   0xF04F 0x32FF      MOV      R2,#-1
   \   0000006A   0x4631             MOV      R1,R6
   \   0000006C   0x4620             MOV      R0,R4
   \   0000006E   0x.... 0x....      BL       RADIO__SetValue
   \   00000072   0xE008             B.N      ??RADIO_SetGroupId_4
    165                } else if (pObj->Sel < 0) {
   \                     ??RADIO_SetGroupId_3: (+1)
   \   00000074   0xF9B6 0x0038      LDRSH    R0,[R6, #+56]
   \   00000078   0x2800             CMP      R0,#+0
   \   0000007A   0xD504             BPL.N    ??RADIO_SetGroupId_4
    166                  /* We are the first window in group, so we must have a valid selection at our own. */
    167                  RADIO__SetValue(hObj, pObj, 0);
   \   0000007C   0x2200             MOVS     R2,#+0
   \   0000007E   0x4631             MOV      R1,R6
   \   00000080   0x4620             MOV      R0,R4
   \   00000082   0x.... 0x....      BL       RADIO__SetValue
    168                }
    169                /* Change the group */
    170                pObj->GroupId = NewGroupId;
   \                     ??RADIO_SetGroupId_4: (+1)
   \   00000086   0x723D             STRB     R5,[R7, #+8]
    171              }
    172              WM_UNLOCK();
    173            }
    174          }
   \                     ??RADIO_SetGroupId_0: (+1)
   \   00000088   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     RADIO__pfHandleSetValue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     _HandleSetValue
    175          
    176          #else                            /* Avoid problems with empty object modules */
    177            void RADIO_SetGroupId_C(void);
    178            void RADIO_SetGroupId_C(void) {}
    179          #endif
    180          
    181          /************************* end of file ******************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   RADIO_SetGroupId
        32   -> GUI_ALLOC_h2p
        32   -> RADIO__SetValue
        32   -> WM__GetFirstSibling
        32   -> _GetNextInGroup
        32   -> _SetValue
      24   _ClearSelection
        24   -> GUI_ALLOC_h2p
        24   -> RADIO__SetValue
        24   -> WM__GetFirstSibling
        24   -> _IsInGroup
      16   _GetNextInGroup
        16   -> WM_GetNextSibling
        16   -> _IsInGroup
      16   _GetPrevInGroup
        16   -> WM__GetPrevSibling
        16   -> _IsInGroup
      16   _HandleSetValue
         0   -> RADIO__SetValue
        16   -> WM_SetFocus
        16   -> _ClearSelection
        16   -> _GetNextInGroup
        16   -> _GetPrevInGroup
        16   -> _SetValue
      24   _IsInGroup
        24   -> WM_SendMessage
      16   _SetValue
        16   -> GUI_ALLOC_h2p
         0   -> RADIO__SetValue


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
     140  RADIO_SetGroupId
      60  _ClearSelection
      38  _GetNextInGroup
      42  _GetPrevInGroup
     140  _HandleSetValue
      38  _IsInGroup
      24  _SetValue

 
 490 bytes in section .text
 
 490 bytes of CODE memory

Errors: none
Warnings: none
