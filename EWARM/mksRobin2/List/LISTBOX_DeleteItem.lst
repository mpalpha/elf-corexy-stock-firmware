###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:00:48
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\LISTBOX_DeleteItem.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\LISTBOX_DeleteItem.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\LISTBOX_DeleteItem.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\LISTBOX_DeleteItem.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\LISTBOX_DeleteItem.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : LISTBOX_DeleteItem.c
     16          Purpose     : Implementation of LISTBOX_DeleteItem
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <string.h>
     21          #include "LISTBOX_Private.h"
     22          
     23          #if GUI_WINSUPPORT
     24          
     25          
     26          /*********************************************************************
     27          *
     28          *       Public routines
     29          *
     30          **********************************************************************
     31          */
     32          
     33          /*********************************************************************
     34          *
     35          *       LISTBOX_DeleteItem
     36          */

   \                                 In section .text, align 2, keep-with-next
     37          void LISTBOX_DeleteItem(LISTBOX_Handle hObj, unsigned int Index) {
   \                     LISTBOX_DeleteItem: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     38            if (hObj) {
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD02C             BEQ.N    ??LISTBOX_DeleteItem_0
     39              int Sel;
     40              LISTBOX_Obj* pObj;
     41              unsigned int NumItems;
     42              WM_LOCK();
     43              pObj = LISTBOX_H2P(hObj);
   \   0000000A   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000000E   0x4606             MOV      R6,R0
     44              NumItems = LISTBOX__GetNumItems(pObj);
     45              if (Index < NumItems) {
   \   00000010   0x.... 0x....      BL       LISTBOX__GetNumItems
   \   00000014   0x4285             CMP      R5,R0
   \   00000016   0xD225             BCS.N    ??LISTBOX_DeleteItem_0
     46                GUI_ARRAY_DeleteItem(&pObj->ItemArray, Index);
   \   00000018   0x4629             MOV      R1,R5
   \   0000001A   0xF106 0x0028      ADD      R0,R6,#+40
   \   0000001E   0x.... 0x....      BL       GUI_ARRAY_DeleteItem
     47                /*
     48                 * Update selection
     49                 */
     50                Sel = pObj->Sel;
   \   00000022   0xF9B6 0x0072      LDRSH    R0,[R6, #+114]
   \   00000026   0x0001             MOVS     R1,R0
     51                if (Sel >= 0) {                     /* Valid selction ? */
   \   00000028   0xD40B             BMI.N    ??LISTBOX_DeleteItem_1
     52                  if ((int)Index == Sel) {          /* Deleting selected item ? */
   \   0000002A   0x428D             CMP      R5,R1
   \   0000002C   0xD104             BNE.N    ??LISTBOX_DeleteItem_2
     53                    pObj->Sel = -1;                 /* Invalidate selection */
   \   0000002E   0xF04F 0x30FF      MOV      R0,#-1
   \   00000032   0xF8A6 0x0072      STRH     R0,[R6, #+114]
   \   00000036   0xE004             B.N      ??LISTBOX_DeleteItem_1
     54                  } else if ((int)Index < Sel) {    /* Deleting item above selection ? */
   \                     ??LISTBOX_DeleteItem_2: (+1)
   \   00000038   0x428D             CMP      R5,R1
   \   0000003A   0xDA02             BGE.N    ??LISTBOX_DeleteItem_1
     55                    pObj->Sel--;
   \   0000003C   0x1E40             SUBS     R0,R0,#+1
   \   0000003E   0xF8A6 0x0072      STRH     R0,[R6, #+114]
     56                  }
     57                }
     58                if (LISTBOX_UpdateScrollers(hObj)) {
   \                     ??LISTBOX_DeleteItem_1: (+1)
   \   00000042   0x4620             MOV      R0,R4
   \   00000044   0x.... 0x....      BL       LISTBOX_UpdateScrollers
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD004             BEQ.N    ??LISTBOX_DeleteItem_3
     59                  LISTBOX__InvalidateInsideArea(hObj);
   \   0000004C   0x4620             MOV      R0,R4
   \   0000004E   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000052   0x.... 0x....      B.W      LISTBOX__InvalidateInsideArea
     60                } else {
     61                  LISTBOX__InvalidateItemAndBelow(hObj, pObj, Index);
   \                     ??LISTBOX_DeleteItem_3: (+1)
   \   00000056   0x462A             MOV      R2,R5
   \   00000058   0x4631             MOV      R1,R6
   \   0000005A   0x4620             MOV      R0,R4
   \   0000005C   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000060   0x.... 0x....      B.W      LISTBOX__InvalidateItemAndBelow
     62                }
     63              }
     64              WM_UNLOCK();
     65            }
     66          }
   \                     ??LISTBOX_DeleteItem_0: (+1)
   \   00000064   0xBD70             POP      {R4-R6,PC}       ;; return
     67          
     68          #else                            /* Avoid problems with empty object modules */
     69            void LISTBOX_DeleteString_C(void) {}
     70          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   LISTBOX_DeleteItem
        16   -> GUI_ALLOC_h2p
        16   -> GUI_ARRAY_DeleteItem
        16   -> LISTBOX_UpdateScrollers
        16   -> LISTBOX__GetNumItems
         0   -> LISTBOX__InvalidateInsideArea
         0   -> LISTBOX__InvalidateItemAndBelow


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     102  LISTBOX_DeleteItem

 
 102 bytes in section .text
 
 102 bytes of CODE memory

Errors: none
Warnings: none
