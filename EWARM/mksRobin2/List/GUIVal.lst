###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:00:01
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUIVal.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUIVal.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\GUIVal.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\GUIVal.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUIVal.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUIVAL.C
     16          Purpose     : Routines to display values as dec, binary or hex
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "GUI_Protected.h"
     21          #include "GUIDebug.h"
     22          #include "string.h"
     23          
     24          /*********************************************************************
     25          *
     26          *       Public code
     27          *
     28          **********************************************************************
     29          */
     30          /*********************************************************************
     31          *
     32          *       GUI_DispDecShift
     33          */

   \                                 In section .text, align 2, keep-with-next
     34          void GUI_DispDecShift(I32 v, U8 Len, U8 Shift) {
   \                     GUI_DispDecShift: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
     35          	char ac[12];
     36          	char* s = ac;
   \   00000004   0xAB01             ADD      R3,SP,#+4
   \   00000006   0x9300             STR      R3,[SP, #+0]
     37            GUI_AddDecShift(v, Len, Shift, &s);
   \   00000008   0xAB00             ADD      R3,SP,#+0
   \   0000000A   0x.... 0x....      BL       GUI_AddDecShift
     38            GUI_DispString(ac);
   \   0000000E   0xA801             ADD      R0,SP,#+4
   \   00000010   0x.... 0x....      BL       GUI_DispString
     39          }
   \   00000014   0xB005             ADD      SP,SP,#+20
   \   00000016   0xBD00             POP      {PC}             ;; return
     40          
     41          /*********************************************************************
     42          *
     43          *       GUI_DispSDecShift
     44          */

   \                                 In section .text, align 2, keep-with-next
     45          void GUI_DispSDecShift(I32 v, U8 Len, U8 Shift) {
   \                     GUI_DispSDecShift: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x460C             MOV      R4,R1
   \   00000006   0x4615             MOV      R5,R2
     46          	char ac[12];
     47          	char* s = ac;
   \   00000008   0xA901             ADD      R1,SP,#+4
   \   0000000A   0x9100             STR      R1,[SP, #+0]
     48            v = GUI_AddSign(v, &s);
   \   0000000C   0xA900             ADD      R1,SP,#+0
   \   0000000E   0x.... 0x....      BL       GUI_AddSign
     49            GUI_AddDecShift(v, --Len, Shift, &s);
   \   00000012   0xAB00             ADD      R3,SP,#+0
   \   00000014   0x462A             MOV      R2,R5
   \   00000016   0x1E61             SUBS     R1,R4,#+1
   \   00000018   0xB2C9             UXTB     R1,R1
   \   0000001A   0x.... 0x....      BL       GUI_AddDecShift
     50            GUI_DispString(ac);
   \   0000001E   0xA801             ADD      R0,SP,#+4
   \   00000020   0x.... 0x....      BL       GUI_DispString
     51          }
   \   00000024   0xB005             ADD      SP,SP,#+20
   \   00000026   0xBD30             POP      {R4,R5,PC}       ;; return
     52          
     53          /*********************************************************************
     54          *
     55          *       GUI_DispDecMin
     56          */

   \                                 In section .text, align 2, keep-with-next
     57          void GUI_DispDecMin(I32 v) {
   \                     GUI_DispDecMin: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
     58          	char ac[12];
     59          	char* s = ac;
   \   00000004   0xA901             ADD      R1,SP,#+4
   \   00000006   0x9100             STR      R1,[SP, #+0]
     60            GUI_AddDecMin(v, &s);
   \   00000008   0xA900             ADD      R1,SP,#+0
   \   0000000A   0x.... 0x....      BL       GUI_AddDecMin
     61            GUI_DispString(ac);
   \   0000000E   0xA801             ADD      R0,SP,#+4
   \   00000010   0x.... 0x....      BL       GUI_DispString
     62          }
   \   00000014   0xB005             ADD      SP,SP,#+20
   \   00000016   0xBD00             POP      {PC}             ;; return
     63          
     64          /*********************************************************************
     65          *
     66          *       GUI_DispDecSpace
     67          */

   \                                 In section .text, align 2, keep-with-next
     68          void GUI_DispDecSpace(I32 v, U8 MaxDigits) {
   \                     GUI_DispDecSpace: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
     69          	char ac[12];
     70          	char* s = ac;
   \   00000008   0xA801             ADD      R0,SP,#+4
   \   0000000A   0x9000             STR      R0,[SP, #+0]
     71            U8 Len;
     72            if (v < 0) {
   \   0000000C   0x2C00             CMP      R4,#+0
   \   0000000E   0xD505             BPL.N    ??GUI_DispDecSpace_0
     73              v = GUI_AddSign(v, &s);
   \   00000010   0xA900             ADD      R1,SP,#+0
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       GUI_AddSign
   \   00000018   0x4604             MOV      R4,R0
     74              MaxDigits--;
   \   0000001A   0x1E6D             SUBS     R5,R5,#+1
     75            }
     76            Len = GUI_Long2Len(v);
   \                     ??GUI_DispDecSpace_0: (+1)
   \   0000001C   0x4620             MOV      R0,R4
   \   0000001E   0x.... 0x....      BL       GUI_Long2Len
   \   00000022   0xE005             B.N      ??GUI_DispDecSpace_1
     77            while (Len++ < MaxDigits) {
     78              *s++ = ' ';
   \                     ??GUI_DispDecSpace_2: (+1)
   \   00000024   0x2120             MOVS     R1,#+32
   \   00000026   0x9A00             LDR      R2,[SP, #+0]
   \   00000028   0x7011             STRB     R1,[R2, #+0]
   \   0000002A   0x9900             LDR      R1,[SP, #+0]
   \   0000002C   0x1C49             ADDS     R1,R1,#+1
   \   0000002E   0x9100             STR      R1,[SP, #+0]
     79            }
   \                     ??GUI_DispDecSpace_1: (+1)
   \   00000030   0x4601             MOV      R1,R0
   \   00000032   0x1C48             ADDS     R0,R1,#+1
   \   00000034   0xB2C9             UXTB     R1,R1
   \   00000036   0xB2ED             UXTB     R5,R5
   \   00000038   0x42A9             CMP      R1,R5
   \   0000003A   0xD3F3             BCC.N    ??GUI_DispDecSpace_2
     80            GUI_AddDecMin(v, &s);
   \   0000003C   0xA900             ADD      R1,SP,#+0
   \   0000003E   0x4620             MOV      R0,R4
   \   00000040   0x.... 0x....      BL       GUI_AddDecMin
     81            GUI_DispString(ac);
   \   00000044   0xA801             ADD      R0,SP,#+4
   \   00000046   0x.... 0x....      BL       GUI_DispString
     82          }
   \   0000004A   0xB005             ADD      SP,SP,#+20
   \   0000004C   0xBD30             POP      {R4,R5,PC}       ;; return
     83          
     84          /*********************************************************************
     85          *
     86          *       GUI_DispSDec
     87          */

   \                                 In section .text, align 2, keep-with-next
     88          void GUI_DispSDec(I32 v, U8 Len) {
     89            GUI_DispSDecShift(v,Len,0);
   \                     GUI_DispSDec: (+1)
   \   00000000   0x2200             MOVS     R2,#+0
   \   00000002   0x....             B.N      GUI_DispSDecShift
     90          }
     91          
     92          /*********************************************************************
     93          *
     94          *       GUI_DispDec
     95          */

   \                                 In section .text, align 2, keep-with-next
     96          void GUI_DispDec(I32 v, U8 Len) {
     97            GUI_DispDecShift(v, Len,0);
   \                     GUI_DispDec: (+1)
   \   00000000   0x2200             MOVS     R2,#+0
   \   00000002   0x....             B.N      GUI_DispDecShift
     98          }
     99          
    100          /*********************************************************************
    101          *
    102          *       GUI_DispDecAt
    103          */

   \                                 In section .text, align 2, keep-with-next
    104          void GUI_DispDecAt(I32 v, I16P x, I16P y, U8 Len) {
   \                     GUI_DispDecAt: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x460C             MOV      R4,R1
   \   00000006   0x4615             MOV      R5,R2
   \   00000008   0x4619             MOV      R1,R3
    105          	char ac[12];
    106          	char* s = ac;
   \   0000000A   0xAA01             ADD      R2,SP,#+4
   \   0000000C   0x9200             STR      R2,[SP, #+0]
    107            GUI_AddDecShift(v, Len, 0, &s);
   \   0000000E   0xAB00             ADD      R3,SP,#+0
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0x.... 0x....      BL       GUI_AddDecShift
    108            GUI_DispStringAt(ac, x, y);
   \   00000016   0x462A             MOV      R2,R5
   \   00000018   0x4621             MOV      R1,R4
   \   0000001A   0xA801             ADD      R0,SP,#+4
   \   0000001C   0x.... 0x....      BL       GUI_DispStringAt
    109          }
   \   00000020   0xB005             ADD      SP,SP,#+20
   \   00000022   0xBD30             POP      {R4,R5,PC}       ;; return
    110          
    111          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   GUI_DispDec
         0   -> GUI_DispDecShift
      32   GUI_DispDecAt
        32   -> GUI_AddDecShift
        32   -> GUI_DispStringAt
      24   GUI_DispDecMin
        24   -> GUI_AddDecMin
        24   -> GUI_DispString
      24   GUI_DispDecShift
        24   -> GUI_AddDecShift
        24   -> GUI_DispString
      32   GUI_DispDecSpace
        32   -> GUI_AddDecMin
        32   -> GUI_AddSign
        32   -> GUI_DispString
        32   -> GUI_Long2Len
       0   GUI_DispSDec
         0   -> GUI_DispSDecShift
      32   GUI_DispSDecShift
        32   -> GUI_AddDecShift
        32   -> GUI_AddSign
        32   -> GUI_DispString


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  GUI_DispDec
      36  GUI_DispDecAt
      24  GUI_DispDecMin
      24  GUI_DispDecShift
      78  GUI_DispDecSpace
       4  GUI_DispSDec
      40  GUI_DispSDecShift

 
 210 bytes in section .text
 
 210 bytes of CODE memory

Errors: none
Warnings: none
