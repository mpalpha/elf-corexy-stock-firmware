###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:27
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_SetScrollbar.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_SetScrollbar.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\WM_SetScrollbar.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WM_SetScrollbar.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_SetScrollbar.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_SetScrollbar.c
     16          Purpose     : Implementation of WM_SetScrollbarV, WM_SetScrollbarH
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "WM_Intern.h"
     21          #include "SCROLLBAR.h"
     22          
     23          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     24          
     25          
     26          /*********************************************************************
     27          *
     28          *       Static code
     29          *
     30          **********************************************************************
     31          */
     32          /*********************************************************************
     33          *
     34          *       _SetScrollbar
     35          *
     36          * Return value: 1 if scrollbar was visible, 0 if not
     37          */

   \                                 In section .text, align 2, keep-with-next
     38          static int _SetScrollbar(WM_HWIN hWin, int OnOff, int Id, int Flags) {
   \                     _SetScrollbar: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4611             MOV      R1,R2
   \   00000008   0x461E             MOV      R6,R3
     39            WM_HWIN hBar;
     40            hBar = WM_GetDialogItem(hWin, Id);
   \   0000000A   0x.... 0x....      BL       WM_GetDialogItem
   \   0000000E   0x4607             MOV      R7,R0
     41            if (OnOff) {
   \   00000010   0x2D00             CMP      R5,#+0
   \   00000012   0xD006             BEQ.N    ??_SetScrollbar_0
     42              if (!hBar) {
   \   00000014   0x2F00             CMP      R7,#+0
   \   00000016   0xD10B             BNE.N    ??_SetScrollbar_1
     43                SCROLLBAR_CreateAttached(hWin, Flags);
   \   00000018   0x4631             MOV      R1,R6
   \   0000001A   0x4620             MOV      R0,R4
   \   0000001C   0x.... 0x....      BL       SCROLLBAR_CreateAttached
   \   00000020   0xE006             B.N      ??_SetScrollbar_1
     44              }
     45            } else {
     46              WM_HideWindow(hBar);
   \                     ??_SetScrollbar_0: (+1)
   \   00000022   0x.... 0x....      BL       WM_HideWindow
     47              if (hBar) {
   \   00000026   0x2F00             CMP      R7,#+0
   \   00000028   0xD002             BEQ.N    ??_SetScrollbar_1
     48                WM_DeleteWindow(hBar);
   \   0000002A   0x4638             MOV      R0,R7
   \   0000002C   0x.... 0x....      BL       WM_DeleteWindow
     49              }
     50            }
     51            return (hBar ? 1 : 0);
   \                     ??_SetScrollbar_1: (+1)
   \   00000030   0x4638             MOV      R0,R7
   \   00000032   0x1E40             SUBS     R0,R0,#+1
   \   00000034   0x4180             SBCS     R0,R0,R0
   \   00000036   0x43C0             MVNS     R0,R0
   \   00000038   0x0FC0             LSRS     R0,R0,#+31
   \   0000003A   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     52          }
     53          
     54          
     55          /*********************************************************************
     56          *
     57          *       Public code
     58          *
     59          **********************************************************************
     60          */
     61          /*********************************************************************
     62          *
     63          *       WM__SetScrollbarV
     64          *
     65          */

   \                                 In section .text, align 2, keep-with-next
     66          int WM__SetScrollbarV(WM_HWIN hWin, int OnOff) {
     67            return _SetScrollbar(hWin, OnOff, GUI_ID_VSCROLL, SCROLLBAR_CF_VERTICAL);
   \                     WM__SetScrollbarV: (+1)
   \   00000000   0x2308             MOVS     R3,#+8
   \   00000002   0x22FE             MOVS     R2,#+254
   \   00000004   0x....             B.N      _SetScrollbar
     68          }
     69          
     70          /*********************************************************************
     71          *
     72          *       WM__SetScrollbarH
     73          *
     74          */

   \                                 In section .text, align 2, keep-with-next
     75          int WM__SetScrollbarH(WM_HWIN hWin, int OnOff) {
     76            return _SetScrollbar(hWin, OnOff, GUI_ID_HSCROLL, 0);
   \                     WM__SetScrollbarH: (+1)
   \   00000000   0x2300             MOVS     R3,#+0
   \   00000002   0x22FF             MOVS     R2,#+255
   \   00000004   0x....             B.N      _SetScrollbar
     77          }
     78          
     79          /*********************************************************************
     80          *
     81          *       WM_SetScrollbarH
     82          *
     83          */

   \                                 In section .text, align 2, keep-with-next
     84          int WM_SetScrollbarH(WM_HWIN hWin, int OnOff) {
     85            int r;
     86            WM_LOCK();
     87            r = WM__SetScrollbarH(hWin, OnOff);
     88            WM_UNLOCK();
     89            return r;
   \                     WM_SetScrollbarH: (+1)
   \   00000000   0x....             B.N      WM__SetScrollbarH
     90          }
     91          
     92          /*********************************************************************
     93          *
     94          *       WM_SetScrollbarV
     95          *
     96          */

   \                                 In section .text, align 2, keep-with-next
     97          int WM_SetScrollbarV(WM_HWIN hWin, int OnOff) {
     98            int r;
     99            WM_LOCK();
    100            r = WM__SetScrollbarV(hWin, OnOff);
    101            WM_UNLOCK();
    102            return r;
   \                     WM_SetScrollbarV: (+1)
   \   00000000   0x....             B.N      WM__SetScrollbarV
    103          }
    104          
    105          #else
    106            void WM_SetScrollbar_c(void) {} /* avoid empty object files */
    107          #endif
    108          
    109          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   WM_SetScrollbarH
         0   -> WM__SetScrollbarH
       0   WM_SetScrollbarV
         0   -> WM__SetScrollbarV
       0   WM__SetScrollbarH
         0   -> _SetScrollbar
       0   WM__SetScrollbarV
         0   -> _SetScrollbar
      24   _SetScrollbar
        24   -> SCROLLBAR_CreateAttached
        24   -> WM_DeleteWindow
        24   -> WM_GetDialogItem
        24   -> WM_HideWindow


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  WM_SetScrollbarH
       2  WM_SetScrollbarV
       6  WM__SetScrollbarH
       6  WM__SetScrollbarV
      60  _SetScrollbar

 
 76 bytes in section .text
 
 76 bytes of CODE memory

Errors: none
Warnings: none
