###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:30
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_Validate.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_Validate.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\WM_Validate.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WM_Validate.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_Validate.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_Validate.C
     16          Purpose     : Windows manager, add. module
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include <stddef.h>           /* needed for definition of NULL */
     21          #include "WM_Intern.h"
     22          
     23          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     24          
     25          /*********************************************************************
     26          *
     27          *        Macros for internal use
     28          *
     29          **********************************************************************
     30          */
     31          
     32          #define Min(v0,v1) ((v0>v1) ? v1 : v0)
     33          #define Max(v0,v1) ((v0>v1) ? v0 : v1)
     34          
     35          /*********************************************************************
     36          *
     37          *       Public code
     38          *
     39          **********************************************************************
     40          */
     41          /*********************************************************************
     42          *
     43          *       WM__SubRect       
     44          
     45            The result is the smallest rectangle which includes the entire
     46            remaining area.
     47          
     48            *pDest = *pr0- *pr1;
     49          */

   \                                 In section .text, align 2, keep-with-next
     50          static void _SubRect(GUI_RECT* pDest, const GUI_RECT* pr0, const GUI_RECT* pr1) {
   \                     _SubRect: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460E             MOV      R6,R1
   \   00000006   0x4615             MOV      R5,R2
     51            if ((pDest == NULL) || (pr0 == NULL))
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD03E             BEQ.N    ??_SubRect_0
   \   0000000C   0x2E00             CMP      R6,#+0
   \   0000000E   0xD03C             BEQ.N    ??_SubRect_0
     52              return;
     53            *pDest = *pr0;	 
   \   00000010   0x2208             MOVS     R2,#+8
   \   00000012   0x.... 0x....      BL       __aeabi_memcpy
     54            if (pr1 == NULL)
   \   00000016   0x2D00             CMP      R5,#+0
   \   00000018   0xD037             BEQ.N    ??_SubRect_0
     55              return;
     56            /* Check left/right sides */
     57            if (  (pr1->y0 <= pr0->y0)
     58                &&(pr1->y1 >= pr0->y1)) {
   \   0000001A   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   0000001E   0xF9B5 0x1002      LDRSH    R1,[R5, #+2]
   \   00000022   0x4288             CMP      R0,R1
   \   00000024   0xDB15             BLT.N    ??_SubRect_1
   \   00000026   0xF9B5 0x0006      LDRSH    R0,[R5, #+6]
   \   0000002A   0xF9B6 0x1006      LDRSH    R1,[R6, #+6]
   \   0000002E   0x4288             CMP      R0,R1
   \   00000030   0xDB0F             BLT.N    ??_SubRect_1
     59              pDest->x0 = Max(pr0->x0, pr1->x1);
   \   00000032   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   00000036   0xF9B6 0x1000      LDRSH    R1,[R6, #+0]
   \   0000003A   0x4288             CMP      R0,R1
   \   0000003C   0xDA00             BGE.N    ??_SubRect_2
   \   0000003E   0x4608             MOV      R0,R1
   \                     ??_SubRect_2: (+1)
   \   00000040   0x8020             STRH     R0,[R4, #+0]
     60              pDest->x1 = Min(pr0->x1, pr1->x0);
   \   00000042   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   00000046   0xF9B5 0x1000      LDRSH    R1,[R5, #+0]
   \   0000004A   0x4281             CMP      R1,R0
   \   0000004C   0xDA00             BGE.N    ??_SubRect_3
   \   0000004E   0x4608             MOV      R0,R1
   \                     ??_SubRect_3: (+1)
   \   00000050   0x80A0             STRH     R0,[R4, #+4]
     61            }
     62            /* Check top/bottom sides */
     63            if (  (pr1->x0 <= pr0->x0)
     64                &&(pr1->x1 >= pr0->x1)) {
   \                     ??_SubRect_1: (+1)
   \   00000052   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000056   0xF9B5 0x1000      LDRSH    R1,[R5, #+0]
   \   0000005A   0x4288             CMP      R0,R1
   \   0000005C   0xDB15             BLT.N    ??_SubRect_0
   \   0000005E   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   00000062   0xF9B6 0x1004      LDRSH    R1,[R6, #+4]
   \   00000066   0x4288             CMP      R0,R1
   \   00000068   0xDB0F             BLT.N    ??_SubRect_0
     65              pDest->y0 = Max(pr0->y0, pr1->y1);
   \   0000006A   0xF9B5 0x0006      LDRSH    R0,[R5, #+6]
   \   0000006E   0xF9B6 0x1002      LDRSH    R1,[R6, #+2]
   \   00000072   0x4288             CMP      R0,R1
   \   00000074   0xDA00             BGE.N    ??_SubRect_4
   \   00000076   0x4608             MOV      R0,R1
   \                     ??_SubRect_4: (+1)
   \   00000078   0x8060             STRH     R0,[R4, #+2]
     66              pDest->y1 = Min(pr0->y1, pr1->y0);
   \   0000007A   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   0000007E   0xF9B6 0x1006      LDRSH    R1,[R6, #+6]
   \   00000082   0x4288             CMP      R0,R1
   \   00000084   0xDD00             BLE.N    ??_SubRect_5
   \   00000086   0x4608             MOV      R0,R1
   \                     ??_SubRect_5: (+1)
   \   00000088   0x80E0             STRH     R0,[R4, #+6]
     67            }
     68          }
   \                     ??_SubRect_0: (+1)
   \   0000008A   0xBD70             POP      {R4-R6,PC}       ;; return
     69          
     70          /*********************************************************************
     71          *
     72          *       WM_ValidateRect
     73          *
     74            Use this function with great care ! It should under most circumstances not
     75            be necessary to use it, as validation is done automatically as soon as
     76            a window has been redrawn. If you validate a section of a window, this
     77            part will not be included in the paint-command and could therefor not
     78            be updated.
     79          */

   \                                 In section .text, align 2, keep-with-next
     80          void WM_ValidateRect(WM_HWIN hWin, const GUI_RECT*pRect) {
   \                     WM_ValidateRect: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x460C             MOV      R4,R1
     81            WM_Obj* pWin;
     82            if (hWin) {
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD01D             BEQ.N    ??WM_ValidateRect_0
     83              WM_LOCK();
     84              pWin = WM_HANDLE2PTR(hWin);
   \   00000008   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000000C   0x4605             MOV      R5,R0
     85              if (pWin->Status & WM_SF_INVALID) {
   \   0000000E   0x7F28             LDRB     R0,[R5, #+28]
   \   00000010   0x0680             LSLS     R0,R0,#+26
   \   00000012   0xD517             BPL.N    ??WM_ValidateRect_0
     86                if (pRect) {
   \   00000014   0x2C00             CMP      R4,#+0
   \   00000016   0xD00C             BEQ.N    ??WM_ValidateRect_1
     87                  _SubRect(&pWin->InvalidRect, &pWin->InvalidRect, pRect);
   \   00000018   0x4622             MOV      R2,R4
   \   0000001A   0xF105 0x0108      ADD      R1,R5,#+8
   \   0000001E   0xF105 0x0008      ADD      R0,R5,#+8
   \   00000022   0x.... 0x....      BL       _SubRect
     88                  if (WM__RectIsNZ(&pWin->InvalidRect))
   \   00000026   0xF105 0x0008      ADD      R0,R5,#+8
   \   0000002A   0x.... 0x....      BL       WM__RectIsNZ
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD108             BNE.N    ??WM_ValidateRect_0
     89                    goto Done;
     90                }
     91                pWin->Status &= ~WM_SF_INVALID;
   \                     ??WM_ValidateRect_1: (+1)
   \   00000032   0x8BA8             LDRH     R0,[R5, #+28]
   \   00000034   0xF64F 0x71DF      MOVW     R1,#+65503
   \   00000038   0x4008             ANDS     R0,R1,R0
   \   0000003A   0x83A8             STRH     R0,[R5, #+28]
     92                WM__NumInvalidWindows--;
   \   0000003C   0x....             LDR.N    R0,??DataTable0
   \   0000003E   0x8801             LDRH     R1,[R0, #+0]
   \   00000040   0x1E49             SUBS     R1,R1,#+1
   \   00000042   0x8001             STRH     R1,[R0, #+0]
     93              }
     94            Done:
     95              WM_UNLOCK();
     96            }
     97          }
   \                     ??WM_ValidateRect_0: (+1)
   \   00000044   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     WM__NumInvalidWindows
     98          
     99          #else
    100            void WM_Validate(void) {} /* avoid empty object files */
    101          #endif   /* GUI_WINSUPPORT */
    102          
    103          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   WM_ValidateRect
        16   -> GUI_ALLOC_h2p
        16   -> WM__RectIsNZ
        16   -> _SubRect
      16   _SubRect
        16   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
      70  WM_ValidateRect
     140  _SubRect

 
 214 bytes in section .text
 
 214 bytes of CODE memory

Errors: none
Warnings: none
