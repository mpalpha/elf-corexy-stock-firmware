###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:32
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\GUI_ARRAY_InsertItem.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\GUI_ARRAY_InsertItem.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\GUI_ARRAY_InsertItem.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\GUI_ARRAY_InsertItem.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\GUI_ARRAY_InsertItem.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_ARRAY_InsertItem.c
     16          Purpose     : Array handling routines
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "GUI_ARRAY.h"
     21          #include <string.h>
     22          
     23          #if GUI_WINSUPPORT
     24          
     25          /*********************************************************************
     26          *
     27          *       public code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       GUI_ARRAY_InsertBlankItem
     34          *
     35          * Purpose:
     36          *   Inserts a blank element in a GUI_ARRAY.
     37          *
     38          * Parameters:
     39          *   Index   Index of the element to insert before
     40          *           0 means: Insert before first element
     41          *           1 means: Insert before second element
     42          *
     43          * Return value:
     44          *   1 if successful
     45          *   0 if failed
     46          *
     47          * Notes:
     48          *   (1) Index changes
     49          *       The index of all items after the one inserted will change
     50          *       (Increment by 1)
     51          */

   \                                 In section .text, align 2, keep-with-next
     52          char GUI_ARRAY_InsertBlankItem(GUI_ARRAY* pThis, unsigned int Index) {
   \                     GUI_ARRAY_InsertBlankItem: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
     53            GUI_ARRAY_CHECK(pThis);    /* Sanity checks at higher debug levels only */
     54          
     55            if (Index >= (unsigned)pThis->NumItems) {
   \   00000008   0x8820             LDRH     R0,[R4, #+0]
   \   0000000A   0x4285             CMP      R5,R0
   \   0000000C   0xD227             BCS.N    ??GUI_ARRAY_InsertBlankItem_0
     56              GUI_DEBUG_ERROROUT("GUI_ARRAY_InsertBlankItem: Illegal index");
     57            } else {
     58              WM_HMEM hNewBuffer;
     59              hNewBuffer = GUI_ALLOC_AllocZero(sizeof(WM_HMEM) * (pThis->NumItems + 1));
   \   0000000E   0x1C40             ADDS     R0,R0,#+1
   \   00000010   0x0040             LSLS     R0,R0,#+1
   \   00000012   0xB200             SXTH     R0,R0
   \   00000014   0x.... 0x....      BL       GUI_ALLOC_AllocZero
   \   00000018   0x0006             MOVS     R6,R0
     60              if (hNewBuffer == 0) {
   \   0000001A   0xD020             BEQ.N    ??GUI_ARRAY_InsertBlankItem_0
     61                GUI_DEBUG_ERROROUT("GUI_ARRAY_InsertBlankItem: Failed to alloc buffer");
     62              } else {
     63                WM_HMEM *pOldBuffer;
     64                WM_HMEM *pNewBuffer;
     65                pNewBuffer = (WM_HMEM*) GUI_ALLOC_h2p(hNewBuffer);
   \   0000001C   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000020   0x4607             MOV      R7,R0
     66                pOldBuffer = (WM_HMEM*) GUI_ALLOC_h2p(pThis->haHandle);
   \   00000022   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000026   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000002A   0x4680             MOV      R8,R0
     67                memcpy(pNewBuffer, pOldBuffer, Index * sizeof(WM_HMEM));
   \   0000002C   0x006A             LSLS     R2,R5,#+1
   \   0000002E   0x4641             MOV      R1,R8
   \   00000030   0x4638             MOV      R0,R7
   \   00000032   0x.... 0x....      BL       memcpy
     68                memcpy(pNewBuffer + (Index + 1), pOldBuffer + Index, (pThis->NumItems - Index) * sizeof(WM_HMEM));
   \   00000036   0x8820             LDRH     R0,[R4, #+0]
   \   00000038   0x1B40             SUBS     R0,R0,R5
   \   0000003A   0x0042             LSLS     R2,R0,#+1
   \   0000003C   0xEB08 0x0145      ADD      R1,R8,R5, LSL #+1
   \   00000040   0xEB07 0x0045      ADD      R0,R7,R5, LSL #+1
   \   00000044   0x1C80             ADDS     R0,R0,#+2
   \   00000046   0x.... 0x....      BL       memcpy
     69                GUI_ALLOC_Free(pThis->haHandle);
   \   0000004A   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000004E   0x.... 0x....      BL       GUI_ALLOC_Free
     70                pThis->haHandle = hNewBuffer;
   \   00000052   0x8066             STRH     R6,[R4, #+2]
     71                pThis->NumItems++;
   \   00000054   0x8820             LDRH     R0,[R4, #+0]
   \   00000056   0x1C40             ADDS     R0,R0,#+1
   \   00000058   0x8020             STRH     R0,[R4, #+0]
     72                return 1;               /* Successfull */
   \   0000005A   0x2001             MOVS     R0,#+1
   \   0000005C   0xE000             B.N      ??GUI_ARRAY_InsertBlankItem_1
     73              }
     74            }
     75            return 0;                   /* Failed */
   \                     ??GUI_ARRAY_InsertBlankItem_0: (+1)
   \   0000005E   0x2000             MOVS     R0,#+0
   \                     ??GUI_ARRAY_InsertBlankItem_1: (+1)
   \   00000060   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
     76          }
     77          
     78          /*********************************************************************
     79          *
     80          *       GUI_ARRAY_InsertItem
     81          *
     82          * Purpose:
     83          *   Inserts an element in a GUI_ARRAY.
     84          *
     85          *
     86          * Parameters:
     87          *   Index   Index of the element to insert before
     88          *           0 means: Insert before first element
     89          *           1 means: Insert before second element
     90          *
     91          * Return value:
     92          *   Handle of allocated memory block if successful
     93          *   0 if failed
     94          *
     95          * Notes:
     96          *   (1) Index changes
     97          *       The index of all items after the one inserted will change
     98          *       (Increment by 1)
     99          */

   \                                 In section .text, align 2, keep-with-next
    100          WM_HMEM GUI_ARRAY_InsertItem(GUI_ARRAY* pThis, unsigned int Index, int Len) {
   \                     GUI_ARRAY_InsertItem: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
    101            WM_HMEM hNewBuffer = 0;
   \   00000008   0x2700             MOVS     R7,#+0
    102            if (GUI_ARRAY_InsertBlankItem(pThis, Index)) {
   \   0000000A   0x.... 0x....      BL       GUI_ARRAY_InsertBlankItem
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD006             BEQ.N    ??GUI_ARRAY_InsertItem_0
    103              hNewBuffer = GUI_ARRAY_SetItem(pThis, Index, 0, Len);
   \   00000012   0x4633             MOV      R3,R6
   \   00000014   0x463A             MOV      R2,R7
   \   00000016   0x4629             MOV      R1,R5
   \   00000018   0x4620             MOV      R0,R4
   \   0000001A   0x.... 0x....      BL       GUI_ARRAY_SetItem
   \   0000001E   0x4607             MOV      R7,R0
    104            }
    105            return hNewBuffer;
   \                     ??GUI_ARRAY_InsertItem_0: (+1)
   \   00000020   0x4638             MOV      R0,R7
   \   00000022   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    106          }
    107          
    108          #else  /* avoid empty object files */
    109          
    110          void GUI_ARRAY_InsertItem_C(void);
    111          void GUI_ARRAY_InsertItem_C(void){}
    112          
    113          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   GUI_ARRAY_InsertBlankItem
        24   -> GUI_ALLOC_AllocZero
        24   -> GUI_ALLOC_Free
        24   -> GUI_ALLOC_h2p
        24   -> memcpy
      24   GUI_ARRAY_InsertItem
        24   -> GUI_ARRAY_InsertBlankItem
        24   -> GUI_ARRAY_SetItem


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     100  GUI_ARRAY_InsertBlankItem
      36  GUI_ARRAY_InsertItem

 
 136 bytes in section .text
 
 136 bytes of CODE memory

Errors: none
Warnings: none
