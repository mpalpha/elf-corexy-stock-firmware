###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:13
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\WINDOW.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\WINDOW.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\WINDOW.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WINDOW.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\WINDOW.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WINDOW.c
     16          Purpose     : Window routines
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          
     21          #include <stdlib.h>
     22          #include <string.h>
     23          #include "DIALOG.h"
     24          #if GUI_WINSUPPORT
     25          
     26          /*********************************************************************
     27          *
     28          *       Private config defaults
     29          *
     30          **********************************************************************
     31          */
     32          
     33          #ifndef WINDOW_BKCOLOR_DEFAULT
     34            #define WINDOW_BKCOLOR_DEFAULT 0xC0C0C0
     35          #endif
     36          
     37          /*********************************************************************
     38          *
     39          *       Object definition
     40          *
     41          **********************************************************************
     42          */
     43          
     44          typedef struct {
     45            WIDGET Widget;
     46            WM_CALLBACK* cb;
     47            WM_HWIN hFocussedChild;
     48            WM_DIALOG_STATUS* pDialogStatus;
     49          } WINDOW_OBJ;
     50          
     51          #define WINDOW_H2P(h) (WINDOW_OBJ*)WM_H2P(h)
     52          
     53          /*********************************************************************
     54          *
     55          *       Static data
     56          *
     57          **********************************************************************
     58          */
     59          

   \                                 In section .data, align 4
     60          GUI_COLOR WINDOW__DefaultBkColor = WINDOW_BKCOLOR_DEFAULT;
   \                     WINDOW__DefaultBkColor:
   \   00000000   0x00C0C0C0         DC32 12632256
     61          
     62          /*********************************************************************
     63          *
     64          *       Static routines
     65          *
     66          **********************************************************************
     67          */
     68          /*********************************************************************
     69          *
     70          *       _OnChildHasFocus
     71          */

   \                                 In section .text, align 2, keep-with-next
     72          static void _OnChildHasFocus(WM_HWIN hWin, WINDOW_OBJ* pObj, const WM_MESSAGE* pMsg) {
   \                     _OnChildHasFocus: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     73            if (pMsg->Data.p) {
   \   00000006   0x6896             LDR      R6,[R2, #+8]
   \   00000008   0x2E00             CMP      R6,#+0
   \   0000000A   0xD00F             BEQ.N    ??_OnChildHasFocus_0
     74              const WM_NOTIFY_CHILD_HAS_FOCUS_INFO * pInfo = (const WM_NOTIFY_CHILD_HAS_FOCUS_INFO *)pMsg->Data.p;
     75              int IsDesc = WM__IsAncestorOrSelf(pInfo->hNew, hWin);
     76              if (!IsDesc) {  /* A child has received the focus, Framewindow needs to be activated */
   \   0000000C   0x4621             MOV      R1,R4
   \   0000000E   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   00000012   0x.... 0x....      BL       WM__IsAncestorOrSelf
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD108             BNE.N    ??_OnChildHasFocus_0
     77                /* Remember the child which had the focus so we can reactive this child */
     78                if (WM__IsAncestor(pInfo->hOld, hWin)) {
   \   0000001A   0x4621             MOV      R1,R4
   \   0000001C   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000020   0x.... 0x....      BL       WM__IsAncestor
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD001             BEQ.N    ??_OnChildHasFocus_0
     79                  pObj->hFocussedChild = pInfo->hOld;
   \   00000028   0x8830             LDRH     R0,[R6, #+0]
   \   0000002A   0x85A8             STRH     R0,[R5, #+44]
     80                }
     81              }
     82            }
     83          }
   \                     ??_OnChildHasFocus_0: (+1)
   \   0000002C   0xBD70             POP      {R4-R6,PC}       ;; return
     84          
     85          /*********************************************************************
     86          *
     87          *       _cb
     88          */

   \                                 In section .text, align 2, keep-with-next
     89          static void _cb(WM_MESSAGE* pMsg) {
   \                     _cb: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
     90            WM_HWIN hObj;
     91            WINDOW_OBJ* pObj;
     92            WM_CALLBACK* cb;
     93            hObj = pMsg->hWin;
   \   00000004   0xF9B4 0x6004      LDRSH    R6,[R4, #+4]
     94            pObj = WINDOW_H2P(hObj);
   \   00000008   0x4630             MOV      R0,R6
   \   0000000A   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000000E   0x4605             MOV      R5,R0
     95            cb   = pObj->cb;
   \   00000010   0x6AAF             LDR      R7,[R5, #+40]
     96            switch (pMsg->MsgId) {
   \   00000012   0x6820             LDR      R0,[R4, #+0]
   \   00000014   0x280E             CMP      R0,#+14
   \   00000016   0xD032             BEQ.N    ??_cb_0
   \   00000018   0x280F             CMP      R0,#+15
   \   0000001A   0xD040             BEQ.N    ??_cb_1
   \   0000001C   0x281F             CMP      R0,#+31
   \   0000001E   0xD00F             BEQ.N    ??_cb_2
   \   00000020   0x2820             CMP      R0,#+32
   \   00000022   0xD020             BEQ.N    ??_cb_3
   \   00000024   0x2821             CMP      R0,#+33
   \   00000026   0xD024             BEQ.N    ??_cb_4
   \   00000028   0x2822             CMP      R0,#+34
   \   0000002A   0xD03F             BEQ.N    ??_cb_5
   \   0000002C   0x282A             CMP      R0,#+42
   \   0000002E   0xD131             BNE.N    ??_cb_6
     97            case WM_HANDLE_DIALOG_STATUS:
     98              if (pMsg->Data.p) {                           /* set pointer to Dialog status */
   \   00000030   0x68A0             LDR      R0,[R4, #+8]
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD001             BEQ.N    ??_cb_7
     99                pObj->pDialogStatus = (WM_DIALOG_STATUS*)pMsg->Data.p;
   \   00000036   0x6328             STR      R0,[R5, #+48]
   \   00000038   0xBDF1             POP      {R0,R4-R7,PC}
    100              } else {                                      /* return pointer to Dialog status */
    101                pMsg->Data.p = pObj->pDialogStatus;      
   \                     ??_cb_7: (+1)
   \   0000003A   0x6B28             LDR      R0,[R5, #+48]
   \   0000003C   0x60A0             STR      R0,[R4, #+8]
    102              }
    103              return;
   \   0000003E   0xBDF1             POP      {R0,R4-R7,PC}
    104            case WM_SET_FOCUS:
    105              if (pMsg->Data.v) {   /* Focus received */
   \                     ??_cb_2: (+1)
   \   00000040   0x68A0             LDR      R0,[R4, #+8]
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD03A             BEQ.N    ??_cb_8
    106                if (pObj->hFocussedChild && (pObj->hFocussedChild != hObj)) {
   \   00000046   0xF9B5 0x002C      LDRSH    R0,[R5, #+44]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD004             BEQ.N    ??_cb_9
   \   0000004E   0x42B0             CMP      R0,R6
   \   00000050   0xD002             BEQ.N    ??_cb_9
    107                  WM_SetFocus(pObj->hFocussedChild);
   \   00000052   0x.... 0x....      BL       WM_SetFocus
   \   00000056   0xE003             B.N      ??_cb_10
    108                } else {
    109                  pObj->hFocussedChild = WM_SetFocusOnNextChild(hObj);
   \                     ??_cb_9: (+1)
   \   00000058   0x4630             MOV      R0,R6
   \   0000005A   0x.... 0x....      BL       WM_SetFocusOnNextChild
   \   0000005E   0x85A8             STRH     R0,[R5, #+44]
    110                }
    111                pMsg->Data.v = 0;   /* Focus change accepted */
   \                     ??_cb_10: (+1)
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x60A0             STR      R0,[R4, #+8]
    112              }
    113              return;
   \   00000064   0xBDF1             POP      {R0,R4-R7,PC}
    114            case WM_GET_ACCEPT_FOCUS:
    115              WIDGET_HandleActive(hObj, pMsg);
   \                     ??_cb_3: (+1)
   \   00000066   0x4621             MOV      R1,R4
   \   00000068   0x4630             MOV      R0,R6
   \   0000006A   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   0000006E   0x.... 0x....      B.W      WIDGET_HandleActive
    116              return;
    117            case WM_NOTIFY_CHILD_HAS_FOCUS:
    118              _OnChildHasFocus(hObj, pObj, pMsg);
   \                     ??_cb_4: (+1)
   \   00000072   0x4622             MOV      R2,R4
   \   00000074   0x4629             MOV      R1,R5
   \   00000076   0x4630             MOV      R0,R6
   \   00000078   0xE8BD 0x40F8      POP      {R3-R7,LR}
   \   0000007C   0x....             B.N      _OnChildHasFocus
    119              return;
    120            case WM_KEY:
    121              if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
   \                     ??_cb_0: (+1)
   \   0000007E   0x68A0             LDR      R0,[R4, #+8]
   \   00000080   0x6841             LDR      R1,[R0, #+4]
   \   00000082   0x2901             CMP      R1,#+1
   \   00000084   0xDB06             BLT.N    ??_cb_6
    122                int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
    123                switch (Key) {
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x2809             CMP      R0,#+9
   \   0000008A   0xD103             BNE.N    ??_cb_6
    124                case GUI_KEY_TAB:
    125                  pObj->hFocussedChild = WM_SetFocusOnNextChild(hObj);
   \   0000008C   0x4630             MOV      R0,R6
   \   0000008E   0x.... 0x....      BL       WM_SetFocusOnNextChild
   \   00000092   0x85A8             STRH     R0,[R5, #+44]
    126                  break;                    /* Send to parent by not doing anything */
    127                }
    128              }
    129              break;
    130            case WM_PAINT:
    131              LCD_SetBkColor(WINDOW__DefaultBkColor);
    132              GUI_Clear();
    133              break;
    134            case WM_GET_BKCOLOR:
    135              pMsg->Data.Color = WINDOW__DefaultBkColor;
    136              return;                       /* Message handled */
    137            }  
    138            if (cb) {
   \                     ??_cb_6: (+1)
   \   00000094   0x0038             MOVS     R0,R7
   \   00000096   0x4620             MOV      R0,R4
   \   00000098   0xD00C             BEQ.N    ??_cb_11
    139              (*cb)(pMsg);
   \   0000009A   0x47B8             BLX      R7
   \   0000009C   0xBDF1             POP      {R0,R4-R7,PC}
    140            } else {
   \                     ??_cb_1: (+1)
   \   0000009E   0x....             LDR.N    R0,??DataTable1
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0x.... 0x....      BL       LCD_SetBkColor
   \   000000A6   0x.... 0x....      BL       GUI_Clear
   \   000000AA   0xE7F3             B.N      ??_cb_6
   \                     ??_cb_5: (+1)
   \   000000AC   0x....             LDR.N    R0,??DataTable1
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x60A0             STR      R0,[R4, #+8]
   \   000000B2   0xBDF1             POP      {R0,R4-R7,PC}
    141              WM_DefaultProc(pMsg);
   \                     ??_cb_11: (+1)
   \   000000B4   0xE8BD 0x40F2      POP      {R1,R4-R7,LR}
   \   000000B8   0x.... 0x....      B.W      WM_DefaultProc
    142            }
    143          }
   \                     ??_cb_8: (+1)
   \   000000BC   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    144          
    145          /*********************************************************************
    146          *
    147          *       Exported routines
    148          *
    149          **********************************************************************
    150          */
    151          /*********************************************************************
    152          *
    153          *       WINDOW_CreateIndirect
    154          */

   \                                 In section .text, align 2, keep-with-next
    155          WM_HWIN WINDOW_CreateIndirect(const GUI_WIDGET_CREATE_INFO* pCreateInfo, WM_HWIN hWinParent, int x0, int y0, WM_CALLBACK* cb) {
   \                     WINDOW_CreateIndirect: (+1)
   \   00000000   0xB57F             PUSH     {R0-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x4610             MOV      R0,R2
   \   00000006   0x461D             MOV      R5,R3
    156            WM_HWIN hObj;
    157            hObj = WM_CreateWindowAsChild(
    158              pCreateInfo->x0 + x0, pCreateInfo->y0 + y0, pCreateInfo->xSize, pCreateInfo->ySize, hWinParent,
    159              pCreateInfo->Flags, _cb, sizeof(WINDOW_OBJ) - sizeof(WM_Obj));
   \   00000008   0x2214             MOVS     R2,#+20
   \   0000000A   0x9203             STR      R2,[SP, #+12]
   \   0000000C   0x....             LDR.N    R2,??DataTable1_1
   \   0000000E   0x9202             STR      R2,[SP, #+8]
   \   00000010   0x8A62             LDRH     R2,[R4, #+18]
   \   00000012   0x9201             STR      R2,[SP, #+4]
   \   00000014   0x9100             STR      R1,[SP, #+0]
   \   00000016   0xF9B4 0x3010      LDRSH    R3,[R4, #+16]
   \   0000001A   0xF9B4 0x200E      LDRSH    R2,[R4, #+14]
   \   0000001E   0xF9B4 0x100C      LDRSH    R1,[R4, #+12]
   \   00000022   0x1869             ADDS     R1,R5,R1
   \   00000024   0xF9B4 0x500A      LDRSH    R5,[R4, #+10]
   \   00000028   0x1940             ADDS     R0,R0,R5
   \   0000002A   0x.... 0x....      BL       WM_CreateWindowAsChild
   \   0000002E   0x0005             MOVS     R5,R0
    160            if (hObj) {
   \   00000030   0xD00B             BEQ.N    ??WINDOW_CreateIndirect_0
    161              WINDOW_OBJ* pObj;
    162              WM_LOCK();
    163              pObj = WINDOW_H2P(hObj);
   \   00000032   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000036   0x4606             MOV      R6,R0
    164              WIDGET__Init(&pObj->Widget, pCreateInfo->Id, WIDGET_STATE_FOCUSSABLE);
   \   00000038   0x2210             MOVS     R2,#+16
   \   0000003A   0xF9B4 0x1008      LDRSH    R1,[R4, #+8]
   \   0000003E   0x.... 0x....      BL       WIDGET__Init
    165              pObj->cb             = cb;
   \   00000042   0x9808             LDR      R0,[SP, #+32]
   \   00000044   0x62B0             STR      R0,[R6, #+40]
    166              pObj->hFocussedChild = 0;
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x85B0             STRH     R0,[R6, #+44]
    167              WM_UNLOCK();
    168            }
    169            return hObj;
   \                     ??WINDOW_CreateIndirect_0: (+1)
   \   0000004A   0x4628             MOV      R0,R5
   \   0000004C   0xB004             ADD      SP,SP,#+16
   \   0000004E   0xBD70             POP      {R4-R6,PC}       ;; return
    170          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     WINDOW__DefaultBkColor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     _cb
    171          
    172          #else
    173            void WINDOW_c(void);
    174            void WINDOW_c(void) {} /* avoid empty object files */
    175          #endif /* GUI_WINSUPPORT */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   WINDOW_CreateIndirect
        32   -> GUI_ALLOC_h2p
        32   -> WIDGET__Init
        32   -> WM_CreateWindowAsChild
      16   _OnChildHasFocus
        16   -> WM__IsAncestor
        16   -> WM__IsAncestorOrSelf
      24   _cb
        24   -- Indirect call
        24   -> GUI_ALLOC_h2p
        24   -> GUI_Clear
        24   -> LCD_SetBkColor
         0   -> WIDGET_HandleActive
         0   -> WM_DefaultProc
        24   -> WM_SetFocus
        24   -> WM_SetFocusOnNextChild
         0   -> _OnChildHasFocus


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
      80  WINDOW_CreateIndirect
       4  WINDOW__DefaultBkColor
      46  _OnChildHasFocus
     190  _cb

 
   4 bytes in section .data
 324 bytes in section .text
 
 324 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
