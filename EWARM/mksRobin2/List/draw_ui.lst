###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  18:22:56
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.cpp
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\..\Middlewares\GUI\
#        -Om --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\draw_ui.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\draw_ui.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "PROGBAR.h"
      4          #include "string_deal.h"
      5          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\EWARM/../Middlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Inc\mks_cfg.h",609  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_en.h",135  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_s_cn.h",218  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 213)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_t_cn.h",127  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 113)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_ru.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_ru.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 225)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_fr.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_fr.h",233  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 229)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_sp.h",132  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 113)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_it.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_it.h",229  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 224)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Multi_language.h",652  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 645)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Multi_language.h",860  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 854)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.h",492  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.h",547  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          544)

  #define Complex_Speed "ÀŸ∂»"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.h",548  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          545)
      6          #include "draw_ready_print.h"
      7          //#include "gcode.h"
      8          //#include "printer.h"
      9          #include "draw_machine.h"
     10          #include "draw_log_ui.h"
     11          #include "draw_language.h"
     12          #include "draw_about.h"
     13          #include "draw_wifi.h"
     14          #include "draw_print_file.h"
     15          #include "draw_printing.h"
     16          #include "draw_move_motor.h"
     17          #include "draw_operate.h"
     18          #include "draw_pause_ui.h"
     19          #include "draw_extrusion.h"
     20          #include "draw_pre_heat.h"
     21          #include "draw_change_speed.h"
     22          #include "draw_fan.h"
     23          #include "draw_set.h"
     24          #include "draw_zero.h"
     25          #include "draw_sprayer.h"
     26          #include "draw_machine.h"
     27          #include "draw_language.h"
     28          #include "draw_log_ui.h"
     29          #include "draw_wifi.h"
     30          #include "draw_more.h"
     31          #include "ff.h"
     32          #include "pic_manager.h"
     33          #include "ili9320.h"
     34          #include "draw_printing_moremenu.h"
     35          #include "draw_filamentchange.h"
     36          /******add********/
     37          #include "draw_main.h"
     38          #include "tim.h"
     39          //#include "mks_tft_com.h"
     40          #include "draw_manual_leveling.h"
     41          //#include "mks_tft_reprint.h"
     42          #include "configuration_adv.h"
     43          #include "types.h"
     44          #include "mks_reprint.h"
     45          
     46          #include "stm32f1xx_hal.h"
     47          #include "stm32f1xx_hal_flash_ex.h"
     48          
     49          #include "at24cxx.h"
     50          #include "draw_bind.h"
     51          #include "draw_disk.h"
     52          #include "draw_zoffset.h"
     53          #include "draw_tool.h"
     54          #include "fatfs.h"
     55          
     56          #include "marlin.h"

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp char const *strstr(char const *, char const *)
   \                     _Z6strstrPKcS0_: (+1)
   \   00000000   0x.... 0x....      B.W      __iar_Strstr

  #define pgm_read_byte(addr) (*(const unsigned char *)(addr))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\Marlin_export.h",64  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_byte" (declared at line
          32 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\EWARM/../Middlewares/Third_Party/Marlin\cardreader.h")

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Marlin_export.h")

  #define PSTR(x)          (x)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\marlin.h",63  Warning[Pe047]: 
          incompatible redefinition of macro "PSTR" (declared at line 31 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\EWARM/../Middlewares/Third_Party/Marlin\cardreader.h")

    }
    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\marlin.h",538  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"
     57          #include "mks_test.h"

  #define IS_SPI_DIRECTION_MODE(MODE) (((MODE) == SPI_Direction_2Lines_FullDuplex) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",132  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_DIRECTION_MODE" (declared
          at line 466 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_MODE(MODE) (((MODE) == SPI_Mode_Master) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",146  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_MODE" (declared at line
          459 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_DATASIZE(DATASIZE) (((DATASIZE) == SPI_DataSize_16b) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",158  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_DATASIZE" (declared at
          line 488 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_CPOL(CPOL) (((CPOL) == SPI_CPOL_Low) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",170  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_CPOL" (declared at line
          496 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_CPHA(CPHA) (((CPHA) == SPI_CPHA_1Edge) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",182  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_CPHA" (declared at line
          504 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_NSS(NSS) (((NSS) == SPI_NSS_Soft) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",194  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_NSS" (declared at line
          512 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_BAUDRATE_PRESCALER(PRESCALER) (((PRESCALER) == SPI_BaudRatePrescaler_2) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",212  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_BAUDRATE_PRESCALER"
          (declared at line 521 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_FIRST_BIT(BIT) (((BIT) == SPI_FirstBit_MSB) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_FIRST_BIT" (declared at
          line 535 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define SPI_FLAG_CRCERR                 ((uint16_t)0x0010)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_FLAG_CRCERR" (declared at
          line 308 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define SPI_FLAG_MODF                   ((uint16_t)0x0020)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",409  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_FLAG_MODF" (declared at line
          309 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_CRC_POLYNOMIAL(POLYNOMIAL) ((POLYNOMIAL) >= 0x1)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",425  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_CRC_POLYNOMIAL" (declared
          at line 558 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #else defined(MKS_ROBIN_NANO)
        ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\BSP\Components\w25qxx\spi_flash.h",40  Warning[Pe014]: 
          extra text after expected end of preprocessing directive
     58          //Screen TFT_screen;
     59          
     60          static float zpos_bak = -1;
     61          extern volatile uint8_t temper_error_flg;
     62          
     63          extern volatile int16_t logo_time;
     64          //extern PR_STATUS printerStaus;
     65          extern uint8_t temp_update_flag;
     66          
     67          extern uint8_t print_start_flg;
     68          extern uint8_t from_flash_pic;
     69          /******end********/
     70          extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz14;
     71          
     72          extern GUI_CONST_STORAGE GUI_BITMAP bmpreheat;
     73          extern GUI_CONST_STORAGE GUI_BITMAP bmadd;
     74          extern GUI_CONST_STORAGE GUI_BITMAP bmdec;
     75          extern GUI_CONST_STORAGE GUI_BITMAP bmdir;
     76          extern GUI_CONST_STORAGE GUI_BITMAP bmextru;
     77          extern GUI_CONST_STORAGE GUI_BITMAP bmfile;
     78          extern GUI_CONST_STORAGE GUI_BITMAP bmmov;
     79          extern GUI_CONST_STORAGE GUI_BITMAP bmpageDown;
     80          extern GUI_CONST_STORAGE GUI_BITMAP bmpageUp;
     81          extern GUI_CONST_STORAGE GUI_BITMAP bmprinting;
     82          extern GUI_CONST_STORAGE GUI_BITMAP bmreturn;
     83          extern GUI_CONST_STORAGE GUI_BITMAP bmset;
     84          extern GUI_CONST_STORAGE GUI_BITMAP bmzero;
     85          
     86          extern uint8_t gcode_preview_over;
     87          
     88          uint8_t temperature_change_frequency = 1;//”√”⁄œ‘ æŒ¬∂»∏¸–¬µƒ∆µ¬ 
     89          //unsigned char bmp_public_buf[16*1024] = {0};
     90          
     91          extern uint8_t wifi_refresh_flg;
     92          extern void disp_wifi_state();
     93          
     94          extern void filament_dialog_handle(void);
     95          
     96          FIL TEST_FIL1;
     97          uint8_t from_flash_pic;
     98          
     99          DISP_STATE_STACK disp_state_stack;
    100          DISP_STATE disp_state = MAIN_UI;
    101          DISP_STATE last_disp_state;
    102          
    103          char BMP_PIC_X = 0 ;
    104          char BMP_PIC_Y = 0;
    105          
    106          uint32_t To_pre_view;
    107          
    108          static   GUI_HWIN hMainWnd;
    109          static  BUTTON_STRUCT button4;//button1, button2, button3, button4;
    110          
    111          extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz18;
    112          #if _LFN_UNICODE
    113          extern TCHAR curFileName[100];
    114          //TCHAR curFileName[150];
    115          #else
    116          extern char curFileName[100];
    117          //char curFileName[150];
    118          #endif
    119          
    120          extern GUI_CONST_STORAGE GUI_BITMAP bmlogo;
    121          extern GUI_CONST_STORAGE GUI_BITMAP bmpreheat;
    122          
    123          extern CFG_ITMES gCfgItems;
    124          
    125          extern int X_ADD,X_INTERVAL;   //**Õº∆¨º‰∏Ù
    126          extern uint8_t volatile printing_rate_update_flag;
    127          extern volatile uint32_t TimeIncrease;
    128          static volatile uint8_t fan_move_flag;
    129          //extern FILE_PRINT_STATE gCurFileState ;
    130          extern uint8_t fan_change_flag;
    131          
    132          
    133          //PR_STATUS printerStaus = pr_idle;
    134          
    135          #define MAX_TITLE_LEN	28
    136          
    137          static CB_EVENT_STACK gCbEventStack;
    138          //Tan21060406
    139          #define INC_RD_POINT(b)	((b.r_idx+1 == sizeof(b.event) / sizeof(b.event[0])) ? 0 : b.r_idx+1)
    140          #define INC_WR_POINT(b)	((b.w_idx+1 == sizeof(b.event) / sizeof(b.event[0])) ? 0 : b.w_idx+1)
    141          
    142          FIL *srcfp;
    143          

   \                                 In section .text, align 2, keep-with-next
    144          void init_cb_stack()
    145          {
   \                     _Z13init_cb_stackv: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    146          	memset(&gCbEventStack.event, 0, sizeof(gCbEventStack.event));
   \   00000002   0x.... 0x....      LDR.W    R4,??DataTable21
   \   00000006   0x2228             MOVS     R2,#+40
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x4620             MOV      R0,R4
   \   0000000C   0x.... 0x....      BL       memset
    147          	gCbEventStack.r_idx = 0;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x8520             STRH     R0,[R4, #+40]
    148          	gCbEventStack.w_idx = 0;
    149          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    150          

   \                                 In section .text, align 2, keep-with-next
    151          void push_cb_stack(int16_t event_id)
    152          {
   \                     push_cb_stack: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    153          
    154          	if(INC_WR_POINT(gCbEventStack) == gCbEventStack.r_idx) //overflow
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable21
   \   00000006   0xF101 0x0228      ADD      R2,R1,#+40
   \   0000000A   0xF992 0x3001      LDRSB    R3,[R2, #+1]
   \   0000000E   0x1C5C             ADDS     R4,R3,#+1
   \   00000010   0x2C14             CMP      R4,#+20
   \   00000012   0xD100             BNE.N    ??push_cb_stack_0
   \   00000014   0x2400             MOVS     R4,#+0
   \                     ??push_cb_stack_0: (+1)
   \   00000016   0xF991 0x5028      LDRSB    R5,[R1, #+40]
   \   0000001A   0x42AC             CMP      R4,R5
   \   0000001C   0xD00B             BEQ.N    ??push_cb_stack_1
    155          	{
    156          		return;
    157          	}
    158          	gCbEventStack.event[gCbEventStack.w_idx] = event_id;
   \   0000001E   0xF821 0x0013      STRH     R0,[R1, R3, LSL #+1]
    159          	gCbEventStack.w_idx = INC_WR_POINT(gCbEventStack);
   \   00000022   0xF992 0x0001      LDRSB    R0,[R2, #+1]
   \   00000026   0x1C41             ADDS     R1,R0,#+1
   \   00000028   0x2914             CMP      R1,#+20
   \   0000002A   0xD102             BNE.N    ??push_cb_stack_2
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x7050             STRB     R0,[R2, #+1]
   \   00000030   0xE001             B.N      ??push_cb_stack_1
   \                     ??push_cb_stack_2: (+1)
   \   00000032   0x1C40             ADDS     R0,R0,#+1
   \   00000034   0x7050             STRB     R0,[R2, #+1]
    160          	
    161          			
    162          }
   \                     ??push_cb_stack_1: (+1)
   \   00000036   0xBC30             POP      {R4,R5}
   \   00000038   0x4770             BX       LR               ;; return
    163          

   \                                 In section .text, align 2, keep-with-next
    164          int16_t pop_cb_stack()
    165          {
    166          	int16_t ret;
    167          	if(gCbEventStack.r_idx != gCbEventStack.w_idx)
   \                     _Z12pop_cb_stackv: (+1)
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable21
   \   00000004   0xF991 0x2028      LDRSB    R2,[R1, #+40]
   \   00000008   0xF991 0x0029      LDRSB    R0,[R1, #+41]
   \   0000000C   0x4282             CMP      R2,R0
   \   0000000E   0xD00C             BEQ.N    ??pop_cb_stack_0
    168          	{
    169          		ret = gCbEventStack.event[gCbEventStack.r_idx];
   \   00000010   0xF931 0x0012      LDRSH    R0,[R1, R2, LSL #+1]
    170          		gCbEventStack.r_idx = INC_RD_POINT(gCbEventStack);
   \   00000014   0x1C53             ADDS     R3,R2,#+1
   \   00000016   0x2B14             CMP      R3,#+20
   \   00000018   0xD103             BNE.N    ??pop_cb_stack_1
   \   0000001A   0x2200             MOVS     R2,#+0
   \   0000001C   0xF881 0x2028      STRB     R2,[R1, #+40]
   \   00000020   0x4770             BX       LR
   \                     ??pop_cb_stack_1: (+1)
   \   00000022   0x1C52             ADDS     R2,R2,#+1
   \   00000024   0xF881 0x2028      STRB     R2,[R1, #+40]
    171          		return ret;
   \   00000028   0x4770             BX       LR
    172          	
    173          	}
    174          	else
    175          	{
    176          		return -1;
   \                     ??pop_cb_stack_0: (+1)
   \   0000002A   0xF04F 0x30FF      MOV      R0,#-1
   \   0000002E   0x4770             BX       LR               ;; return
    177          	}
    178          	
    179          	
    180          }
    181          

   \                                 In section .text, align 2, keep-with-next
    182          void GUI_callback()
    183          {
    184          	int16_t action_id = pop_cb_stack();
   \                     GUI_callback: (+1)
   \   00000000   0x....             B.N      _Z12pop_cb_stackv
    185          	if(action_id != (int16_t)-1)
    186          	{
    187          		//uid.executeAction(action_id);
    188          	}
    189          }
    190          
    191          

   \                                 In section .text, align 2, keep-with-next
    192          void titleText_cat(char *str, int strSize, char *addPart)
    193          {
   \                     _Z13titleText_catPciS_: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
    194          	if(str == 0 || addPart == 0)
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD010             BEQ.N    ??titleText_cat_0
   \   0000000C   0x2E00             CMP      R6,#+0
   \   0000000E   0xD00E             BEQ.N    ??titleText_cat_0
    195          	{
    196          		return;
    197          	}
    198          
    199          	if(strlen(str) + strlen(addPart) >= strSize)
   \   00000010   0x.... 0x....      BL       strlen
   \   00000014   0x4607             MOV      R7,R0
   \   00000016   0x4630             MOV      R0,R6
   \   00000018   0x.... 0x....      BL       strlen
   \   0000001C   0x19C0             ADDS     R0,R0,R7
   \   0000001E   0x42A8             CMP      R0,R5
   \   00000020   0xD205             BCS.N    ??titleText_cat_0
    200          	{
    201          		return;
    202          	}
    203          
    204          	strcat(str, addPart);
   \   00000022   0x4631             MOV      R1,R6
   \   00000024   0x4620             MOV      R0,R4
   \   00000026   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   0000002A   0x.... 0x....      B.W      strcat
   \                     ??titleText_cat_0: (+1)
   \   0000002E   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    205          }
    206          
    207          static char TitleText[30];
    208          

   \                                 In section .text, align 4, keep-with-next
    209          char *getDispText(int index)
    210          {
   \                     _Z11getDispTexti: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4605             MOV      R5,R0
    211          	memset(TitleText, 0, sizeof(TitleText));
   \   00000004   0x.... 0x....      LDR.W    R4,??DataTable21_1
   \   00000008   0x221E             MOVS     R2,#+30
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0xF104 0x0068      ADD      R0,R4,#+104
   \   00000010   0x.... 0x....      BL       memset
    212          	
    213          	switch(disp_state_stack._disp_state[index])
   \   00000014   0x5728             LDRSB    R0,[R5, R4]
   \   00000016   0x1E40             SUBS     R0,R0,#+1
   \   00000018   0x281F             CMP      R0,#+31
   \   0000001A   0xF200 0x8111      BHI.W    ??getDispText_1
   \   0000001E   0xE8DF 0xF010      TBH      [PC, R0, LSL #+1]
   \                     ??getDispText_0:
   \   00000022   0x0020 0x0028      DC16     0x20,0x28,0x30,0x45
   \              0x0030 0x0045
   \   0000002A   0x004D 0x0062      DC16     0x4D,0x62,0x7B,0x8B
   \              0x007B 0x008B
   \   00000032   0x0093 0x0083      DC16     0x93,0x83,0x10F,0xA8
   \              0x010F 0x00A8
   \   0000003A   0x00B0 0x010F      DC16     0xB0,0x10F,0x10F,0xB8
   \              0x010F 0x00B8
   \   00000042   0x00C0 0x010F      DC16     0xC0,0x10F,0xC8,0x10F
   \              0x00C8 0x010F
   \   0000004A   0x00D0 0x00D8      DC16     0xD0,0xD8,0xE0,0x10F
   \              0x00E0 0x010F
   \   00000052   0x010F 0x00E0      DC16     0x10F,0xE0,0xE8,0xF0
   \              0x00E8 0x00F0
   \   0000005A   0x00F0 0x00F8      DC16     0xF0,0xF8,0x100,0x108
   \              0x0100 0x0108
    214          	{
    215          		case PRINT_READY_UI:
    216          			strcpy(TitleText, main_menu.title);
   \                     ??getDispText_2: (+1)
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable21_2
   \   00000066   0x6801             LDR      R1,[R0, #+0]
   \   00000068   0xF104 0x0068      ADD      R0,R4,#+104
   \   0000006C   0x.... 0x....      BL       strcpy
    217          
    218          			break;
   \   00000070   0xE0E6             B.N      ??getDispText_1
    219          
    220          		case PRINT_FILE_UI:
    221          			strcpy(TitleText, file_menu.title);
   \                     ??getDispText_3: (+1)
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   00000076   0x6801             LDR      R1,[R0, #+0]
   \   00000078   0xF104 0x0068      ADD      R0,R4,#+104
   \   0000007C   0x.... 0x....      BL       strcpy
    222          
    223          			break;
   \   00000080   0xE0DE             B.N      ??getDispText_1
    224          
    225          		case PRINTING_UI:
    226          			if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PRINTING_UI
    227          			#if !defined(TFT35)
    228          			|| disp_state_stack._disp_state[disp_state_stack._disp_index] == OPERATE_UI
    229          			|| disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI
    230          			#endif
    231          			)
   \                     ??getDispText_4: (+1)
   \   00000082   0xF994 0x0064      LDRSB    R0,[R4, #+100]
   \   00000086   0x5700             LDRSB    R0,[R0, R4]
   \   00000088   0x2803             CMP      R0,#+3
   \   0000008A   0xD107             BNE.N    ??getDispText_5
    232          			{
    233          				strcpy(TitleText, common_menu.print_special_title);
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable21_4
   \   00000090   0x6901             LDR      R1,[R0, #+16]
   \   00000092   0xF104 0x0068      ADD      R0,R4,#+104
   \   00000096   0x.... 0x....      BL       strcpy
   \   0000009A   0xE0D1             B.N      ??getDispText_1
    234          			}
    235          			else
    236          			{
    237          				strcpy(TitleText, printing_menu.title);
   \                     ??getDispText_5: (+1)
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable21_5
   \   000000A0   0x6801             LDR      R1,[R0, #+0]
   \   000000A2   0xF104 0x0068      ADD      R0,R4,#+104
   \   000000A6   0x.... 0x....      BL       strcpy
   \   000000AA   0xE0C9             B.N      ??getDispText_1
    238          			}
    239          
    240          			break;
    241          
    242          		case MOVE_MOTOR_UI:
    243          			strcpy(TitleText, move_menu.title);
   \                     ??getDispText_6: (+1)
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable21_6
   \   000000B0   0x6801             LDR      R1,[R0, #+0]
   \   000000B2   0xF104 0x0068      ADD      R0,R4,#+104
   \   000000B6   0x.... 0x....      BL       strcpy
    244          
    245          			break;
   \   000000BA   0xE0C1             B.N      ??getDispText_1
    246          
    247          		case OPERATE_UI:
    248          			if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PRINTING_UI
    249          			#if !defined(TFT35)
    250          			|| disp_state_stack._disp_state[disp_state_stack._disp_index] == OPERATE_UI
    251          			|| disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI
    252          			#endif
    253          			)
   \                     ??getDispText_7: (+1)
   \   000000BC   0xF994 0x0064      LDRSB    R0,[R4, #+100]
   \   000000C0   0x5700             LDRSB    R0,[R0, R4]
   \   000000C2   0x2803             CMP      R0,#+3
   \   000000C4   0xD107             BNE.N    ??getDispText_8
    254          			{
    255          				strcpy(TitleText, common_menu.operate_special_title);
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable21_4
   \   000000CA   0x6981             LDR      R1,[R0, #+24]
   \   000000CC   0xF104 0x0068      ADD      R0,R4,#+104
   \   000000D0   0x.... 0x....      BL       strcpy
   \   000000D4   0xE0B4             B.N      ??getDispText_1
    256          			}
    257          			else
    258          			{
    259          				strcpy(TitleText, operation_menu.title);
   \                     ??getDispText_8: (+1)
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable21_7
   \   000000DA   0x6801             LDR      R1,[R0, #+0]
   \   000000DC   0xF104 0x0068      ADD      R0,R4,#+104
   \   000000E0   0x.... 0x....      BL       strcpy
   \   000000E4   0xE0AC             B.N      ??getDispText_1
    260          			}
   \                     ??getDispText_9: (+1)
   \   000000E6   0xF994 0x0064      LDRSB    R0,[R4, #+100]
   \   000000EA   0x5700             LDRSB    R0,[R0, R4]
   \   000000EC   0x2803             CMP      R0,#+3
   \   000000EE   0xD003             BEQ.N    ??getDispText_10
   \   000000F0   0x2805             CMP      R0,#+5
   \   000000F2   0xD001             BEQ.N    ??getDispText_10
   \   000000F4   0x2806             CMP      R0,#+6
   \   000000F6   0xD107             BNE.N    ??getDispText_11
    261          
    262          			break;
    263          
    264          		case PAUSE_UI:
    265          			if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PRINTING_UI
    266          			|| disp_state_stack._disp_state[disp_state_stack._disp_index] == OPERATE_UI
    267          			|| disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    268          			{
    269          				strcpy(TitleText, common_menu.pause_special_title);
   \                     ??getDispText_10: (+1)
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable21_4
   \   000000FC   0x6941             LDR      R1,[R0, #+20]
   \   000000FE   0xF104 0x0068      ADD      R0,R4,#+104
   \   00000102   0x.... 0x....      BL       strcpy
   \   00000106   0xE09B             B.N      ??getDispText_1
    270          			}
    271          			else
    272          			{
    273          				strcpy(TitleText, pause_menu.title);
   \                     ??getDispText_11: (+1)
   \   00000108   0x.... 0x....      LDR.W    R0,??DataTable21_8
   \   0000010C   0x6801             LDR      R1,[R0, #+0]
   \   0000010E   0xF104 0x0068      ADD      R0,R4,#+104
   \   00000112   0x.... 0x....      BL       strcpy
   \   00000116   0xE093             B.N      ??getDispText_1
    274          			}
    275          
    276          			break;
    277          
    278          		case EXTRUSION_UI:
    279          			strcpy(TitleText, extrude_menu.title);
   \                     ??getDispText_12: (+1)
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable21_9
   \   0000011C   0x6801             LDR      R1,[R0, #+0]
   \   0000011E   0xF104 0x0068      ADD      R0,R4,#+104
   \   00000122   0x.... 0x....      BL       strcpy
    280          
    281          			break;
   \   00000126   0xE08B             B.N      ??getDispText_1
    282          
    283          		case CHANGE_SPEED_UI:
    284          			strcpy(TitleText, speed_menu.title);
   \                     ??getDispText_13: (+1)
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable21_10
   \   0000012C   0x6801             LDR      R1,[R0, #+0]
   \   0000012E   0xF104 0x0068      ADD      R0,R4,#+104
   \   00000132   0x.... 0x....      BL       strcpy
    285          
    286          			break;
   \   00000136   0xE083             B.N      ??getDispText_1
    287          			
    288          		case FAN_UI:
    289          			strcpy(TitleText, fan_menu.title);
   \                     ??getDispText_14: (+1)
   \   00000138   0x.... 0x....      LDR.W    R0,??DataTable21_11
   \   0000013C   0x6801             LDR      R1,[R0, #+0]
   \   0000013E   0xF104 0x0068      ADD      R0,R4,#+104
   \   00000142   0x.... 0x....      BL       strcpy
    290          
    291          			break;
   \   00000146   0xE07B             B.N      ??getDispText_1
    292          			
    293          		case PRE_HEAT_UI:
    294          			if((disp_state_stack._disp_state[disp_state_stack._disp_index - 1] == OPERATE_UI))
   \                     ??getDispText_15: (+1)
   \   00000148   0x.... 0x....      LDR.W    R0,??DataTable21_12
   \   0000014C   0xF994 0x1064      LDRSB    R1,[R4, #+100]
   \   00000150   0x1909             ADDS     R1,R1,R4
   \   00000152   0xF911 0x1C01      LDRSB    R1,[R1, #-1]
   \   00000156   0x2905             CMP      R1,#+5
   \   00000158   0xD105             BNE.N    ??getDispText_16
    295          			{
    296          				strcpy(TitleText,preheat_menu.adjust_title);
   \   0000015A   0x6801             LDR      R1,[R0, #+0]
   \   0000015C   0xF104 0x0068      ADD      R0,R4,#+104
   \   00000160   0x.... 0x....      BL       strcpy
   \   00000164   0xE06C             B.N      ??getDispText_1
    297          
    298          			}
    299          			else
    300          			{
    301          				strcpy(TitleText, preheat_menu.title);
   \                     ??getDispText_16: (+1)
   \   00000166   0x6841             LDR      R1,[R0, #+4]
   \   00000168   0xF104 0x0068      ADD      R0,R4,#+104
   \   0000016C   0x.... 0x....      BL       strcpy
   \   00000170   0xE066             B.N      ??getDispText_1
    302          
    303          			} 			
    304          			break;
    305          
    306          		case SET_UI:
    307          			strcpy(TitleText, set_menu.title);
   \                     ??getDispText_17: (+1)
   \   00000172   0x.... 0x....      LDR.W    R0,??DataTable21_13
   \   00000176   0x6801             LDR      R1,[R0, #+0]
   \   00000178   0xF104 0x0068      ADD      R0,R4,#+104
   \   0000017C   0x.... 0x....      BL       strcpy
    308          
    309          			break;
   \   00000180   0xE05E             B.N      ??getDispText_1
    310          
    311          		case ZERO_UI:
    312          			strcpy(TitleText, home_menu.title);
   \                     ??getDispText_18: (+1)
   \   00000182   0x.... 0x....      LDR.W    R0,??DataTable21_14
   \   00000186   0x6801             LDR      R1,[R0, #+0]
   \   00000188   0xF104 0x0068      ADD      R0,R4,#+104
   \   0000018C   0x.... 0x....      BL       strcpy
    313          
    314          			break;
   \   00000190   0xE056             B.N      ??getDispText_1
    315          
    316          		case SPRAYER_UI:
    317          
    318          			break;
    319          
    320          		case MACHINE_UI:
    321          
    322          			break;
    323          
    324          		case LANGUAGE_UI:
    325          			strcpy(TitleText, language_menu.title);
   \                     ??getDispText_19: (+1)
   \   00000192   0x.... 0x....      LDR.W    R0,??DataTable21_15
   \   00000196   0x6801             LDR      R1,[R0, #+0]
   \   00000198   0xF104 0x0068      ADD      R0,R4,#+104
   \   0000019C   0x.... 0x....      BL       strcpy
    326          
    327          			break;
   \   000001A0   0xE04E             B.N      ??getDispText_1
    328          
    329          		case ABOUT_UI:
    330          			strcpy(TitleText, about_menu.title);
   \                     ??getDispText_20: (+1)
   \   000001A2   0x.... 0x....      LDR.W    R0,??DataTable21_16
   \   000001A6   0x6801             LDR      R1,[R0, #+0]
   \   000001A8   0xF104 0x0068      ADD      R0,R4,#+104
   \   000001AC   0x.... 0x....      BL       strcpy
    331          
    332          			break;
   \   000001B0   0xE046             B.N      ??getDispText_1
    333          
    334          		case LOG_UI:
    335          
    336          			break;
    337          
    338          		case DISK_UI:
    339          			strcpy(TitleText, filesys_menu.title);
   \                     ??getDispText_21: (+1)
   \   000001B2   0x.... 0x....      LDR.W    R0,??DataTable21_17
   \   000001B6   0x6801             LDR      R1,[R0, #+0]
   \   000001B8   0xF104 0x0068      ADD      R0,R4,#+104
   \   000001BC   0x.... 0x....      BL       strcpy
    340          			break;
   \   000001C0   0xE03E             B.N      ??getDispText_1
    341          
    342          		case DIALOG_UI:
    343          			strcpy(TitleText, common_menu.dialog_confirm_title);
   \                     ??getDispText_22: (+1)
   \   000001C2   0x.... 0x....      LDR.W    R0,??DataTable21_4
   \   000001C6   0x6841             LDR      R1,[R0, #+4]
   \   000001C8   0xF104 0x0068      ADD      R0,R4,#+104
   \   000001CC   0x.... 0x....      BL       strcpy
    344          			break;	
   \   000001D0   0xE036             B.N      ??getDispText_1
    345          
    346          		case WIFI_UI:
    347          			strcpy(TitleText, wifi_menu.title);
   \                     ??getDispText_23: (+1)
   \   000001D2   0x.... 0x....      LDR.W    R0,??DataTable21_18
   \   000001D6   0x6801             LDR      R1,[R0, #+0]
   \   000001D8   0xF104 0x0068      ADD      R0,R4,#+104
   \   000001DC   0x.... 0x....      BL       strcpy
    348          
    349          			break;	
   \   000001E0   0xE02E             B.N      ??getDispText_1
    350          		case MORE_UI:
    351          		case PRINT_MORE_UI:
    352          			strcpy(TitleText, more_menu.title);
   \                     ??getDispText_24: (+1)
   \   000001E2   0x.... 0x....      LDR.W    R0,??DataTable21_19
   \   000001E6   0x6801             LDR      R1,[R0, #+0]
   \   000001E8   0xF104 0x0068      ADD      R0,R4,#+104
   \   000001EC   0x.... 0x....      BL       strcpy
    353          
    354          			break;	
   \   000001F0   0xE026             B.N      ??getDispText_1
    355          		case FILAMENTCHANGE_UI:
    356          			strcpy(TitleText, filament_menu.title); 		
   \                     ??getDispText_25: (+1)
   \   000001F2   0x.... 0x....      LDR.W    R0,??DataTable21_20
   \   000001F6   0x6801             LDR      R1,[R0, #+0]
   \   000001F8   0xF104 0x0068      ADD      R0,R4,#+104
   \   000001FC   0x.... 0x....      BL       strcpy
    357          			break;	
   \   00000200   0xE01E             B.N      ??getDispText_1
    358          		case LEVELING_UI:
    359                  case MESHLEVELING_UI:
    360          			strcpy(TitleText, leveling_menu.title); 					
   \                     ??getDispText_26: (+1)
   \   00000202   0x.... 0x....      LDR.W    R0,??DataTable21_21
   \   00000206   0x6801             LDR      R1,[R0, #+0]
   \   00000208   0xF104 0x0068      ADD      R0,R4,#+104
   \   0000020C   0x.... 0x....      BL       strcpy
    361          			break;		
   \   00000210   0xE016             B.N      ??getDispText_1
    362          		case BIND_UI:
    363          			strcpy(TitleText, cloud_menu.title);			
   \                     ??getDispText_27: (+1)
   \   00000212   0x.... 0x....      LDR.W    R0,??DataTable21_22
   \   00000216   0x6801             LDR      R1,[R0, #+0]
   \   00000218   0xF104 0x0068      ADD      R0,R4,#+104
   \   0000021C   0x.... 0x....      BL       strcpy
    364          			break;
   \   00000220   0xE00E             B.N      ??getDispText_1
    365          		case ZOFFSET_UI:
    366          			strcpy(TitleText, zoffset_menu.title);			
   \                     ??getDispText_28: (+1)
   \   00000222   0x.... 0x....      LDR.W    R0,??DataTable21_23
   \   00000226   0x6801             LDR      R1,[R0, #+0]
   \   00000228   0xF104 0x0068      ADD      R0,R4,#+104
   \   0000022C   0x.... 0x....      BL       strcpy
    367          			break;	
   \   00000230   0xE006             B.N      ??getDispText_1
    368          		case TOOL_UI:
    369          			strcpy(TitleText, tool_menu.title);			
   \                     ??getDispText_29: (+1)
   \   00000232   0x.... 0x....      LDR.W    R0,??DataTable21_24
   \   00000236   0x6801             LDR      R1,[R0, #+0]
   \   00000238   0xF104 0x0068      ADD      R0,R4,#+104
   \   0000023C   0x.... 0x....      BL       strcpy
    370          			break;				
    371          		default:
    372          			break;
    373          	}
    374          
    375          	return TitleText;
   \                     ??getDispText_1: (+1)
   \   00000240   0xF104 0x0068      ADD      R0,R4,#+104
   \   00000244   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    376          }

   \                                 In section .bss, align 4
   \                     disp_state_stack:
   \   00000000                      DS8 104
   \   00000068                      DS8 32
   \   00000088                      DS8 100

   \                                 In section .bss, align 1
   \                     last_disp_state:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     BMP_PIC_X:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     BMP_PIC_Y:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
   \                     button4:
   \   00000000                      DS8 24

   \                                 In section .bss, align 4
   \                     gCbEventStack:
   \   00000000                      DS8 44
    377          
    378          static char titleText[100] = {0};
    379          //uint8_t curFileName[30] = {0};
    380          

   \                                 In section .text, align 2, keep-with-next
    381          char *creat_title_text()
    382          {
   \                     creat_title_text: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    383          	int index = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    384          	
    385          	char *tmpText = 0;
    386          	
    387          	TCHAR tmpCurFileStr[20];
    388          	
    389          
    390          	memset(tmpCurFileStr, 0, sizeof(tmpCurFileStr));
   \   00000006   0x2214             MOVS     R2,#+20
   \   00000008   0x4629             MOV      R1,R5
   \   0000000A   0xA800             ADD      R0,SP,#+0
   \   0000000C   0x.... 0x....      BL       memset
    391          
    392          	#if _LFN_UNICODE
    393          	cutFileName((TCHAR *)curFileName, 16, 16, (TCHAR *)tmpCurFileStr);	
    394          	#else
    395          	cutFileName(curFileName, 16, 16, tmpCurFileStr);
   \   00000010   0xAB00             ADD      R3,SP,#+0
   \   00000012   0x2210             MOVS     R2,#+16
   \   00000014   0x4611             MOV      R1,R2
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable21_25
   \   0000001A   0x.... 0x....      BL       cutFileName
    396          	#endif
    397          	
    398          	memset(titleText, 0, sizeof(titleText));
   \   0000001E   0x.... 0x....      LDR.W    R6,??DataTable21_1
   \   00000022   0xF106 0x0488      ADD      R4,R6,#+136
   \   00000026   0x2264             MOVS     R2,#+100
   \   00000028   0x4629             MOV      R1,R5
   \   0000002A   0x4620             MOV      R0,R4
   \   0000002C   0x.... 0x....      BL       memset
   \   00000030   0xE017             B.N      ??creat_title_text_0
    399          	
    400          	while(index <= disp_state_stack._disp_index)
    401          	{
    402          		
    403          		tmpText = getDispText(index);
   \                     ??creat_title_text_1: (+1)
   \   00000032   0x4628             MOV      R0,R5
   \   00000034   0x.... 0x....      BL       _Z11getDispTexti
   \   00000038   0x4602             MOV      R2,R0
    404          		if((*tmpText == 0) || (tmpText == 0))
   \   0000003A   0xF992 0x0000      LDRSB    R0,[R2, #+0]
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD00E             BEQ.N    ??creat_title_text_2
   \   00000042   0x2A00             CMP      R2,#+0
   \   00000044   0xD00C             BEQ.N    ??creat_title_text_2
    405          		{
    406          			index++;
    407          			continue;
    408          		}
    409          		
    410          		titleText_cat(titleText, sizeof(titleText), tmpText);
   \   00000046   0x2164             MOVS     R1,#+100
   \   00000048   0x4620             MOV      R0,R4
   \   0000004A   0x.... 0x....      BL       _Z13titleText_catPciS_
    411          		if(index < disp_state_stack._disp_index)
   \   0000004E   0xF996 0x0064      LDRSB    R0,[R6, #+100]
   \   00000052   0x4285             CMP      R5,R0
   \   00000054   0xDA04             BGE.N    ??creat_title_text_2
    412          		{
    413          			titleText_cat(titleText, sizeof(titleText), ">");
   \   00000056   0x....             ADR.N    R2,??DataTable13  ;; ">"
   \   00000058   0x2164             MOVS     R1,#+100
   \   0000005A   0x4620             MOV      R0,R4
   \   0000005C   0x.... 0x....      BL       _Z13titleText_catPciS_
    414          		}
    415          		
    416          		index++;
   \                     ??creat_title_text_2: (+1)
   \   00000060   0x1C6D             ADDS     R5,R5,#+1
   \                     ??creat_title_text_0: (+1)
   \   00000062   0xF996 0x0064      LDRSB    R0,[R6, #+100]
   \   00000066   0x42A8             CMP      R0,R5
   \   00000068   0xDAE3             BGE.N    ??creat_title_text_1
    417          	}
    418          	
    419          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PRINTING_UI
    420          		/*|| disp_state_stack._disp_state[disp_state_stack._disp_index] == OPERATE_UI
    421          		|| disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI*/)
   \   0000006A   0x5780             LDRSB    R0,[R0, R6]
   \   0000006C   0x2803             CMP      R0,#+3
   \   0000006E   0xD109             BNE.N    ??creat_title_text_3
    422          	{
    423          		titleText_cat(titleText, sizeof(titleText), ":");
   \   00000070   0x....             ADR.N    R2,??DataTable14  ;; ":"
   \   00000072   0x2164             MOVS     R1,#+100
   \   00000074   0x4620             MOV      R0,R4
   \   00000076   0x.... 0x....      BL       _Z13titleText_catPciS_
    424          		titleText_cat(titleText, sizeof(titleText), (char *)tmpCurFileStr);	
   \   0000007A   0xAA00             ADD      R2,SP,#+0
   \   0000007C   0x2164             MOVS     R1,#+100
   \   0000007E   0x4620             MOV      R0,R4
   \   00000080   0x.... 0x....      BL       _Z13titleText_catPciS_
    425          	}
    426          
    427          	if(strlen(titleText) > MAX_TITLE_LEN)
   \                     ??creat_title_text_3: (+1)
   \   00000084   0x4620             MOV      R0,R4
   \   00000086   0x.... 0x....      BL       strlen
   \   0000008A   0x281D             CMP      R0,#+29
   \   0000008C   0xD323             BCC.N    ??creat_title_text_4
    428          	{
    429          		memset(titleText, 0, sizeof(titleText));
   \   0000008E   0x2264             MOVS     R2,#+100
   \   00000090   0x2100             MOVS     R1,#+0
   \   00000092   0x4620             MOV      R0,R4
   \   00000094   0x.... 0x....      BL       memset
    430          	
    431          		tmpText = getDispText(0);
   \   00000098   0x2000             MOVS     R0,#+0
   \   0000009A   0x.... 0x....      BL       _Z11getDispTexti
   \   0000009E   0x4602             MOV      R2,R0
    432          		if(*tmpText != 0)
   \   000000A0   0xF992 0x0000      LDRSB    R0,[R2, #+0]
   \   000000A4   0x2800             CMP      R0,#+0
   \   000000A6   0xD016             BEQ.N    ??creat_title_text_4
    433          		{
    434          			titleText_cat(titleText, sizeof(titleText), tmpText);
   \   000000A8   0x2164             MOVS     R1,#+100
   \   000000AA   0x4620             MOV      R0,R4
   \   000000AC   0x.... 0x....      BL       _Z13titleText_catPciS_
    435          			titleText_cat(titleText, sizeof(titleText), ">...>");
   \   000000B0   0x.... 0x....      ADR.W    R2,`?<Constant ">...>">`
   \   000000B4   0x2164             MOVS     R1,#+100
   \   000000B6   0x4620             MOV      R0,R4
   \   000000B8   0x.... 0x....      BL       _Z13titleText_catPciS_
    436          			tmpText = getDispText(disp_state_stack._disp_index);
   \   000000BC   0xF996 0x0064      LDRSB    R0,[R6, #+100]
   \   000000C0   0x.... 0x....      BL       _Z11getDispTexti
   \   000000C4   0x4602             MOV      R2,R0
    437          			if(*tmpText != 0)
   \   000000C6   0xF992 0x0000      LDRSB    R0,[R2, #+0]
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xD003             BEQ.N    ??creat_title_text_4
    438          			{
    439          				titleText_cat(titleText, sizeof(titleText), tmpText);
   \   000000CE   0x2164             MOVS     R1,#+100
   \   000000D0   0x4620             MOV      R0,R4
   \   000000D2   0x.... 0x....      BL       _Z13titleText_catPciS_
    440          			}
    441          		}
    442          		
    443          	}
    444          
    445          	return titleText;
   \                     ??creat_title_text_4: (+1)
   \   000000D6   0x4620             MOV      R0,R4
   \   000000D8   0xB006             ADD      SP,SP,#+24
   \   000000DA   0xBD70             POP      {R4-R6,PC}       ;; return
    446          }
    447          

   \                                 In section .text, align 2, keep-with-next
    448          void disp_sel_lang()
    449          {
    450          	if(gCfgItems.language == LANG_ENGLISH)
   \                     disp_sel_lang: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable21_26
   \   00000004   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable21_27
   \   0000000C   0xF991 0x10B8      LDRSB    R1,[R1, #+184]
   \   00000010   0x2903             CMP      R1,#+3
   \   00000012   0xD103             BNE.N    ??disp_sel_lang_0
    451          	{
    452          		BUTTON_SetBkColor(button4.btnHandle, BUTTON_CI_UNPRESSED, GUI_FOCUS_CLOLOR);	
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x4611             MOV      R1,R2
   \   00000018   0x.... 0x....      B.W      BUTTON_SetBkColor
    453          		//BUTTON_SetBkColor(button1, BUTTON_CI_UNPRESSED, GUI_BLUE);	
    454          		//BUTTON_SetBkColor(button3, BUTTON_CI_UNPRESSED, GUI_BLUE);	
    455          	}
    456          	/*else if(gCfgItems.language == 3)
    457          	{
    458          		BUTTON_SetBkColor(button3, BUTTON_CI_UNPRESSED, GUI_FOCUS_CLOLOR);	
    459          		BUTTON_SetBkColor(button1, BUTTON_CI_UNPRESSED, GUI_BLUE);	
    460          		BUTTON_SetBkColor(button2, BUTTON_CI_UNPRESSED, GUI_BLUE);	
    461          	}*/
    462          	else
    463          	{
    464          		//BUTTON_SetBkColor(button1, BUTTON_CI_UNPRESSED, GUI_FOCUS_CLOLOR);	
    465          		BUTTON_SetBkColor(button4.btnHandle, BUTTON_CI_UNPRESSED, GUI_BUTTON_COLOR);	
   \                     ??disp_sel_lang_0: (+1)
   \   0000001C   0x2200             MOVS     R2,#+0
   \   0000001E   0x4611             MOV      R1,R2
   \   00000020   0x.... 0x....      B.W      BUTTON_SetBkColor
    466          		//BUTTON_SetBkColor(button3, BUTTON_CI_UNPRESSED, GUI_BLUE);	
    467          	}
    468          		
    469          }
    470          
    471          
    472          

   \                                 In section .text, align 4, keep-with-next
    473          void clear_cur_ui()
    474          {
    475          	last_disp_state = disp_state_stack._disp_state[disp_state_stack._disp_index];
   \                     clear_cur_ui: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable21_1
   \   00000004   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   00000008   0x5608             LDRSB    R0,[R1, R0]
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable21_28
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
    476          	
    477          	switch(disp_state_stack._disp_state[disp_state_stack._disp_index])
   \   00000010   0x1E40             SUBS     R0,R0,#+1
   \   00000012   0x2820             CMP      R0,#+32
   \   00000014   0xD901             BLS.N    ??clear_cur_ui_1
   \   00000016   0x.... 0x....      B.W      GUI_Clear
   \                     ??clear_cur_ui_1: (+1)
   \   0000001A   0xB580             PUSH     {R7,LR}
   \   0000001C   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??clear_cur_ui_0:
   \   00000020   0x11 0x14          DC8      0x11,0x14,0x17,0x1A
   \              0x17 0x1A    
   \   00000024   0x1D 0x20          DC8      0x1D,0x20,0x23,0x2C
   \              0x23 0x2C    
   \   00000028   0x26 0x29          DC8      0x26,0x29,0x55,0x2F
   \              0x55 0x2F    
   \   0000002C   0x32 0x55          DC8      0x32,0x55,0x55,0x35
   \              0x55 0x35    
   \   00000030   0x38 0x55          DC8      0x38,0x55,0x55,0x55
   \              0x55 0x55    
   \   00000034   0x41 0x3B          DC8      0x41,0x3B,0x3E,0x55
   \              0x3E 0x55    
   \   00000038   0x55 0x44          DC8      0x55,0x44,0x55,0x47
   \              0x55 0x47    
   \   0000003C   0x50 0x4A          DC8      0x50,0x4A,0x55,0x4D
   \              0x55 0x4D    
   \   00000040   0x53 0x00          DC8      0x53,0x0
    478          	{
    479          		case PRINT_READY_UI:	
    480          			//Get_Temperature_Flg = 0;
    481          			Clear_ready_print();
   \                     ??clear_cur_ui_2: (+1)
   \   00000042   0x.... 0x....      BL       Clear_ready_print
    482          			break;
   \   00000046   0xE040             B.N      ??clear_cur_ui_3
    483          
    484          		case PRINT_FILE_UI:
    485          			Clear_print_file();
   \                     ??clear_cur_ui_4: (+1)
   \   00000048   0x.... 0x....      BL       Clear_print_file
    486          			break;
   \   0000004C   0xE03D             B.N      ??clear_cur_ui_3
    487          
    488          		case PRINTING_UI:
    489          			Clear_printing();
   \                     ??clear_cur_ui_5: (+1)
   \   0000004E   0x.... 0x....      BL       Clear_printing
    490          			break;
   \   00000052   0xE03A             B.N      ??clear_cur_ui_3
    491          
    492          		case MOVE_MOTOR_UI:
    493          			Clear_move_motor();
   \                     ??clear_cur_ui_6: (+1)
   \   00000054   0x.... 0x....      BL       Clear_move_motor
    494          			break;
   \   00000058   0xE037             B.N      ??clear_cur_ui_3
    495          
    496          		case OPERATE_UI:
    497          			Clear_operate();
   \                     ??clear_cur_ui_7: (+1)
   \   0000005A   0x.... 0x....      BL       Clear_operate
    498          			break;
   \   0000005E   0xE034             B.N      ??clear_cur_ui_3
    499          
    500          		case PAUSE_UI:
    501          			Clear_pause();
   \                     ??clear_cur_ui_8: (+1)
   \   00000060   0x.... 0x....      BL       Clear_pause
    502          			break;
   \   00000064   0xE031             B.N      ??clear_cur_ui_3
    503          
    504          		case EXTRUSION_UI:
    505          			Clear_extrusion();
   \                     ??clear_cur_ui_9: (+1)
   \   00000066   0x.... 0x....      BL       Clear_extrusion
    506          			break;
   \   0000006A   0xE02E             B.N      ??clear_cur_ui_3
    507          
    508          		case PRE_HEAT_UI:
    509          			Clear_preHeat();
   \                     ??clear_cur_ui_10: (+1)
   \   0000006C   0x.... 0x....      BL       Clear_preHeat
    510          			break;
   \   00000070   0xE02B             B.N      ??clear_cur_ui_3
    511          
    512          		case CHANGE_SPEED_UI:
    513          			Clear_changeSpeed();
   \                     ??clear_cur_ui_11: (+1)
   \   00000072   0x.... 0x....      BL       Clear_changeSpeed
    514          			break;
   \   00000076   0xE028             B.N      ??clear_cur_ui_3
    515          
    516          		case FAN_UI:
    517          			Clear_fan();
   \                     ??clear_cur_ui_12: (+1)
   \   00000078   0x.... 0x....      BL       Clear_fan
    518          			break;
   \   0000007C   0xE025             B.N      ??clear_cur_ui_3
    519          
    520          		case SET_UI:
    521          			Clear_Set();
   \                     ??clear_cur_ui_13: (+1)
   \   0000007E   0x.... 0x....      BL       Clear_Set
    522          			break;
   \   00000082   0xE022             B.N      ??clear_cur_ui_3
    523          
    524          		case ZERO_UI:
    525          			Clear_Zero();
   \                     ??clear_cur_ui_14: (+1)
   \   00000084   0x.... 0x....      BL       Clear_Zero
    526          			break;
   \   00000088   0xE01F             B.N      ??clear_cur_ui_3
    527          
    528          		case SPRAYER_UI:
    529          			//Clear_Sprayer();
    530          			break;
    531          
    532          		case MACHINE_UI:
    533          			//Clear_Machine();
    534          			break;
    535          
    536          		case LANGUAGE_UI:
    537          			Clear_Language();
   \                     ??clear_cur_ui_15: (+1)
   \   0000008A   0x.... 0x....      BL       Clear_Language
    538          			break;
   \   0000008E   0xE01C             B.N      ??clear_cur_ui_3
    539          
    540          		case ABOUT_UI:
    541          			Clear_About();
   \                     ??clear_cur_ui_16: (+1)
   \   00000090   0x.... 0x....      BL       Clear_About
    542          			break;
   \   00000094   0xE019             B.N      ??clear_cur_ui_3
    543          
    544          		case LOG_UI:
    545          			//Clear_Connect();
    546          			break;
    547          		case DISK_UI:
    548          			//Clear_Disk();
    549          			break;
    550          		case WIFI_UI:
    551          			Clear_Wifi();
   \                     ??clear_cur_ui_17: (+1)
   \   00000096   0x.... 0x....      BL       Clear_Wifi
    552          			break;
   \   0000009A   0xE016             B.N      ??clear_cur_ui_3
    553          			
    554          		case MORE_UI:
    555          			Clear_more();
   \                     ??clear_cur_ui_18: (+1)
   \   0000009C   0x.... 0x....      BL       Clear_more
    556          			break;
   \   000000A0   0xE013             B.N      ??clear_cur_ui_3
    557          			
    558          		case FILETRANSFER_UI:
    559          			//Clear_fileTransfer();
    560          			break;
    561          		case DIALOG_UI:
    562          			Clear_dialog();
   \                     ??clear_cur_ui_19: (+1)
   \   000000A2   0x.... 0x....      BL       Clear_dialog
    563          			break;			
   \   000000A6   0xE010             B.N      ??clear_cur_ui_3
    564          		case FILETRANSFERSTATE_UI:
    565          		/////	Clear_WifiFileTransferdialog();
    566          			break;
    567          		case PRINT_MORE_UI:
    568          			Clear_Printmore();
   \                     ??clear_cur_ui_20: (+1)
   \   000000A8   0x.... 0x....      BL       Clear_Printmore
    569          			break;
   \   000000AC   0xE00D             B.N      ??clear_cur_ui_3
    570          		case LEVELING_UI:
    571          			Clear_Leveling();//**
   \                     ??clear_cur_ui_21: (+1)
   \   000000AE   0x.... 0x....      BL       Clear_Leveling
    572          			break;
   \   000000B2   0xE00A             B.N      ??clear_cur_ui_3
    573          		case BIND_UI:
    574          			Clear_Bind();
   \                     ??clear_cur_ui_22: (+1)
   \   000000B4   0x.... 0x....      BL       Clear_Bind
    575          			break;
   \   000000B8   0xE007             B.N      ??clear_cur_ui_3
    576          		case ZOFFSET_UI:
    577          			//Clear_Zoffset();
    578          			break;
    579          		case TOOL_UI:
    580          			Clear_Tool();
   \                     ??clear_cur_ui_23: (+1)
   \   000000BA   0x.... 0x....      BL       _Z10Clear_Toolv
    581          			break;
   \   000000BE   0xE004             B.N      ??clear_cur_ui_3
    582                  case MESHLEVELING_UI:
    583                      Clear_MeshLeveling();
   \                     ??clear_cur_ui_24: (+1)
   \   000000C0   0x.... 0x....      BL       Clear_MeshLeveling
    584                      break;
   \   000000C4   0xE001             B.N      ??clear_cur_ui_3
    585                  case HARDWARE_TEST_UI:
    586                      Clear_Hardwaretest();
   \                     ??clear_cur_ui_25: (+1)
   \   000000C6   0x.... 0x....      BL       Clear_Hardwaretest
    587                      break;
    588          
    589          		default:
    590          			break;
    591          	}
    592          	GUI_Clear();
   \                     ??clear_cur_ui_3: (+1)
   \   000000CA   0xE8BD 0x4001      POP      {R0,LR}
   \   000000CE   0x.... 0x....      B.W      GUI_Clear
    593          }
    594          

   \                                 In section .text, align 4, keep-with-next
    595          void draw_return_ui()
    596          {
    597          	if(disp_state_stack._disp_index > 0)
   \                     draw_return_ui: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable21_1
   \   00000004   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   00000008   0x2901             CMP      R1,#+1
   \   0000000A   0xDB52             BLT.N    ??draw_return_ui_1
    598          	{
    599          		disp_state_stack._disp_index--;
   \   0000000C   0x1E49             SUBS     R1,R1,#+1
   \   0000000E   0xF880 0x1064      STRB     R1,[R0, #+100]
    600          		
    601          		switch(disp_state_stack._disp_state[disp_state_stack._disp_index])
   \   00000012   0xB249             SXTB     R1,R1
   \   00000014   0x5608             LDRSB    R0,[R1, R0]
   \   00000016   0x1E40             SUBS     R0,R0,#+1
   \   00000018   0x2820             CMP      R0,#+32
   \   0000001A   0xD84A             BHI.N    ??draw_return_ui_1
   \   0000001C   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??draw_return_ui_0:
   \   00000020   0x11 0x13          DC8      0x11,0x13,0x15,0x21
   \              0x15 0x21    
   \   00000024   0x23 0x25          DC8      0x23,0x25,0x27,0x2D
   \              0x27 0x2D    
   \   00000028   0x29 0x2B          DC8      0x29,0x2B,0x49,0x2F
   \              0x49 0x2F    
   \   0000002C   0x31 0x49          DC8      0x31,0x49,0x49,0x33
   \              0x49 0x33    
   \   00000030   0x35 0x49          DC8      0x35,0x49,0x49,0x49
   \              0x49 0x49    
   \   00000034   0x49 0x37          DC8      0x49,0x37,0x39,0x49
   \              0x39 0x49    
   \   00000038   0x49 0x3B          DC8      0x49,0x3B,0x3D,0x3F
   \              0x3D 0x3F    
   \   0000003C   0x45 0x41          DC8      0x45,0x41,0x49,0x43
   \              0x49 0x43    
   \   00000040   0x47 0x00          DC8      0x47,0x0
    602          		{
    603          			case PRINT_READY_UI:
    604          				draw_ready_print();
   \                     ??draw_return_ui_2: (+1)
   \   00000042   0x.... 0x....      B.W      draw_ready_print
    605          				break;
    606          
    607          
    608          			case PRINT_FILE_UI:
    609          				draw_print_file();
   \                     ??draw_return_ui_3: (+1)
   \   00000046   0x.... 0x....      B.W      draw_print_file
    610          				break;
    611          			case PRINTING_UI:
    612          				if(from_flash_pic == 1)
   \                     ??draw_return_ui_4: (+1)
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable21_29
   \   0000004E   0x7841             LDRB     R1,[R0, #+1]
   \   00000050   0x2901             CMP      R1,#+1
   \   00000052   0xD102             BNE.N    ??draw_return_ui_5
    613          					flash_preview_begin = 1;
   \   00000054   0x2101             MOVS     R1,#+1
   \   00000056   0x7101             STRB     R1,[R0, #+4]
   \   00000058   0xE001             B.N      ??draw_return_ui_6
    614          				else
    615          					default_preview_flg = 1; 
   \                     ??draw_return_ui_5: (+1)
   \   0000005A   0x2101             MOVS     R1,#+1
   \   0000005C   0x7141             STRB     R1,[R0, #+5]
    616          				draw_printing();
   \                     ??draw_return_ui_6: (+1)
   \   0000005E   0x.... 0x....      B.W      draw_printing
    617          				break;
    618          
    619          			case MOVE_MOTOR_UI:
    620          				draw_move_motor();
   \                     ??draw_return_ui_7: (+1)
   \   00000062   0x.... 0x....      B.W      draw_move_motor
    621          				break;
    622          
    623          
    624          			case OPERATE_UI:
    625          				draw_operate();
   \                     ??draw_return_ui_8: (+1)
   \   00000066   0x.... 0x....      B.W      draw_operate
    626          				break;
    627          #if 1
    628          			case PAUSE_UI:
    629          				draw_pause();
   \                     ??draw_return_ui_9: (+1)
   \   0000006A   0x.... 0x....      B.W      draw_pause
    630          				break;
    631          #endif
    632          
    633          			case EXTRUSION_UI:
    634          				draw_extrusion();
   \                     ??draw_return_ui_10: (+1)
   \   0000006E   0x.... 0x....      B.W      draw_extrusion
    635          				break;
    636          
    637          			case PRE_HEAT_UI:
    638          				draw_preHeat();
   \                     ??draw_return_ui_11: (+1)
   \   00000072   0x.... 0x....      B.W      draw_preHeat
    639          				break;
    640          				
    641          			case CHANGE_SPEED_UI:
    642          				draw_changeSpeed();
   \                     ??draw_return_ui_12: (+1)
   \   00000076   0x.... 0x....      B.W      draw_changeSpeed
    643          				break;
    644          
    645          			case FAN_UI:
    646          				draw_fan();
   \                     ??draw_return_ui_13: (+1)
   \   0000007A   0x.... 0x....      B.W      draw_fan
    647          				break;
    648          
    649          			case SET_UI:
    650          				draw_Set();
   \                     ??draw_return_ui_14: (+1)
   \   0000007E   0x.... 0x....      B.W      draw_Set
    651          				break;
    652          
    653          			case ZERO_UI:
    654          				draw_Zero();
   \                     ??draw_return_ui_15: (+1)
   \   00000082   0x.... 0x....      B.W      draw_Zero
    655          				break;
    656          
    657          			case SPRAYER_UI:
    658          				//draw_Sprayer();
    659          				break;
    660          
    661          			case MACHINE_UI:
    662          				//draw_Machine();
    663          				break;
    664          
    665          			case LANGUAGE_UI:
    666          				draw_Language();
   \                     ??draw_return_ui_16: (+1)
   \   00000086   0x.... 0x....      B.W      draw_Language
    667          				break;
    668          
    669          			case ABOUT_UI:
    670          				draw_About();
   \                     ??draw_return_ui_17: (+1)
   \   0000008A   0x.... 0x....      B.W      draw_About
    671          				break;
    672          #if tan_mask
    673          
    674          			case LOG_UI:
    675          				draw_Connect();
    676          				break;
    677          #endif
    678          
    679          			case CALIBRATE_UI:
    680          		////		draw_calibrate();
    681          				break;
    682                          
    683          			case DISK_UI:
    684          				//draw_Disk();
    685          				break;  
    686          				
    687          			case WIFI_UI:
    688          				draw_Wifi();
   \                     ??draw_return_ui_18: (+1)
   \   0000008E   0x.... 0x....      B.W      draw_Wifi
    689          				break;
    690          
    691          			case MORE_UI:
    692          				draw_More();
   \                     ??draw_return_ui_19: (+1)
   \   00000092   0x.... 0x....      B.W      draw_More
    693          				break;
    694          				
    695          			case PRINT_MORE_UI:
    696          				draw_printmore();
   \                     ??draw_return_ui_20: (+1)
   \   00000096   0x.... 0x....      B.W      draw_printmore
    697          				break;
    698          			
    699          			case FILAMENTCHANGE_UI:
    700          				draw_FilamentChange();
   \                     ??draw_return_ui_21: (+1)
   \   0000009A   0x.... 0x....      B.W      draw_FilamentChange
    701          				break;
    702          			case LEVELING_UI:
    703          				draw_leveling();
   \                     ??draw_return_ui_22: (+1)
   \   0000009E   0x.... 0x....      B.W      draw_leveling
    704          				break;
    705          				
    706          			case BIND_UI:
    707          				draw_bind();
   \                     ??draw_return_ui_23: (+1)
   \   000000A2   0x.... 0x....      B.W      draw_bind
    708          				break;
    709          #if tan_mask
    710          			case ZOFFSET_UI:
    711          				draw_Zoffset();
    712          				break;
    713          #endif
    714          			case TOOL_UI:
    715          				draw_tool();
   \                     ??draw_return_ui_24: (+1)
   \   000000A6   0x.... 0x....      B.W      _Z9draw_toolv
    716          				break;
    717                      case MESHLEVELING_UI:
    718                          draw_meshleveling();
   \                     ??draw_return_ui_25: (+1)
   \   000000AA   0x.... 0x....      B.W      draw_meshleveling
    719                          break;
    720                      case HARDWARE_TEST_UI:
    721                          draw_Hardwaretest();
   \                     ??draw_return_ui_26: (+1)
   \   000000AE   0x.... 0x....      B.W      draw_Hardwaretest
    722                          break;
    723          
    724          			default:
    725          				break;
    726          		}
    727          	}
    728          
    729          	
    730          }
   \                     ??draw_return_ui_1: (+1)
   \   000000B2   0x4770             BX       LR               ;; return
    731          

   \                                 In section .text, align 2, keep-with-next
    732          void gui_view_init()
    733          {
   \                     gui_view_init: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    734          /*
    735          	gCfgItems.custom_pic_flag = 1;
    736          	gCfgItems.language = LANG_SIMPLE_CHINESE;
    737          	gCfgItems.background_color = GUI_BK_CLOLOR;
    738          	gCfgItems.title_color = GUI_TITLE_TEXT_COLOR;
    739          	gCfgItems.state_background_color = GUI_STATE_COLOR;
    740          	gCfgItems.state_text_color = GUI_STATE_TEXT_COLOR;
    741          	gCfgItems.filename_color = GUI_FILE_NAME_TEXT_COLOR;
    742          	gCfgItems.filename_background_color = GUI_FILE_NAME_BK_COLOR;
    743          	gCfgItems.printingstate_word_background_color = GUI_PRINTING_STATE_BK_COLOR;
    744          	gCfgItems.printingstate_word_color = GUI_PRINTING_STATE_TEXT_COLOR;
    745          	//gCfgItems.language = 3;
    746          */	
    747          #if 0
    748          	if(gCfgItems.language == LANG_COMPLEX_CHINESE)
    749          	{
    750          		GUI_SetFont(&GUI_FontHZ16);
    751          	}
    752          	else
    753          	{
    754          		GUI_SetFont(&FONT_TITLE);
    755          	}
    756          
    757          	GUI_SetBkColor(gCfgItems.background_color);
    758          	
    759          	BUTTON_SetDefaultTextAlign(GUI_TA_BOTTOM | GUI_TA_HCENTER);
    760          	if(gCfgItems.language == LANG_COMPLEX_CHINESE)
    761          	{
    762          		BUTTON_SetDefaultFont(&GUI_FontHZ16);
    763          	}
    764          	else
    765          	{
    766          		BUTTON_SetDefaultFont(&FONT_TITLE);
    767          	}
    768          
    769          	if(gCfgItems.language == LANG_COMPLEX_CHINESE)
    770          	{
    771          		TEXT_SetDefaultFont(&GUI_FontHZ16);
    772          	}
    773          	else
    774          	{
    775          		TEXT_SetDefaultFont(&FONT_TITLE);
    776          	}
    777          	//BUTTON_SetDefaultFont(&FONT_BUTTON);	
    778          /*	
    779          	BUTTON_SetDefaultBkColor(GUI_BUTTON_COLOR, BUTTON_CI_UNPRESSED);
    780          	BUTTON_SetDefaultBkColor(GUI_BUTTON_COLOR, BUTTON_CI_PRESSED);
    781          	BUTTON_SetDefaultTextColor(GUI_WHITE, BUTTON_CI_UNPRESSED);
    782          	BUTTON_SetDefaultTextColor(GUI_WHITE, BUTTON_CI_PRESSED);
    783          */
    784          #endif
    785          	GUI_SetFont(&FONT_TITLE);
   \   00000002   0x.... 0x....      LDR.W    R4,??DataTable21_30
   \   00000006   0x4620             MOV      R0,R4
   \   00000008   0x.... 0x....      BL       GUI_SetFont
    786          	BUTTON_SetDefaultFont(&FONT_TITLE);
   \   0000000C   0x4620             MOV      R0,R4
   \   0000000E   0x.... 0x....      BL       BUTTON_SetDefaultFont
    787          	TEXT_SetDefaultFont(&FONT_TITLE);
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       TEXT_SetDefaultFont
    788          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000018   0x.... 0x....      LDR.W    R4,??DataTable21_27
   \   0000001C   0x6860             LDR      R0,[R4, #+4]
   \   0000001E   0x.... 0x....      BL       GUI_SetBkColor
    789          	BUTTON_SetDefaultTextAlign(GUI_TA_BOTTOM | GUI_TA_HCENTER);
   \   00000022   0x2006             MOVS     R0,#+6
   \   00000024   0x.... 0x....      BL       BUTTON_SetDefaultTextAlign
    790          
    791          	BUTTON_SetDefaultBkColor(gCfgItems.background_color, BUTTON_CI_UNPRESSED);
   \   00000028   0x2100             MOVS     R1,#+0
   \   0000002A   0x6860             LDR      R0,[R4, #+4]
   \   0000002C   0x.... 0x....      BL       BUTTON_SetDefaultBkColor
    792          	BUTTON_SetDefaultBkColor(gCfgItems.background_color, BUTTON_CI_PRESSED);
   \   00000030   0x2101             MOVS     R1,#+1
   \   00000032   0x6860             LDR      R0,[R4, #+4]
   \   00000034   0x.... 0x....      BL       BUTTON_SetDefaultBkColor
    793          	BUTTON_SetDefaultTextColor(gCfgItems.title_color, BUTTON_CI_UNPRESSED);
   \   00000038   0x1D25             ADDS     R5,R4,#+4
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0x6868             LDR      R0,[R5, #+4]
   \   0000003E   0x.... 0x....      BL       BUTTON_SetDefaultTextColor
    794          	BUTTON_SetDefaultTextColor(gCfgItems.title_color, BUTTON_CI_PRESSED);
   \   00000042   0x2101             MOVS     R1,#+1
   \   00000044   0x6868             LDR      R0,[R5, #+4]
   \   00000046   0x.... 0x....      BL       BUTTON_SetDefaultTextColor
    795          	if(gCfgItems.button_3d_effect_flag != 1)
   \   0000004A   0xF894 0x00CC      LDRB     R0,[R4, #+204]
   \   0000004E   0x2801             CMP      R0,#+1
   \   00000050   0xD003             BEQ.N    ??gui_view_init_0
    796          	{
    797          		WIDGET_SetDefaultEffect(&WIDGET_Effect_Simple);
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable21_31
   \   00000056   0x.... 0x....      BL       WIDGET_SetDefaultEffect
    798          	}
    799          
    800          	init_cb_stack();
   \                     ??gui_view_init_0: (+1)
   \   0000005A   0xE8BD 0x4031      POP      {R0,R4,R5,LR}
   \   0000005E   0x....             B.N      _Z13init_cb_stackv
    801          }
    802          
    803          //**

   \                                 In section .text, align 2, keep-with-next
    804          int8_t get_printing_rate(FIL *fileHandle)
    805          {
   \                     get_printing_rate: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    806          	int8_t rate;
    807          	
    808          	if(fileHandle == 0)
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD00A             BEQ.N    ??get_printing_rate_0
    809          		return -1;
    810          
    811          	if(fileHandle->fptr == 0)
   \   00000006   0xF8D0 0x1208      LDR      R1,[R0, #+520]
   \   0000000A   0x2900             CMP      R1,#+0
   \   0000000C   0xD006             BEQ.N    ??get_printing_rate_0
   \   0000000E   0xF500 0x7002      ADD      R0,R0,#+520
   \   00000012   0x6844             LDR      R4,[R0, #+4]
   \   00000014   0x2C00             CMP      R4,#+0
   \   00000016   0xD001             BEQ.N    ??get_printing_rate_0
    812          		return -1;
    813          
    814          	if(fileHandle->fsize == 0)
    815          		return -1;
    816          
    817          	if(fileHandle->fptr > fileHandle->fsize)
   \   00000018   0x428C             CMP      R4,R1
   \   0000001A   0xD202             BCS.N    ??get_printing_rate_1
    818          		return -1;
   \                     ??get_printing_rate_0: (+1)
   \   0000001C   0xF04F 0x30FF      MOV      R0,#-1
   \   00000020   0xBD32             POP      {R1,R4,R5,PC}
    819          	
    820          	//if(from_flash_pic != 1)
    821          	{
    822          		rate = (unsigned char)((float)f_tell(fileHandle)  * 100 / f_size(fileHandle));
   \                     ??get_printing_rate_1: (+1)
   \   00000022   0x4608             MOV      R0,R1
   \   00000024   0x.... 0x....      BL       __aeabi_ui2f
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable21_32  ;; 0x42c80000
   \   0000002C   0x.... 0x....      BL       __aeabi_fmul
   \   00000030   0x4605             MOV      R5,R0
   \   00000032   0x4620             MOV      R0,R4
   \   00000034   0x.... 0x....      BL       __aeabi_ui2f
   \   00000038   0x4601             MOV      R1,R0
   \   0000003A   0x4628             MOV      R0,R5
   \   0000003C   0x.... 0x....      BL       __aeabi_fdiv
   \   00000040   0x.... 0x....      BL       __aeabi_f2iz
    823          	}
    824              #if 0
    825          	else
    826          	{
    827          		rate = (unsigned char)(((float)f_tell(fileHandle)-(PREVIEW_SIZE+To_pre_view))  * 100 / (f_size(fileHandle)-(PREVIEW_SIZE+To_pre_view)));
    828          	}
    829          #endif
    830          
    831          
    832          	if((rate == 100) && (mksReprint.mks_printer_state != MKS_IDLE))	
   \   00000044   0xB240             SXTB     R0,R0
   \   00000046   0x2864             CMP      R0,#+100
   \   00000048   0xD106             BNE.N    ??get_printing_rate_2
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable21_33
   \   0000004E   0xF891 0x10B4      LDRB     R1,[R1, #+180]
   \   00000052   0x29A6             CMP      R1,#+166
   \   00000054   0xD000             BEQ.N    ??get_printing_rate_2
    833          	{
    834          		rate = 99;
   \   00000056   0x2063             MOVS     R0,#+99
    835          	}
    836          
    837          	if((rate == 99) && (mksReprint.mks_printer_state == MKS_IDLE))	
   \                     ??get_printing_rate_2: (+1)
   \   00000058   0x2863             CMP      R0,#+99
   \   0000005A   0xD106             BNE.N    ??get_printing_rate_3
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable21_33
   \   00000060   0xF891 0x10B4      LDRB     R1,[R1, #+180]
   \   00000064   0x29A6             CMP      R1,#+166
   \   00000066   0xD100             BNE.N    ??get_printing_rate_3
    838          	{
    839          		rate = 100;
   \   00000068   0x2064             MOVS     R0,#+100
    840          	}
    841          	
    842          
    843          	gCurFileState.totalSend = rate;
   \                     ??get_printing_rate_3: (+1)
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable21_34
   \   0000006E   0xF8C1 0x0238      STR      R0,[R1, #+568]
    844          
    845          	return  rate;
   \   00000072   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    846          
    847          }
    848          
    849          #if 1
    850          extern uint16_t z_high_count;
    851          extern uint8_t move_speed_flg;
    852          

   \                                 In section .text, align 4, keep-with-next
    853          void GUI_RefreshPage()
    854          {
   \                     GUI_RefreshPage: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    855          
    856            		__IO uint32_t i =0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x9000             STR      R0,[SP, #+0]
    857          		switch(disp_state)
   \   00000008   0x.... 0x....      LDR.W    R4,??DataTable21_29
   \   0000000C   0xF994 0x0006      LDRSB    R0,[R4, #+6]
   \   00000010   0x281E             CMP      R0,#+30
   \   00000012   0xF200 0x80B9      BHI.W    ??GUI_RefreshPage_1
   \   00000016   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??GUI_RefreshPage_0:
   \   0000001A   0x10 0xB7          DC8      0x10,0xB7,0xB7,0x25
   \              0xB7 0x25    
   \   0000001E   0x6B 0x51          DC8      0x6B,0x51,0x5B,0x13
   \              0x5B 0x13    
   \   00000022   0x63 0x1C          DC8      0x63,0x1C,0xB7,0xB7
   \              0xB7 0xB7    
   \   00000026   0xB7 0xB7          DC8      0xB7,0xB7,0xB7,0xB7
   \              0xB7 0xB7    
   \   0000002A   0xB7 0xB7          DC8      0xB7,0xB7,0xB7,0xB7
   \              0xB7 0xB7    
   \   0000002E   0xB7 0xB2          DC8      0xB7,0xB2,0x9D,0xB7
   \              0x9D 0xB7    
   \   00000032   0xB7 0xB7          DC8      0xB7,0xB7,0xB7,0xAA
   \              0xB7 0xAA    
   \   00000036   0xB7 0xB5          DC8      0xB7,0xB5,0xA7,0x0
   \              0xA7 0x00    
    858          		{
    859          		      case MAIN_UI:                                                    //**
    860          				
    861          				//if(logo_time * TICK_CYCLE >= 3000 )
    862          				//{
    863          					
    864          				//	clear_main_ui();
    865          				//	last_disp_state = MAIN_UI;
    866          					draw_ready_print();
   \                     ??GUI_RefreshPage_2: (+1)
   \   0000003A   0x.... 0x....      BL       draw_ready_print
    867          					
    868          				//}
    869          				break;
   \   0000003E   0xE0A3             B.N      ??GUI_RefreshPage_1
    870          			case EXTRUSION_UI:  
    871          				if(temperature_change_frequency == 1)
   \                     ??GUI_RefreshPage_3: (+1)
   \   00000040   0x7820             LDRB     R0,[R4, #+0]
   \   00000042   0x2801             CMP      R0,#+1
   \   00000044   0xF040 0x80A0      BNE.W    ??GUI_RefreshPage_1
    872          				{
    873          					temperature_change_frequency = 0;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x7020             STRB     R0,[R4, #+0]
    874          					disp_sprayer_temp();
   \   0000004C   0x.... 0x....      BL       disp_sprayer_temp
   \   00000050   0xE09A             B.N      ??GUI_RefreshPage_1
    875          				}
    876          				break;
    877          			case PRE_HEAT_UI:
    878          				if(temperature_change_frequency == 1)
   \                     ??GUI_RefreshPage_4: (+1)
   \   00000052   0x7820             LDRB     R0,[R4, #+0]
   \   00000054   0x2801             CMP      R0,#+1
   \   00000056   0xF040 0x8097      BNE.W    ??GUI_RefreshPage_1
    879          				{
    880          					temperature_change_frequency = 0;
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x7020             STRB     R0,[R4, #+0]
    881          					disp_desire_temp();
   \   0000005E   0x.... 0x....      BL       disp_desire_temp
   \   00000062   0xE091             B.N      ??GUI_RefreshPage_1
    882          				}
    883          				break;
    884          
    885          			case PRINT_READY_UI:
    886          			/*	if(fan_move_flag)
    887          				{
    888          					fan_move_flag = 0;
    889          					disp_fan_move();
    890          				}*/
    891          				break;
    892          
    893          			case PRINT_FILE_UI:
    894          				break;
    895          
    896          			case PRINTING_UI:
    897          				/*if(temperature_change_frequency == 1)
    898          				{
    899          					temperature_change_frequency = 0;
    900          					disp_sprayer_tem_printing();
    901          					disp_bed_temp_printing();
    902          				}
    903          				setProBarRate();
    904          				#if VERSION_WITH_PIC
    905          				disp_fan_move_printing();
    906          				#endif
    907          				break;*/
    908          				if(temperature_change_frequency)
   \                     ??GUI_RefreshPage_5: (+1)
   \   00000064   0x7820             LDRB     R0,[R4, #+0]
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD007             BEQ.N    ??GUI_RefreshPage_6
    909          					{
    910          						temperature_change_frequency = 0;
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x7020             STRB     R0,[R4, #+0]
    911          						disp_sprayer_tem_printing();
   \   0000006E   0x.... 0x....      BL       disp_sprayer_tem_printing
    912          						disp_bed_temp_printing();
   \   00000072   0x.... 0x....      BL       disp_bed_temp_printing
    913          						disp_print_time();
   \   00000076   0x.... 0x....      BL       disp_print_time
    914          					}
    915          					if(printing_rate_update_flag)
   \                     ??GUI_RefreshPage_6: (+1)
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable21_35
   \   0000007E   0x7801             LDRB     R1,[R0, #+0]
   \   00000080   0x2900             CMP      R1,#+0
   \   00000082   0xD006             BEQ.N    ??GUI_RefreshPage_7
    916          					{
    917          						printing_rate_update_flag = 0;
   \   00000084   0x2100             MOVS     R1,#+0
   \   00000086   0x7001             STRB     R1,[R0, #+0]
    918          						if(gcode_preview_over == 0)
   \   00000088   0x78E0             LDRB     R0,[R4, #+3]
   \   0000008A   0x2800             CMP      R0,#+0
   \   0000008C   0xD101             BNE.N    ??GUI_RefreshPage_7
    919          						{
    920          							setProBarRate(/*get_printing_rate(srcfp)*/);
   \   0000008E   0x.... 0x....      BL       setProBarRate
    921          						}
    922          					}
    923          					if(!(TimeIncrease * TICK_CYCLE % 100))	// 0.1s
   \                     ??GUI_RefreshPage_7: (+1)
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable21_36
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0x2164             MOVS     R1,#+100
   \   0000009A   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   0000009E   0x2264             MOVS     R2,#+100
   \   000000A0   0xFB02 0x0011      MLS      R0,R2,R1,R0
   \   000000A4   0x2800             CMP      R0,#+0
   \   000000A6   0xD101             BNE.N    ??GUI_RefreshPage_8
    924          					{		
    925          						fan_move_flag = 1;
   \   000000A8   0x2001             MOVS     R0,#+1
   \   000000AA   0x70A0             STRB     R0,[R4, #+2]
    926          					}
    927          					#if VERSION_WITH_PIC
    928          					if(fan_move_flag)
   \                     ??GUI_RefreshPage_8: (+1)
   \   000000AC   0x78A0             LDRB     R0,[R4, #+2]
   \   000000AE   0x2800             CMP      R0,#+0
   \   000000B0   0xD06A             BEQ.N    ??GUI_RefreshPage_1
    929          					{
    930          						fan_move_flag = 0;
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x70A0             STRB     R0,[R4, #+2]
    931          						disp_fan_move_printing();
   \   000000B6   0x.... 0x....      BL       disp_fan_move_printing
   \   000000BA   0xE065             B.N      ??GUI_RefreshPage_1
    932          					}
    933          					#endif
    934          					
    935          					#if tan_mask
    936          					if(move_speed_flg == 1)
    937          					{
    938          						move_speed_flg =0;
    939          						disp_printing_speed();
    940          					}
    941          					#endif
    942          					
    943          					break;
    944          #if 1
    945          
    946          			case OPERATE_UI:
    947          				if(temperature_change_frequency == 1)
   \                     ??GUI_RefreshPage_9: (+1)
   \   000000BC   0x7820             LDRB     R0,[R4, #+0]
   \   000000BE   0x2801             CMP      R0,#+1
   \   000000C0   0xD103             BNE.N    ??GUI_RefreshPage_10
    948          				{
    949          					temperature_change_frequency = 0;
   \   000000C2   0x2000             MOVS     R0,#+0
   \   000000C4   0x7020             STRB     R0,[R4, #+0]
    950          					disp_temp_operate();
   \   000000C6   0x.... 0x....      BL       disp_temp_operate
    951          				}
    952          				
    953          				setProBarRateOpera();
   \                     ??GUI_RefreshPage_10: (+1)
   \   000000CA   0x.... 0x....      BL       setProBarRateOpera
    954          
    955          					break;
   \   000000CE   0xE05B             B.N      ??GUI_RefreshPage_1
    956          
    957          			case PAUSE_UI:
    958          				if(temperature_change_frequency == 1)
   \                     ??GUI_RefreshPage_11: (+1)
   \   000000D0   0x7820             LDRB     R0,[R4, #+0]
   \   000000D2   0x2801             CMP      R0,#+1
   \   000000D4   0xD158             BNE.N    ??GUI_RefreshPage_1
    959          				{
    960          					temperature_change_frequency = 0;
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x7020             STRB     R0,[R4, #+0]
    961          					disp_temp_pause();
   \   000000DA   0x.... 0x....      BL       disp_temp_pause
   \   000000DE   0xE053             B.N      ??GUI_RefreshPage_1
    962          				}
    963          				
    964          				break;
    965          #endif			
    966          			case FAN_UI:
    967          				if(temperature_change_frequency == 1)
   \                     ??GUI_RefreshPage_12: (+1)
   \   000000E0   0x7820             LDRB     R0,[R4, #+0]
   \   000000E2   0x2801             CMP      R0,#+1
   \   000000E4   0xD150             BNE.N    ??GUI_RefreshPage_1
    968          				{
    969          					temperature_change_frequency = 0;
   \   000000E6   0x2000             MOVS     R0,#+0
   \   000000E8   0x7020             STRB     R0,[R4, #+0]
    970          					disp_fan_speed();
   \   000000EA   0x.... 0x....      BL       disp_fan_speed
   \   000000EE   0xE04B             B.N      ??GUI_RefreshPage_1
    971          				}
    972          				break;
    973          					
    974          			case MOVE_MOTOR_UI:
    975          				#if 1
    976          				//œ‘ æZ÷·◊¯±Í
    977          				if(mksReprint.mks_printer_state == MKS_IDLE)
   \                     ??GUI_RefreshPage_13: (+1)
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable21_33
   \   000000F4   0xF890 0x00B4      LDRB     R0,[R0, #+180]
   \   000000F8   0x28A6             CMP      R0,#+166
   \   000000FA   0xD145             BNE.N    ??GUI_RefreshPage_1
    978          				{
    979          					if((z_high_count==1)&&(temper_error_flg != 1)) //√ø∏Ù500msœ‘ æ“ª¥Œ
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable21_37
   \   00000100   0x8801             LDRH     R1,[R0, #+0]
   \   00000102   0x2901             CMP      R1,#+1
   \   00000104   0xD140             BNE.N    ??GUI_RefreshPage_1
   \   00000106   0x.... 0x....      LDR.W    R1,??DataTable21_38
   \   0000010A   0x7809             LDRB     R1,[R1, #+0]
   \   0000010C   0x2901             CMP      R1,#+1
   \   0000010E   0xD03B             BEQ.N    ??GUI_RefreshPage_1
    980          					{
    981          						z_high_count = 0;
   \   00000110   0x2100             MOVS     R1,#+0
   \   00000112   0x8001             STRH     R1,[R0, #+0]
    982          						//if((current_position[Z_AXIS] != zpos_bak)||current_position[Z_AXIS]=0)
    983          						{
    984          							//zpos_bak = current_position[Z_AXIS];
    985          							memset((char *)gCfgItems.move_z_coordinate,' ',sizeof(gCfgItems.move_z_coordinate));
   \   00000114   0x.... 0x....      LDR.W    R4,??DataTable21_39
   \   00000118   0x2214             MOVS     R2,#+20
   \   0000011A   0x2120             MOVS     R1,#+32
   \   0000011C   0x4620             MOV      R0,R4
   \   0000011E   0x.... 0x....      BL       memset
    986          							GUI_DispStringAt((const char *)gCfgItems.move_z_coordinate,380, TITLE_YPOS);
   \   00000122   0x2205             MOVS     R2,#+5
   \   00000124   0xF44F 0x71BE      MOV      R1,#+380
   \   00000128   0x4620             MOV      R0,R4
   \   0000012A   0x.... 0x....      BL       GUI_DispStringAt
    987          							sprintf((char *)gCfgItems.move_z_coordinate,"Z: %.3f",current_position[Z_AXIS]);
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable21_40
   \   00000132   0x6880             LDR      R0,[R0, #+8]
   \   00000134   0x.... 0x....      BL       __aeabi_f2d
   \   00000138   0x4602             MOV      R2,R0
   \   0000013A   0x460B             MOV      R3,R1
   \   0000013C   0x.... 0x....      ADR.W    R1,`?<Constant "Z: %.3f">`
   \   00000140   0x4620             MOV      R0,R4
   \   00000142   0x.... 0x....      BL       sprintf
    988          							GUI_DispStringAt((const char *)gCfgItems.move_z_coordinate,380, TITLE_YPOS);
   \   00000146   0x2205             MOVS     R2,#+5
   \   00000148   0xF44F 0x71BE      MOV      R1,#+380
   \   0000014C   0x4620             MOV      R0,R4
   \   0000014E   0x.... 0x....      BL       GUI_DispStringAt
   \   00000152   0xE019             B.N      ??GUI_RefreshPage_1
    989          						}
    990          					}
    991          				}
    992          				#endif
    993          				break;
    994          
    995          		case WIFI_UI:
    996          			if(wifi_refresh_flg == 1)
   \                     ??GUI_RefreshPage_14: (+1)
   \   00000154   0x.... 0x....      LDR.W    R4,??DataTable21_41
   \   00000158   0x7820             LDRB     R0,[R4, #+0]
   \   0000015A   0x2801             CMP      R0,#+1
   \   0000015C   0xD114             BNE.N    ??GUI_RefreshPage_1
    997          			{					
    998          				disp_wifi_state();
   \   0000015E   0x.... 0x....      BL       disp_wifi_state
    999          				wifi_refresh_flg = 0;
   \   00000162   0x2000             MOVS     R0,#+0
   \   00000164   0x7020             STRB     R0,[R4, #+0]
   \   00000166   0xE00F             B.N      ??GUI_RefreshPage_1
   1000          			}
   1001          			break;
   1002                  case BIND_UI:
   1003                      refresh_bind_ui();
   \                     ??GUI_RefreshPage_15: (+1)
   \   00000168   0x.... 0x....      BL       refresh_bind_ui
   1004                      break;
   \   0000016C   0xE00C             B.N      ??GUI_RefreshPage_1
   1005          
   1006          		case FILAMENTCHANGE_UI:
   1007          			if(temperature_change_frequency)
   \                     ??GUI_RefreshPage_16: (+1)
   \   0000016E   0x7820             LDRB     R0,[R4, #+0]
   \   00000170   0x2800             CMP      R0,#+0
   \   00000172   0xD009             BEQ.N    ??GUI_RefreshPage_1
   1008          			{
   1009          				temperature_change_frequency = 0;
   \   00000174   0x2000             MOVS     R0,#+0
   \   00000176   0x7020             STRB     R0,[R4, #+0]
   1010          				disp_filament_sprayer_temp();
   \   00000178   0x.... 0x....      BL       disp_filament_sprayer_temp
   \   0000017C   0xE004             B.N      ??GUI_RefreshPage_1
   1011          			}
   1012          			//FilamentChange_handle();
   1013          			break;
   1014          		case DIALOG_UI:
   1015          			filament_dialog_handle();
   \                     ??GUI_RefreshPage_17: (+1)
   \   0000017E   0x.... 0x....      BL       _Z22filament_dialog_handlev
   1016          			break;		
   \   00000182   0xE001             B.N      ??GUI_RefreshPage_1
   1017          		case MESHLEVELING_UI:
   1018                      disp_zpos();
   \                     ??GUI_RefreshPage_18: (+1)
   \   00000184   0x.... 0x....      BL       disp_zpos
   1019                      break;
   1020          		case HARDWARE_TEST_UI:
   1021          			//disp_temp_test();
   1022          			break;            
   1023          	    default:
   1024          				break;
   1025          				
   1026          	    }
   1027          		
   1028          		print_time_run();
   \                     ??GUI_RefreshPage_1: (+1)
   \   00000188   0xE8BD 0x4013      POP      {R0,R1,R4,LR}
   \   0000018C   0x.... 0x....      B.W      print_time_run
   1029          
   1030          	
   1031          }
   1032          	#endif
   1033          //tan 20160830
   1034          /*
   1035          void BUTTON_SetBmpFileName(BUTTON_STRUCT *btnStruct, const uint8_t *picName)
   1036          {
   1037          
   1038          	btnStruct->btnPic.XSize = 78;
   1039          	btnStruct->btnPic.YSize = 104;
   1040          	btnStruct->btnPic.BytesPerLine = 160;
   1041          	btnStruct->btnPic.BitsPerPixel = 16;
   1042          	btnStruct->btnPic.pPal = NULL;
   1043          	btnStruct->btnPic.pMethods = GUI_DRAW_BMPM565;
   1044          	btnStruct->btnPic.pData = bmp_public_buf;
   1045          	bindBmpFileData(&btnStruct->btnPic.pData, (uint8_t *)picName);
   1046          	
   1047          	BUTTON_SetBitmapEx(btnStruct->btnHandle, 0, &btnStruct->btnPic, BMP_PIC_X, BMP_PIC_Y);
   1048          
   1049          	BUTTON_SetFocussable(btnStruct->btnHandle, 0);
   1050          }
   1051          */
   1052          //unsigned char bmp_public_buf[1280] = {0};
   1053          #if 0
   1054          FATFS SDFatFs_logo;  /* File system object for SD card logical drive */
   1055          FIL MyFile_logo;     /* File object */
   1056          static unsigned long lseek_length;
   1057          void DRAW_LOGO()
   1058          {
   1059          	int index; 
   1060          	int x_off = 0, y_off = 0;
   1061          	int _x, _y;
   1062          	uint16_t *p_index;
   1063          	volatile int i;
   1064          
   1065          
   1066          	bool testStatus = false;
   1067          
   1068          	FRESULT res;																					/* FatFs function common result code */
   1069          	uint32_t byteswritten, bytesread; 										/* File write/read counts */
   1070          
   1071          	/*##-1- Link the micro SD disk I/O driver ##################################*/
   1072          	//¡¥Ω” SD µ◊≤„«˝∂Ø∫Ø ˝µΩ FATFS Œƒº˛œµÕ≥£¨’‚∏ˆ‘⁄ MX_FATFS_Init()∫Ø ˝÷–“—æ≠ÕÍ≥…
   1073          	//if(FATFS_LinkDriver(&SD_Driver, SD_Path) == 0)
   1074          	{
   1075          		/*##-2- Register the file system object to the FatFs module ##############*/
   1076          		if(f_mount(&SDFatFs_logo, (TCHAR const*)SD_Path, 0) != FR_OK)
   1077          		{
   1078          			/* FatFs Initialization Error */
   1079          			Error_Handler();
   1080          		}
   1081          		else
   1082          		{
   1083          			/*##-3- Create a FAT file system (format) on the logical drive #########*/
   1084          			/* WARNING: Formatting the uSD card will delete all content on the device */
   1085          			//∂‘ SD ø®Ω¯––∏Ò ΩªØ
   1086          #if 0
   1087          			if(f_mkfs((TCHAR const*)SD_Path, 0, 0) != FR_OK)
   1088          			{
   1089          				/* FatFs Format Error */
   1090          				Error_Handler();
   1091          			}
   1092          			else
   1093          #endif        
   1094          			{ 			
   1095          				/*##-4- Create and Open a new text file object with write access #####*/
   1096          				if(f_open(&MyFile_logo, "1:\STM321.TXT", FA_CREATE_ALWAYS | FA_WRITE) != FR_OK)
   1097          				{
   1098          					/* 'STM32.TXT' file Open for write Error */
   1099          					Error_Handler();
   1100          				}
   1101          				else
   1102          				{
   1103          					/*##-5- Write data to the text file ################################*/
   1104          						for(index = 0; index < 20; index ++)
   1105          						{
   1106          							memset(bmp_public_buf,0,sizeof(bmp_public_buf));
   1107          							Pic_Logo_Read((uint8_t *)"bmp_logo.bin", bmp_public_buf, 15360);
   1108          							f_lseek(&MyFile_logo, lseek_length);
   1109          							res = f_write(&MyFile_logo, bmp_public_buf, 15360, (uint32_t *)&byteswritten);
   1110          							lseek_length += byteswritten;
   1111          
   1112          							i = 0;
   1113                                      ili9320_SetCursor(0, y_off * 16);
   1114          							LCD_setWindowArea(0, y_off * 16, 480,16);     //480*16
   1115          							//LCD_setWindowArea(0, y_off * 16+120, 800,48);      //800*240  
   1116          							LCD_WriteRAM_Prepare(); 
   1117          							for(_y = y_off * 16; _y < (y_off + 1) * 16; _y++)
   1118          							{
   1119          								for (x_off = 0; x_off < 480; x_off++) 
   1120          								{
   1121          									p_index = (uint16_t *)(&bmp_public_buf[i]); 					
   1122          									LCD_WriteRAM(*p_index);
   1123          									i += 2;
   1124          									
   1125          								}
   1126          								if(i >= 15360)
   1127          									break;
   1128          							}
   1129          							y_off++;								
   1130          						}
   1131          					if((byteswritten == 0) || (res != FR_OK))
   1132          					{
   1133          						/* 'STM32.TXT' file Write or EOF Error */
   1134          						Error_Handler();
   1135          					}
   1136          					else
   1137          					{
   1138          						/*##-6- Close the open text file #################################*/
   1139          						f_close(&MyFile_logo);
   1140          					}
   1141          				}
   1142          			}
   1143          		}
   1144          	}
   1145          
   1146          }
   1147          
   1148          #else
   1149          uint8_t logo_n[13] = "bmp_logo.bin";
   1150          

   \                                 In section .text, align 2, keep-with-next
   1151          void DRAW_LOGO()
   1152          {
   \                     DRAW_LOGO: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   1153          #if 0
   1154          	int index; 
   1155          	int x_off = 0, y_off = 0;
   1156          	int _x, _y;
   1157          	uint16_t *p_index;
   1158          	volatile int i=0,j=0;
   1159          #if 1
   1160          	for(index = 0; index < 10; index ++)//480*320
   1161          	{
   1162          		Pic_Logo_Read(logo_n, bmp_public_buf, 30720);//15k
   1163          		i = 0;
   1164          		//ili9320_SetCursor(0, y_off * 16);
   1165          		LCD_setWindowArea(0, (uint16_t)y_off * 32, 480,32);	  //480*16
   1166          		
   1167          		LCD_WriteRAM_Prepare(); 
   1168          		for(_y = y_off * 32; _y < (y_off + 1) * 32; _y++)
   1169          		{
   1170          			for (x_off = 0; x_off < 480; x_off++) 
   1171          			{
   1172          				p_index = (uint16_t *)(&bmp_public_buf[i]); 					
   1173          				LCD_WriteRAM(*p_index);
   1174          				i += 2;
   1175          				
   1176          			}
   1177          			if(i >= 30720)
   1178          					break;
   1179          		}
   1180          		y_off++;		
   1181          
   1182          		
   1183          	}
   1184          LCD_setWindowArea(0, 0, 480, 320);	
   1185          
   1186          #else
   1187          
   1188          	for(index = 0; index < 320; index ++)//480*320
   1189          	{
   1190          		Pic_Logo_Read(logo_n, bmp_public_buf, 960);//15k
   1191          		i = 0;
   1192                  //ili9320_SetCursor(0, y_off * 16);
   1193          		LCD_setWindowArea(0, (uint16_t)y_off * 1, 480,1);     //480*16
   1194          		//LCD_setWindowArea(0, y_off * 16+120, 800,48);      //800*240  
   1195          		
   1196          		LCD_WriteRAM_Prepare(); 
   1197          		for(_y = y_off * 1; _y < (y_off + 1) * 1; _y++)
   1198          		{
   1199          			for (x_off = 0; x_off < 480; x_off++) 
   1200          			{
   1201          				p_index = (uint16_t *)(&bmp_public_buf[i]); 					
   1202          				LCD_WriteRAM(*p_index);
   1203          				i += 2;
   1204          				
   1205          			}
   1206          			if(i >= 15360)
   1207          					break;
   1208          		}
   1209          		y_off++;		
   1210          
   1211          		
   1212          	}
   1213          	LCD_setWindowArea(0, 0, 480, 320);	
   1214          #endif
   1215          #endif
   1216          #if VERSION_WITH_PIC    
   1217          int index; 
   1218          int x_off = 0, y_off = 0;
   \   00000004   0x2400             MOVS     R4,#+0
   1219          int _x, _y;
                     ^
Warning[Pe177]: variable "_x" was declared but never referenced
   1220          uint16_t *p_index;
   1221          int i;
   1222          #if 0
   1223          for(index = 0; index < 10; index ++)
   1224          {
   1225              Pic_Logo_Read(logo_n, bmp_public_buf, 15360);
   1226            
   1227              i = 0;
   1228              //GUI_DrawBitmap(&bmp_struct, x_off, y_off);
   1229              
   1230              LCD_setWindowArea(0, y_off * 24, 320, 24);
   1231              ili9320_SetCursor(0, y_off * 24);
   1232              LCD_WriteRAM_Prepare(); /* Prepare to write GRAM */ 
   1233              for(_y = y_off * 24; _y < (y_off + 1) * 24; _y++)
   1234              {
   1235                  for (x_off = 0; x_off < 320; x_off++) 
   1236                  {
   1237                      p_index = (uint16_t *)(&bmp_public_buf[i]);                     
   1238                      LCD_WriteRAM(*p_index);
   1239                      i += 2;
   1240                      
   1241                  }
   1242                  if(i >= 15360)
   1243                          break;
   1244              }
   1245              y_off++;        
   1246          
   1247              
   1248          }
   1249          LCD_setWindowArea(0, 0, 319, 239);
   1250          #else
   1251          for(index = 0; index < 40; index ++)
   \   00000006   0x4625             MOV      R5,R4
   \   00000008   0x.... 0x....      LDR.W    R6,??DataTable21_42
   \   0000000C   0xE00D             B.N      ??DRAW_LOGO_0
   1252          	{
   1253          		Pic_Logo_Read(logo_n, bmp_public_buf, 7680);
   1254          
   1255          		
   1256          		i = 0;
   1257          		//GUI_DrawBitmap(&bmp_struct, x_off, y_off);
   1258          		
   1259          		LCD_setWindowArea(0, y_off * 8, 480, 8);
   1260          		//ili9320_SetCursor(0, y_off * 8);
   1261          		LCD_WriteRAM_Prepare(); /* Prepare to write GRAM */ 
   1262          		for(_y = y_off * 8; _y < (y_off + 1) * 8; _y++)
   1263          		{
   1264          			for (x_off = 0; x_off < 480; x_off++) 
   1265          			{
   1266          				p_index = (uint16_t *)(&bmp_public_buf[i]); 					
   1267          				LCD_WriteRAM(*p_index);
   \                     ??DRAW_LOGO_1: (+1)
   \   0000000E   0x5BB8             LDRH     R0,[R7, R6]
   \   00000010   0x.... 0x....      BL       LCD_WriteRAM
   1268          				i += 2;
   \   00000014   0x1CBF             ADDS     R7,R7,#+2
   1269          				
   1270          			}
   \   00000016   0xF108 0x0801      ADD      R8,R8,#+1
   \                     ??DRAW_LOGO_2: (+1)
   \   0000001A   0xF5B8 0x7FF0      CMP      R8,#+480
   \   0000001E   0xDBF6             BLT.N    ??DRAW_LOGO_1
   1271          			if(i >= 7680)
   \   00000020   0xF5B7 0x5FF0      CMP      R7,#+7680
   \   00000024   0xDB1A             BLT.N    ??DRAW_LOGO_3
   1272          					break;
   1273          		}
   1274          		y_off++;		
   \                     ??DRAW_LOGO_4: (+1)
   \   00000026   0x464C             MOV      R4,R9
   \   00000028   0x1C6D             ADDS     R5,R5,#+1
   \                     ??DRAW_LOGO_0: (+1)
   \   0000002A   0x2D28             CMP      R5,#+40
   \   0000002C   0xDA1E             BGE.N    ??DRAW_LOGO_5
   \   0000002E   0xF44F 0x52F0      MOV      R2,#+7680
   \   00000032   0x4631             MOV      R1,R6
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable21_43
   \   00000038   0x.... 0x....      BL       Pic_Logo_Read
   \   0000003C   0x2700             MOVS     R7,#+0
   \   0000003E   0x2308             MOVS     R3,#+8
   \   00000040   0xF44F 0x72F0      MOV      R2,#+480
   \   00000044   0x00E1             LSLS     R1,R4,#+3
   \   00000046   0xB289             UXTH     R1,R1
   \   00000048   0x4638             MOV      R0,R7
   \   0000004A   0x.... 0x....      BL       LCD_setWindowArea
   \   0000004E   0x.... 0x....      BL       LCD_WriteRAM_Prepare
   \   00000052   0xEA4F 0x0AC4      LSL      R10,R4,#+3
   \   00000056   0xF104 0x0901      ADD      R9,R4,#+1
   \   0000005A   0xE001             B.N      ??DRAW_LOGO_6
   \                     ??DRAW_LOGO_3: (+1)
   \   0000005C   0xF10A 0x0A01      ADD      R10,R10,#+1
   \                     ??DRAW_LOGO_6: (+1)
   \   00000060   0xEBBA 0x0FC9      CMP      R10,R9, LSL #+3
   \   00000064   0xDADF             BGE.N    ??DRAW_LOGO_4
   \   00000066   0xF04F 0x0800      MOV      R8,#+0
   \   0000006A   0xE7D6             B.N      ??DRAW_LOGO_2
   1275          
   1276          		
   1277          	}
   1278          	LCD_setWindowArea(0, 0, 479, 319);
   \                     ??DRAW_LOGO_5: (+1)
   \   0000006C   0xF240 0x133F      MOVW     R3,#+319
   \   00000070   0xF240 0x12DF      MOVW     R2,#+479
   \   00000074   0x2100             MOVS     R1,#+0
   \   00000076   0x4608             MOV      R0,R1
   \   00000078   0xE8BD 0x47F0      POP      {R4-R10,LR}
   \   0000007C   0x.... 0x....      B.W      LCD_setWindowArea
   1279          
   1280          #endif
   1281          #endif  
   1282          
   1283          }
   1284          #endif
   1285          
   1286          #if 1

   \                                 In section .text, align 2, keep-with-next
   1287          void Draw_default_preview(int xpos_pixel,int ypos_pixel,uint8_t sel)
   1288          {
   \                     _Z20Draw_default_previewiih: (+1)
   \   00000000   0xE92D 0x4FF7      PUSH     {R0-R2,R4-R11,LR}
   \   00000004   0xB082             SUB      SP,SP,#+8
   1289          	int index; 
   1290          	int x_off = 0, y_off = 0;
   \   00000006   0x2400             MOVS     R4,#+0
   1291          	int _x, _y;
                 	    ^
Warning[Pe177]: variable "_x" was declared but never referenced
   1292          	uint16_t *p_index;
   1293          	int i;
   1294          	uint16_t temp_p;
   1295          	
   1296          	for(index = 0; index < 10; index ++)//200*200
   \   00000008   0x4625             MOV      R5,R4
   \   0000000A   0x.... 0x....      LDR.W    R6,??DataTable21_42
   \   0000000E   0x2714             MOVS     R7,#+20
   \   00000010   0xE004             B.N      ??Draw_default_preview_0
   1297          	{
   1298          		if(sel == 1)
   1299          		{
   1300          			flash_view_Read(bmp_public_buf, 8000);//20k
   1301          		}
   1302          		else
   1303          		{
   1304          			default_view_Read(bmp_public_buf, 8000);//20k
   1305          		}
   1306          
   1307          		i = 0;
   1308          		
   1309          		LCD_setWindowArea(xpos_pixel, y_off * 20+ypos_pixel, 200,20);     //200*200
   1310          
   1311          		LCD_WriteRAM_Prepare(); 
   1312          		for(_y = y_off * 20; _y < (y_off + 1) * 20; _y++)
   1313          		{
   1314          			for (x_off = 0; x_off < 200; x_off++) 
   1315          			{
   1316          				if(sel==1)
   1317          				{
   1318          					temp_p = (uint16_t)(bmp_public_buf[i]|bmp_public_buf[i+1]<<8);
   1319          					p_index = &temp_p;
   1320          				}
   1321          				else
   1322          				{
   1323          					p_index = (uint16_t *)(&bmp_public_buf[i]); 	
   1324          				}
   1325          				LCD_WriteRAM(*p_index);
   1326          				i += 2;
   1327          				
   1328          			}
   1329          			if(i >= 8000)
   \                     ??Draw_default_preview_1: (+1)
   \   00000012   0xF5B9 0x5FFA      CMP      R9,#+8000
   \   00000016   0xDB23             BLT.N    ??Draw_default_preview_2
   1330          				break;
   1331          		}
   1332          		y_off++;		
   \                     ??Draw_default_preview_3: (+1)
   \   00000018   0x4644             MOV      R4,R8
   \   0000001A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Draw_default_preview_0: (+1)
   \   0000001C   0x2D0A             CMP      R5,#+10
   \   0000001E   0xDA42             BGE.N    ??Draw_default_preview_4
   \   00000020   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   00000024   0x9000             STR      R0,[SP, #+0]
   \   00000026   0x2801             CMP      R0,#+1
   \   00000028   0xF44F 0x51FA      MOV      R1,#+8000
   \   0000002C   0x4630             MOV      R0,R6
   \   0000002E   0xD102             BNE.N    ??Draw_default_preview_5
   \   00000030   0x.... 0x....      BL       flash_view_Read
   \   00000034   0xE001             B.N      ??Draw_default_preview_6
   \                     ??Draw_default_preview_5: (+1)
   \   00000036   0x.... 0x....      BL       default_view_Read
   \                     ??Draw_default_preview_6: (+1)
   \   0000003A   0xF04F 0x0900      MOV      R9,#+0
   \   0000003E   0xFB07 0xFB04      MUL      R11,R7,R4
   \   00000042   0x463B             MOV      R3,R7
   \   00000044   0x22C8             MOVS     R2,#+200
   \   00000046   0x9803             LDR      R0,[SP, #+12]
   \   00000048   0xEB00 0x010B      ADD      R1,R0,R11
   \   0000004C   0xB289             UXTH     R1,R1
   \   0000004E   0x9802             LDR      R0,[SP, #+8]
   \   00000050   0xB280             UXTH     R0,R0
   \   00000052   0x.... 0x....      BL       LCD_setWindowArea
   \   00000056   0x.... 0x....      BL       LCD_WriteRAM_Prepare
   \   0000005A   0xF104 0x0801      ADD      R8,R4,#+1
   \   0000005E   0xE001             B.N      ??Draw_default_preview_7
   \                     ??Draw_default_preview_2: (+1)
   \   00000060   0xF10B 0x0B01      ADD      R11,R11,#+1
   \                     ??Draw_default_preview_7: (+1)
   \   00000064   0xFB07 0xF008      MUL      R0,R7,R8
   \   00000068   0x4583             CMP      R11,R0
   \   0000006A   0xDAD5             BGE.N    ??Draw_default_preview_3
   \   0000006C   0xF04F 0x0A00      MOV      R10,#+0
   \   00000070   0xE008             B.N      ??Draw_default_preview_8
   \                     ??Draw_default_preview_9: (+1)
   \   00000072   0xEB09 0x0006      ADD      R0,R9,R6
   \                     ??Draw_default_preview_10: (+1)
   \   00000076   0x8800             LDRH     R0,[R0, #+0]
   \   00000078   0x.... 0x....      BL       LCD_WriteRAM
   \   0000007C   0xF109 0x0902      ADD      R9,R9,#+2
   \   00000080   0xF10A 0x0A01      ADD      R10,R10,#+1
   \                     ??Draw_default_preview_8: (+1)
   \   00000084   0xF1BA 0x0FC8      CMP      R10,#+200
   \   00000088   0xDAC3             BGE.N    ??Draw_default_preview_1
   \   0000008A   0x9800             LDR      R0,[SP, #+0]
   \   0000008C   0x2801             CMP      R0,#+1
   \   0000008E   0xD1F0             BNE.N    ??Draw_default_preview_9
   \   00000090   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000094   0xEB09 0x0106      ADD      R1,R9,R6
   \   00000098   0x7849             LDRB     R1,[R1, #+1]
   \   0000009A   0xEA40 0x2001      ORR      R0,R0,R1, LSL #+8
   \   0000009E   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   \   000000A2   0xA801             ADD      R0,SP,#+4
   \   000000A4   0xE7E7             B.N      ??Draw_default_preview_10
   1333          	}
   1334          
   1335          }
   \                     ??Draw_default_preview_4: (+1)
   \   000000A6   0xB005             ADD      SP,SP,#+20
   \   000000A8   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   1336          

   \                                 In section .text, align 2, keep-with-next
   1337          int ascii2dec_test1(char *ascii)
   1338          {
   1339          	int result = 0;
   1340          
   1341          	if(ascii == 0)
   \                     _Z15ascii2dec_test1Pc: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD013             BEQ.N    ??ascii2dec_test1_0
   1342          		return 0;
   1343          
   1344          	if(*(ascii) >= '0' && *(ascii) <= '9')
   \   00000004   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000008   0x4601             MOV      R1,R0
   \   0000000A   0xF1A1 0x0230      SUB      R2,R1,#+48
   \   0000000E   0x2A0A             CMP      R2,#+10
   \   00000010   0xD201             BCS.N    ??ascii2dec_test1_1
   1345          		result = *(ascii) - '0';
   \   00000012   0x3830             SUBS     R0,R0,#+48
   1346          	else if(*(ascii) >= 'a' && *(ascii) <= 'f')
   1347          		result = *(ascii) - 'a' + 0x0a;
   1348          	else if(*(ascii) >= 'A' && *(ascii) <= 'F')
   1349          		result = *(ascii) - 'A' + 0x0a;
   1350          	else
   1351          		return 0;
   1352          		
   1353          
   1354          	return result;
   \   00000014   0x4770             BX       LR               ;; return
   \                     ??ascii2dec_test1_1: (+1)
   \   00000016   0xF1A1 0x0261      SUB      R2,R1,#+97
   \   0000001A   0x2A06             CMP      R2,#+6
   \   0000001C   0xD201             BCS.N    ??ascii2dec_test1_2
   \   0000001E   0x3857             SUBS     R0,R0,#+87
   \   00000020   0x4770             BX       LR
   \                     ??ascii2dec_test1_2: (+1)
   \   00000022   0x3941             SUBS     R1,R1,#+65
   \   00000024   0x2906             CMP      R1,#+6
   \   00000026   0xD201             BCS.N    ??ascii2dec_test1_0
   \   00000028   0x3837             SUBS     R0,R0,#+55
   \   0000002A   0x4770             BX       LR
   \                     ??ascii2dec_test1_0: (+1)
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x4770             BX       LR
   1355          }
   1356          

   \                                 In section .bss, align 1
   1357          uint8_t preview_pic=0;
   \                     preview_pic:
   \   00000000                      DS8 1
   1358          
   1359          

   \                                 In section .bss, align 4
   1360          FIL curFile_1;
   \                     curFile_1:
   \   00000000                      DS8 556

   \                                 In section .data, align 4
   \                     temperature_change_frequency:
   \   00000000   0x01               DC8 1
   \                     from_flash_pic:
   \   00000001   0x00               DC8 0
   \   00000002   0x00               DC8 0
   1361          
   1362          uint8_t buff_pic[512];
   1363          uint32_t row;
   1364          uint32_t size = 809;
   1365          uint8_t gcode_preview_over;
   \                     gcode_preview_over:
   \   00000003   0x00               DC8 0
   1366          uint8_t flash_preview_begin;
   \                     flash_preview_begin:
   \   00000004   0x00               DC8 0
   1367          uint8_t default_preview_flg;
   \                     default_preview_flg:
   \   00000005   0x00               DC8 0
   \                     disp_state:
   \   00000006   0x00               DC8 0
   \   00000007   0x00               DC8 0
   \                     To_pre_view:
   \   00000008   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \                     srcfp:
   \   0000000C   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \                     row:
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \                     size:
   \   00000014   0x00000329         DC32 809
   \                     TEST_FIL1:
   \   00000018   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000028   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000038   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000048   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000058   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000068   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000078   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000088   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000098   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000108   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000118   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000128   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000138   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000148   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000158   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000168   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000178   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000188   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000198   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001F8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000208   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000218   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000228   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000238   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \                     buff_pic:
   \   00000244   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000254   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000264   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000274   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000284   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000294   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002F4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000304   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000314   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000324   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000334   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000344   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000354   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000364   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000374   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000384   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000394   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003F4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000404   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000414   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000424   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000434   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .data, align 4
   \                     logo_n:
   \   00000000   0x62 0x6D          DC8 "bmp_logo.bin"
   \              0x70 0x5F    
   \              0x6C 0x6F    
   \              0x67 0x6F    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   1368          //uint8_t from_flash_pic;
   1369          extern int once_flag;
   1370          extern "C" void SPI_FLASH_BufferWrite(u8* pBuffer, u32 WriteAddr, u16 NumByteToWrite);
   1371          extern "C" void SPI_FLASH_SectorErase(u32 SectorAddr);
   1372          

   \                                 In section .text, align 2, keep-with-next
   1373          void gcode_preview(FIL *file,int xpos_pixel,int ypos_pixel)
   1374          {
   \                     _Z13gcode_previewP3FILii: (+1)
   \   00000000   0xB5FE             PUSH     {R1-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460E             MOV      R6,R1
   \   00000006   0x4617             MOV      R7,R2
   1375          #if defined(TFT35)
   1376          	uint8_t ress;
                 	        ^
Warning[Pe177]: variable "ress" was declared but never referenced
   1377          	UINT read,write;
                 	          ^
Warning[Pe177]: variable "write" was declared but never referenced
   1378          	volatile uint32_t i,j;
   1379          	volatile uint16_t *p_index;
   1380          	int res;
   1381          	
   1382          	//memset(bmp_public_buf,0,sizeof(bmp_public_buf));
   1383          	f_lseek(file, (PREVIEW_LITTLE_PIC_SIZE+To_pre_view)+size*row+8);
   \   00000008   0x....             LDR.N    R5,??DataTable21_29
   \   0000000A   0x68A8             LDR      R0,[R5, #+8]
   \   0000000C   0x6969             LDR      R1,[R5, #+20]
   \   0000000E   0x692A             LDR      R2,[R5, #+16]
   \   00000010   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000014   0xF500 0x411F      ADD      R1,R0,#+40704
   \   00000018   0x31D6             ADDS     R1,R1,#+214
   \   0000001A   0x4620             MOV      R0,R4
   \   0000001C   0x.... 0x....      BL       f_lseek
   1384          	//ress = f_read(file, buff_pic, size, &read);
   1385          	//if(ress == FR_OK)
   1386          	{
   1387                	LCD_setWindowArea(xpos_pixel, ypos_pixel+row, 200,1);
   \   00000020   0x2301             MOVS     R3,#+1
   \   00000022   0x22C8             MOVS     R2,#+200
   \   00000024   0x6928             LDR      R0,[R5, #+16]
   \   00000026   0x19C1             ADDS     R1,R0,R7
   \   00000028   0xB289             UXTH     R1,R1
   \   0000002A   0x4630             MOV      R0,R6
   \   0000002C   0xB280             UXTH     R0,R0
   \   0000002E   0x.... 0x....      BL       LCD_setWindowArea
   1388          		LCD_WriteRAM_Prepare(); 
   \   00000032   0x.... 0x....      BL       LCD_WriteRAM_Prepare
   1389          		j=0;
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x9001             STR      R0,[SP, #+4]
   1390          		i=0;
   \   0000003A   0x9000             STR      R0,[SP, #+0]
   1391          		
   1392          		while(1)
   1393          		{
   1394          			f_read(file, buff_pic, 400, &read);
   \                     ??gcode_preview_0: (+1)
   \   0000003C   0xAB02             ADD      R3,SP,#+8
   \   0000003E   0xF44F 0x72C8      MOV      R2,#+400
   \   00000042   0xF505 0x7111      ADD      R1,R5,#+580
   \   00000046   0x4620             MOV      R0,R4
   \   00000048   0x.... 0x....      BL       f_read
   1395          			for(i=0;i<400;)
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x9000             STR      R0,[SP, #+0]
   \   00000050   0xE017             B.N      ??gcode_preview_1
   1396          			{
   1397          				bmp_public_buf[j]= ascii2dec_test1((char*)&buff_pic[i])<<4|ascii2dec_test1((char*)&buff_pic[i+1]);
   \                     ??gcode_preview_2: (+1)
   \   00000052   0x9E01             LDR      R6,[SP, #+4]
   \   00000054   0x9800             LDR      R0,[SP, #+0]
   \   00000056   0x1940             ADDS     R0,R0,R5
   \   00000058   0xF500 0x7011      ADD      R0,R0,#+580
   \   0000005C   0x.... 0x....      BL       _Z15ascii2dec_test1Pc
   \   00000060   0x4607             MOV      R7,R0
   \   00000062   0x9800             LDR      R0,[SP, #+0]
   \   00000064   0x1940             ADDS     R0,R0,R5
   \   00000066   0xF200 0x2045      ADDW     R0,R0,#+581
   \   0000006A   0x.... 0x....      BL       _Z15ascii2dec_test1Pc
   \   0000006E   0xEA40 0x1007      ORR      R0,R0,R7, LSL #+4
   \   00000072   0x....             LDR.N    R1,??DataTable21_42
   \   00000074   0x5470             STRB     R0,[R6, R1]
   1398          				//bmp_public_buf[j]= ascii2dec_test1((char*)&buff_pic[8+i])<<4|ascii2dec_test1((char*)&buff_pic[8+i+1]);
   1399          				i+=2;
   \   00000076   0x9800             LDR      R0,[SP, #+0]
   \   00000078   0x1C80             ADDS     R0,R0,#+2
   \   0000007A   0x9000             STR      R0,[SP, #+0]
   1400          				j++;
   \   0000007C   0x9801             LDR      R0,[SP, #+4]
   \   0000007E   0x1C40             ADDS     R0,R0,#+1
   \   00000080   0x9001             STR      R0,[SP, #+4]
   1401          			}
   \                     ??gcode_preview_1: (+1)
   \   00000082   0x9800             LDR      R0,[SP, #+0]
   \   00000084   0xF5B0 0x7FC8      CMP      R0,#+400
   \   00000088   0xD3E3             BCC.N    ??gcode_preview_2
   1402          			
   1403          			//if(i>800)break;
   1404          			//#if defined(TFT70)
   1405          			//if(j>400)
   1406          			//{
   1407          			//	f_read(file, buff_pic, 1, &read);
   1408          			//	break;
   1409          			//}				
   1410          			//#elif defined(TFT35)
   1411          			if(j>=400)
   \   0000008A   0x9801             LDR      R0,[SP, #+4]
   \   0000008C   0xF5B0 0x7FC8      CMP      R0,#+400
   \   00000090   0xD3D4             BCC.N    ??gcode_preview_0
   1412          			{
   1413          				//f_read(file, buff_pic, 1, &read);
   1414          				break;
   1415          			}				
   1416          			//#endif
   1417          
   1418          		}
   1419          		for(i=0;i<400;)
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x9000             STR      R0,[SP, #+0]
   \   00000096   0xE008             B.N      ??gcode_preview_3
   1420          		{
   1421          			p_index = (uint16_t *)(&bmp_public_buf[i]); 					
   \                     ??gcode_preview_4: (+1)
   \   00000098   0x9800             LDR      R0,[SP, #+0]
   \   0000009A   0x....             LDR.N    R1,??DataTable21_42
   \   0000009C   0x1840             ADDS     R0,R0,R1
   1422          	    	LCD_WriteRAM(*p_index);
   \   0000009E   0x8800             LDRH     R0,[R0, #+0]
   \   000000A0   0x.... 0x....      BL       LCD_WriteRAM
   1423          			i=i+2;
   \   000000A4   0x9800             LDR      R0,[SP, #+0]
   \   000000A6   0x1C80             ADDS     R0,R0,#+2
   \   000000A8   0x9000             STR      R0,[SP, #+0]
   1424          		}
   \                     ??gcode_preview_3: (+1)
   \   000000AA   0x9800             LDR      R0,[SP, #+0]
   \   000000AC   0xF5B0 0x7FC8      CMP      R0,#+400
   \   000000B0   0xD3F2             BCC.N    ??gcode_preview_4
   1425          		if(row<20)
   \   000000B2   0x6928             LDR      R0,[R5, #+16]
   \   000000B4   0x2814             CMP      R0,#+20
   \   000000B6   0xD204             BCS.N    ??gcode_preview_5
   1426          		{
   1427          			SPI_FLASH_SectorErase(BAK_VIEW_ADDR+row*4096);
   \   000000B8   0x0300             LSLS     R0,R0,#+12
   \   000000BA   0xF500 0x205C      ADD      R0,R0,#+901120
   \   000000BE   0x.... 0x....      BL       SPI_FLASH_SectorErase
   1428          		}
   1429          		SPI_FLASH_BufferWrite(bmp_public_buf, BAK_VIEW_ADDR+row*400, 400);
   \                     ??gcode_preview_5: (+1)
   \   000000C2   0xF44F 0x72C8      MOV      R2,#+400
   \   000000C6   0x6928             LDR      R0,[R5, #+16]
   \   000000C8   0x4611             MOV      R1,R2
   \   000000CA   0x4348             MULS     R0,R1,R0
   \   000000CC   0xF500 0x215C      ADD      R1,R0,#+901120
   \   000000D0   0x....             LDR.N    R0,??DataTable21_42
   \   000000D2   0x.... 0x....      BL       SPI_FLASH_BufferWrite
   1430          		row++;
   \   000000D6   0x6928             LDR      R0,[R5, #+16]
   \   000000D8   0x1C40             ADDS     R0,R0,#+1
   \   000000DA   0x6128             STR      R0,[R5, #+16]
   1431          		if(row >= 200)
   \   000000DC   0x28C8             CMP      R0,#+200
   \   000000DE   0xD327             BCC.N    ??gcode_preview_6
   1432          		{
   1433          			size = 809;
   \   000000E0   0xF240 0x3029      MOVW     R0,#+809
   \   000000E4   0x6168             STR      R0,[R5, #+20]
   1434          			row = 0;
   \   000000E6   0x2000             MOVS     R0,#+0
   \   000000E8   0x6128             STR      R0,[R5, #+16]
   1435          			
   1436          			gcode_preview_over = 0;
   \   000000EA   0x70E8             STRB     R0,[R5, #+3]
   1437          			//flash_preview_begin = 1;
   1438          
   1439          			f_close(file);
   \   000000EC   0x4620             MOV      R0,R4
   \   000000EE   0x.... 0x....      BL       f_close
   1440          
   1441          			if(gCurFileState.file_open_flag != 0xaa)
   \   000000F2   0x....             LDR.N    R6,??DataTable21_34
   \   000000F4   0xF896 0x023E      LDRB     R0,[R6, #+574]
   \   000000F8   0x28AA             CMP      R0,#+170
   \   000000FA   0xD019             BEQ.N    ??gcode_preview_6
   1442          			{
   1443          				
   1444          			
   1445          				reset_file_info();
   \   000000FC   0x.... 0x....      BL       reset_file_info
   1446          				
   1447          				res = f_open(file, curFileName, FA_OPEN_EXISTING | FA_READ);
   \   00000100   0x2201             MOVS     R2,#+1
   \   00000102   0x....             LDR.N    R1,??DataTable21_25
   \   00000104   0x4620             MOV      R0,R4
   \   00000106   0x.... 0x....      BL       f_open
   1448          
   1449          				if(res == FR_OK)
   \   0000010A   0x2800             CMP      R0,#+0
   \   0000010C   0xD110             BNE.N    ??gcode_preview_6
   1450          				{
   1451          					f_lseek(file,PREVIEW_SIZE+To_pre_view);
   \   0000010E   0x68A8             LDR      R0,[R5, #+8]
   \   00000110   0x....             LDR.N    R1,??DataTable21_44  ;; 0x317e0
   \   00000112   0x1809             ADDS     R1,R1,R0
   \   00000114   0x4620             MOV      R0,R4
   \   00000116   0x.... 0x....      BL       f_lseek
   1452          					gCurFileState.file_open_flag = 0xaa;
   \   0000011A   0x20AA             MOVS     R0,#+170
   \   0000011C   0xF886 0x023E      STRB     R0,[R6, #+574]
   1453          
   1454          					//bakup_file_path((uint8_t *)curFileName, strlen(curFileName));
   1455          
   1456          					srcfp = file;
   \   00000120   0x60EC             STR      R4,[R5, #+12]
   1457          
   1458          					mksReprint.mks_printer_state = MKS_WORKING;
   \   00000122   0x20A7             MOVS     R0,#+167
   \   00000124   0x....             LDR.N    R1,??DataTable21_33
   \   00000126   0xF881 0x00B4      STRB     R0,[R1, #+180]
   1459          
   1460          					once_flag = 0;
   \   0000012A   0x2000             MOVS     R0,#+0
   \   0000012C   0x....             LDR.N    R1,??DataTable21_45
   \   0000012E   0x6008             STR      R0,[R1, #+0]
   1461          				}
   1462          				
   1463          			}			
   1464          		}
   1465          	}
   1466          #endif
   1467          }
   \                     ??gcode_preview_6: (+1)
   \   00000130   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return
   1468          

   \                                 In section .text, align 2, keep-with-next
   1469          void disp_pre_gcode(int xpos_pixel,int ypos_pixel)
   1470          {
   \                     disp_pre_gcode: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   1471          	if(gcode_preview_over==1)
   \   00000006   0x....             LDR.N    R6,??DataTable21_29
   \   00000008   0x78F0             LDRB     R0,[R6, #+3]
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xD105             BNE.N    ??disp_pre_gcode_0
   1472          	{
   1473          		gcode_preview(&TEST_FIL1,xpos_pixel,ypos_pixel);
   \   0000000E   0x462A             MOV      R2,R5
   \   00000010   0x4621             MOV      R1,R4
   \   00000012   0xF106 0x0018      ADD      R0,R6,#+24
   \   00000016   0x.... 0x....      BL       _Z13gcode_previewP3FILii
   1474          	}
   1475          	if(flash_preview_begin == 1)
   \                     ??disp_pre_gcode_0: (+1)
   \   0000001A   0x7930             LDRB     R0,[R6, #+4]
   \   0000001C   0x2801             CMP      R0,#+1
   \   0000001E   0xD106             BNE.N    ??disp_pre_gcode_1
   1476          	{
   1477          		flash_preview_begin = 0;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x7130             STRB     R0,[R6, #+4]
   1478          		Draw_default_preview(xpos_pixel,ypos_pixel,1);	
   \   00000024   0x2201             MOVS     R2,#+1
   \   00000026   0x4629             MOV      R1,R5
   \   00000028   0x4620             MOV      R0,R4
   \   0000002A   0x.... 0x....      BL       _Z20Draw_default_previewiih
   1479          	}
   1480          	if(default_preview_flg == 1)
   \                     ??disp_pre_gcode_1: (+1)
   \   0000002E   0x7970             LDRB     R0,[R6, #+5]
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xD106             BNE.N    ??disp_pre_gcode_2
   1481          	{
   1482          		Draw_default_preview(xpos_pixel,ypos_pixel,0);
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0x4629             MOV      R1,R5
   \   00000038   0x4620             MOV      R0,R4
   \   0000003A   0x.... 0x....      BL       _Z20Draw_default_previewiih
   1483          		default_preview_flg = 0;
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x7170             STRB     R0,[R6, #+5]
   1484          	}
   1485          
   1486          }
   \                     ??disp_pre_gcode_2: (+1)
   \   00000042   0xBD70             POP      {R4-R6,PC}       ;; return
   1487          

   \                                 In section .text, align 2, keep-with-next
   1488          void preview_gcode_prehandle(char *path)
   1489          {
   \                     preview_gcode_prehandle: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1490          	uint8_t re;
   1491          	UINT read;
   1492          	uint32_t pre_read_cnt = 0;
   1493          	uint32_t *p1,*p2;
                 	          ^
Warning[Pe177]: variable "p1" was declared but never referenced
   1494          	
   1495          	re = f_open(&TEST_FIL1, path, FA_OPEN_EXISTING | FA_READ);//	
   \   00000002   0x....             LDR.N    R4,??DataTable21_29
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x4601             MOV      R1,R0
   \   00000008   0xF104 0x0018      ADD      R0,R4,#+24
   \   0000000C   0x.... 0x....      BL       f_open
   1496          	#if 0
   1497          	if(re == FR_OK)
   1498          	{
   1499          		f_lseek(&TEST_FIL1,PREVIEW_LITTLE_PIC_SIZE);//
   1500          		f_read(&TEST_FIL1,&bmp_public_buf,8,&read);
   1501          		if((bmp_public_buf[0] ==';')&&(bmp_public_buf[1] =='g')
   1502          			&&(bmp_public_buf[2] =='i')&&(bmp_public_buf[3] =='m')
   1503          			&&(bmp_public_buf[4] =='a')&&(bmp_public_buf[5] =='g')
   1504          			&&(bmp_public_buf[6] =='e')&&(bmp_public_buf[7] ==':'))	
   1505          		{
   1506          			gcode_preview_over = 1;
   1507          			from_flash_pic = 1;
   1508          			HAL::AT24CXX_Write(BAK_PREVIEW_FROM_FLASH_ADDR, &from_flash_pic,1);
   1509          		}
   1510          		else
   1511          		{
   1512          			gcode_preview_over = 0;
   1513          			default_preview_flg = 1;
   1514          			from_flash_pic = 0; 
   1515          			HAL::AT24CXX_Write(BAK_PREVIEW_FROM_FLASH_ADDR, &from_flash_pic,1);
   1516          		}
   1517          	}
   1518          	#else
   1519          	if(re==FR_OK)
   \   00000010   0xB2C0             UXTB     R0,R0
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD127             BNE.N    ??preview_gcode_prehandle_0
   1520          	{
   1521          		//p1 = (int32_t *)&bmp_public_buf[0];
   1522          		
   1523          		f_read(&TEST_FIL1,&bmp_public_buf[0],1024,&read);
   \   00000016   0x....             LDR.N    R5,??DataTable21_42
   \   00000018   0xAB00             ADD      R3,SP,#+0
   \   0000001A   0xF44F 0x6280      MOV      R2,#+1024
   \   0000001E   0x4629             MOV      R1,R5
   \   00000020   0xF104 0x0018      ADD      R0,R4,#+24
   \   00000024   0x.... 0x....      BL       f_read
   1524          		
   1525          		p2 = (uint32_t *)strstr((const char *)&bmp_public_buf[0],(const char *)";simage:");
   \   00000028   0x.... 0x....      ADR.W    R1,`?<Constant ";simage:">`
   \   0000002C   0x4628             MOV      R0,R5
   \   0000002E   0x.... 0x....      BL       _Z6strstrPKcS0_
   1526          		if(p2)
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD00B             BEQ.N    ??preview_gcode_prehandle_1
   1527          		{
   1528          			pre_read_cnt = (uint32_t)p2-(uint32_t)((uint32_t *)(&bmp_public_buf[0]));
   1529          			//pre_sread_cnt = (uint32_t)ps4-(uint32_t)((uint32_t *)(&bmp_public_buf[0]));
   1530          
   1531          			To_pre_view = pre_read_cnt;
   \   00000036   0x1B40             SUBS     R0,R0,R5
   \   00000038   0x60A0             STR      R0,[R4, #+8]
   1532          			//f_lseek(&TEST_FIL1,PREVIEW_LITTLE_PIC_SIZE+pre_read_cnt);
   1533          			gcode_preview_over = 1;
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0x70E0             STRB     R0,[R4, #+3]
   1534          			from_flash_pic = 1;
   \   0000003E   0x7060             STRB     R0,[R4, #+1]
   1535          			epr_write_data(EPR_PREVIEW_FROM_FLASH, &from_flash_pic,1);			
   \   00000040   0x4602             MOV      R2,R0
   \   00000042   0x1C61             ADDS     R1,R4,#+1
   \   00000044   0xF44F 0x60E0      MOV      R0,#+1792
   \   00000048   0x.... 0x....      BL       epr_write_data
   \   0000004C   0xBD31             POP      {R0,R4,R5,PC}
   1536          		}
   1537          		else
   1538          		{
   1539          			gcode_preview_over = 0;
   \                     ??preview_gcode_prehandle_1: (+1)
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x70E0             STRB     R0,[R4, #+3]
   1540          			default_preview_flg = 1;
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0x7160             STRB     R0,[R4, #+5]
   1541          			from_flash_pic = 0; 
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x7060             STRB     R0,[R4, #+1]
   1542          			epr_write_data(EPR_PREVIEW_FROM_FLASH, &from_flash_pic,1);		
   \   0000005A   0x2201             MOVS     R2,#+1
   \   0000005C   0x1C61             ADDS     R1,R4,#+1
   \   0000005E   0xF44F 0x60E0      MOV      R0,#+1792
   \   00000062   0x.... 0x....      BL       epr_write_data
   1543          		}
   1544          	}
   1545          	#endif
   1546          }
   \                     ??preview_gcode_prehandle_0: (+1)
   \   00000066   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1547          #endif
   1548          

   \                                 In section .text, align 2, keep-with-next
   1549          void gcode_has_preview(char *path)
   1550          {
   \                     gcode_has_preview: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1551          #if 1
   1552          	uint8_t re;
   1553          	UINT read;
   1554          	uint32_t pre_read_cnt = 0;
   1555          	uint32_t *p1,*p2;
                 	          ^
Warning[Pe177]: variable "p1" was declared but never referenced

  static float zpos_bak = -1;
               ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.cpp",60  Warning[Pe177]: 
          variable "zpos_bak" was declared but never referenced

  static   GUI_HWIN hMainWnd;
                    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.cpp",108  Warning[Pe177]: 
          variable "hMainWnd" was declared but never referenced

  				bmp_public_buf[j]= ascii2dec_test1((char*)&buff_pic[i])<<4|ascii2dec_test1((char*)&buff_pic[i+1]);
  				^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.cpp",1397  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement
   1556          	
   1557          	re = f_open(&TEST_FIL1, path, FA_OPEN_EXISTING | FA_READ);//	
   \   00000002   0x....             LDR.N    R4,??DataTable21_29
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x4601             MOV      R1,R0
   \   00000008   0xF104 0x0018      ADD      R0,R4,#+24
   \   0000000C   0x.... 0x....      BL       f_open
   1558          	#if 1
   1559          	if(re==FR_OK)
   \   00000010   0xB2C0             UXTB     R0,R0
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD122             BNE.N    ??gcode_has_preview_0
   1560          	{
   1561          		f_read(&TEST_FIL1,&bmp_public_buf[0],1024,&read);
   \   00000016   0x....             LDR.N    R5,??DataTable21_42
   \   00000018   0xAB00             ADD      R3,SP,#+0
   \   0000001A   0xF44F 0x6280      MOV      R2,#+1024
   \   0000001E   0x4629             MOV      R1,R5
   \   00000020   0xF104 0x0018      ADD      R0,R4,#+24
   \   00000024   0x.... 0x....      BL       f_read
   1562          		
   1563          		p2 = (uint32_t *)strstr((const char *)&bmp_public_buf[0],(const char *)";simage:");
   \   00000028   0x.... 0x....      ADR.W    R1,`?<Constant ";simage:">`
   \   0000002C   0x4628             MOV      R0,R5
   \   0000002E   0x.... 0x....      BL       _Z6strstrPKcS0_
   1564          		if(p2)
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD00A             BEQ.N    ??gcode_has_preview_1
   1565          		{
   1566          			pre_read_cnt = (uint32_t)p2-(uint32_t)((uint32_t *)(&bmp_public_buf[0]));
   1567          			To_pre_view = pre_read_cnt;
   \   00000036   0x1B40             SUBS     R0,R0,R5
   \   00000038   0x60A0             STR      R0,[R4, #+8]
   1568                      
   1569          			from_flash_pic = 1;
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0x7060             STRB     R0,[R4, #+1]
   1570          			epr_write_data(EPR_PREVIEW_FROM_FLASH, &from_flash_pic,1);			
   \   0000003E   0x4602             MOV      R2,R0
   \   00000040   0x1C61             ADDS     R1,R4,#+1
   \   00000042   0xF44F 0x60E0      MOV      R0,#+1792
   \   00000046   0x.... 0x....      BL       epr_write_data
   \   0000004A   0xE007             B.N      ??gcode_has_preview_0
   1571          		}
   1572          		else
   1573          		{
   1574          			from_flash_pic = 0; 
   \                     ??gcode_has_preview_1: (+1)
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x7060             STRB     R0,[R4, #+1]
   1575          			epr_write_data(EPR_PREVIEW_FROM_FLASH, &from_flash_pic,1);		
   \   00000050   0x2201             MOVS     R2,#+1
   \   00000052   0x1C61             ADDS     R1,R4,#+1
   \   00000054   0xF44F 0x60E0      MOV      R0,#+1792
   \   00000058   0x.... 0x....      BL       epr_write_data
   1576          		}
   1577          	}
   1578          	#endif
   1579              f_close(&TEST_FIL1);
   \                     ??gcode_has_preview_0: (+1)
   \   0000005C   0xF104 0x0018      ADD      R0,R4,#+24
   \   00000060   0x.... 0x....      BL       f_close
   1580          #endif
   1581          }
   \   00000064   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x3E 0x00          DC8      ">",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x3A 0x00          DC8      ":",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   0x........         DC32     gCbEventStack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_1:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_2:
   \   00000000   0x........         DC32     main_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_3:
   \   00000000   0x........         DC32     file_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_4:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_5:
   \   00000000   0x........         DC32     printing_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_6:
   \   00000000   0x........         DC32     move_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_7:
   \   00000000   0x........         DC32     operation_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_8:
   \   00000000   0x........         DC32     pause_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_9:
   \   00000000   0x........         DC32     extrude_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_10:
   \   00000000   0x........         DC32     speed_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_11:
   \   00000000   0x........         DC32     fan_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_12:
   \   00000000   0x........         DC32     preheat_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_13:
   \   00000000   0x........         DC32     set_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_14:
   \   00000000   0x........         DC32     home_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_15:
   \   00000000   0x........         DC32     language_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_16:
   \   00000000   0x........         DC32     about_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_17:
   \   00000000   0x........         DC32     filesys_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_18:
   \   00000000   0x........         DC32     wifi_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_19:
   \   00000000   0x........         DC32     more_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_20:
   \   00000000   0x........         DC32     filament_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_21:
   \   00000000   0x........         DC32     leveling_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_22:
   \   00000000   0x........         DC32     cloud_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_23:
   \   00000000   0x........         DC32     zoffset_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_24:
   \   00000000   0x........         DC32     tool_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_25:
   \   00000000   0x........         DC32     curFileName

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_26:
   \   00000000   0x........         DC32     button4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_27:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_28:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_29:
   \   00000000   0x........         DC32     temperature_change_frequency

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_30:
   \   00000000   0x........         DC32     GUI_FontHZ_fontHz14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_31:
   \   00000000   0x........         DC32     WIDGET_Effect_Simple

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_32:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_33:
   \   00000000   0x........         DC32     mksReprint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_34:
   \   00000000   0x........         DC32     gCurFileState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_35:
   \   00000000   0x........         DC32     printing_rate_update_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_36:
   \   00000000   0x........         DC32     TimeIncrease

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_37:
   \   00000000   0x........         DC32     z_high_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_38:
   \   00000000   0x........         DC32     temper_error_flg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_39:
   \   00000000   0x........         DC32     gCfgItems+0x1A8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_40:
   \   00000000   0x........         DC32     current_position

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_41:
   \   00000000   0x........         DC32     wifi_refresh_flg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_42:
   \   00000000   0x........         DC32     bmp_public_buf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_43:
   \   00000000   0x........         DC32     logo_n

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_44:
   \   00000000   0x000317E0         DC32     0x317e0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_45:
   \   00000000   0x........         DC32     once_flag

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant ">...>">`:
   \   00000000   0x3E 0x2E          DC8 ">...>"
   \              0x2E 0x2E    
   \              0x3E 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Z: %.3f">`:
   \   00000000   0x5A 0x3A          DC8 "Z: %.3f"
   \              0x20 0x25    
   \              0x2E 0x33    
   \              0x66 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant ";simage:">`:
   \   00000000   0x3B 0x73          DC8 ";simage:"
   \              0x69 0x6D    
   \              0x61 0x67    
   \              0x65 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant ">">`:
   \   00000000   0x3E 0x00          DC8 ">"

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant ":">`:
   \   00000000   0x3A 0x00          DC8 ":"
   1582          
   1583          #if 0
   1584          
   1585          /*****************************************************/
   1586          //path:Œƒº˛¬∑æ∂
   1587          //xsize,ysize:œ‘ æ‘§¿¿Õº∆¨¥Û–°;
   1588          //sel:
   1589          //		0:Œƒº˛ƒø¬º‘§¿¿£ª
   1590          //		1:¥Ú”°Œƒº˛‘§¿¿
   1591          //
   1592          uint8_t drawicon_preview(char *path,int xsize_small,int ysize_small,int xsize_big,int ysize_big,char sel)
   1593          {
   1594          
   1595          	uint16_t *p_index;
   1596          	int i=0;
   1597          	char re;
   1598          	UINT read;
   1599          	char temp_test[8];
   1600          	int row_1=0;
   1601              
   1602          	re = f_open(&TEST_FIL,path, FA_OPEN_EXISTING | FA_READ);//huaping.gcode
   1603          	if(re == FR_OK)
   1604          	{
   1605                  memset(bmp_public_buf,0,sizeof(bmp_public_buf));
   1606          		if(sel == 1)//big pic
   1607          		{
   1608          			f_lseek(&TEST_FIL,xsize_small*ysize_small+8*(ysize_small+1));
   1609          		}
   1610          		f_read(&TEST_FIL,&bmp_public_buf,8,&read);
   1611          		if((bmp_public_buf[0] ==';')&&(bmp_public_buf[1] =='s')
   1612          			&&(bmp_public_buf[2] =='i')&&(bmp_public_buf[3] =='m')
   1613          			&&(bmp_public_buf[4] =='a')&&(bmp_public_buf[5] =='g')
   1614          			&&(bmp_public_buf[6] =='e')&&(bmp_public_buf[7] ==':'))
   1615          		{
   1616          			while(1)
   1617          			{
   1618          				f_read(&TEST_FIL,&temp_test,2,&read);
   1619          				if(sel == 1)//big pic
   1620          				{
   1621          						bmp_public_buf[row_1*(xsize_big*4)+i/2] = (char)(ascii2dec_test(&temp_test[0])<<4|ascii2dec_test(&temp_test[1]));				
   1622          				}
   1623          				else
   1624          	            {
   1625          	              		bmp_public_buf[row_1*(xsize_small*2)+i/2] = (char)(ascii2dec_test(&temp_test[0])<<4|ascii2dec_test(&temp_test[1]));
   1626          	            }
   1627          				i=i+2;
   1628          				if(sel == 1)//big pic
   1629          				{
   1630          					if(i>=(xsize_big*4))
   1631          					{
   1632          		                i=0;
   1633          		                row_1++;
   1634          		                f_read(&TEST_FIL,&temp_test,9,&read);					
   1635          					}
   1636          					if(row_1>ysize_big)
   1637          						break;					
   1638          				}
   1639          				else
   1640          				{
   1641          					if(i>=(xsize_small*4))
   1642          					{
   1643          		                i=0;
   1644          		                row_1++;
   1645          		                f_read(&TEST_FIL,&temp_test,9,&read);					
   1646          					}
   1647          					if(row_1>ysize_small)
   1648          						break;
   1649          				}
   1650          
   1651          			}
   1652          			f_close(&TEST_FIL);
   1653          			return 1;
   1654          		}
   1655          	}
   1656          	f_close(&TEST_FIL);
   1657          	return 0;
   1658          
   1659          }
   1660          #endif
   1661          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   DRAW_LOGO
        32   -> LCD_WriteRAM
        32   -> LCD_WriteRAM_Prepare
         0   -> LCD_setWindowArea
        32   -> LCD_setWindowArea
        32   -> Pic_Logo_Read
      56   Draw_default_preview(int, int, uint8_t)
        56   -> LCD_WriteRAM
        56   -> LCD_WriteRAM_Prepare
        56   -> LCD_setWindowArea
        56   -> default_view_Read
        56   -> flash_view_Read
      16   GUI_RefreshPage
        16   -> GUI_DispStringAt
        16   -> __aeabi_f2d
        16   -> disp_bed_temp_printing
        16   -> disp_desire_temp
        16   -> disp_fan_move_printing
        16   -> disp_fan_speed
        16   -> disp_filament_sprayer_temp
        16   -> disp_print_time
        16   -> disp_sprayer_tem_printing
        16   -> disp_sprayer_temp
        16   -> disp_temp_operate
        16   -> disp_temp_pause
        16   -> disp_wifi_state
        16   -> disp_zpos
        16   -> draw_ready_print
        16   -> filament_dialog_handle()
        16   -> memset
         0   -> print_time_run
        16   -> refresh_bind_ui
        16   -> setProBarRate
        16   -> setProBarRateOpera
        16   -> sprintf
       0   GUI_callback
         0   -> pop_cb_stack()
       0   ascii2dec_test1(char *)
       8   clear_cur_ui
         8   -> Clear_About
         8   -> Clear_Bind
         8   -> Clear_Hardwaretest
         8   -> Clear_Language
         8   -> Clear_Leveling
         8   -> Clear_MeshLeveling
         8   -> Clear_Printmore
         8   -> Clear_Set
         8   -> Clear_Tool()
         8   -> Clear_Wifi
         8   -> Clear_Zero
         8   -> Clear_changeSpeed
         8   -> Clear_dialog
         8   -> Clear_extrusion
         8   -> Clear_fan
         8   -> Clear_more
         8   -> Clear_move_motor
         8   -> Clear_operate
         8   -> Clear_pause
         8   -> Clear_preHeat
         8   -> Clear_print_file
         8   -> Clear_printing
         8   -> Clear_ready_print
         0   -> GUI_Clear
      40   creat_title_text
        40   -> cutFileName
        40   -> getDispText(int)
        40   -> memset
        40   -> strlen
        40   -> titleText_cat(char *, int, char *)
      16   disp_pre_gcode
        16   -> Draw_default_preview(int, int, uint8_t)
        16   -> gcode_preview(FIL *, int, int)
       0   disp_sel_lang
         0   -> BUTTON_SetBkColor
       0   draw_return_ui
         0   -> draw_About
         0   -> draw_FilamentChange
         0   -> draw_Hardwaretest
         0   -> draw_Language
         0   -> draw_More
         0   -> draw_Set
         0   -> draw_Wifi
         0   -> draw_Zero
         0   -> draw_bind
         0   -> draw_changeSpeed
         0   -> draw_extrusion
         0   -> draw_fan
         0   -> draw_leveling
         0   -> draw_meshleveling
         0   -> draw_move_motor
         0   -> draw_operate
         0   -> draw_pause
         0   -> draw_preHeat
         0   -> draw_print_file
         0   -> draw_printing
         0   -> draw_printmore
         0   -> draw_ready_print
         0   -> draw_tool()
      16   gcode_has_preview
        16   -> epr_write_data
        16   -> f_close
        16   -> f_open
        16   -> f_read
        16   -> strstr(char const *, char const *)
      32   gcode_preview(FIL *, int, int)
        32   -> LCD_WriteRAM
        32   -> LCD_WriteRAM_Prepare
        32   -> LCD_setWindowArea
        32   -> SPI_FLASH_BufferWrite
        32   -> SPI_FLASH_SectorErase
        32   -> ascii2dec_test1(char *)
        32   -> f_close
        32   -> f_lseek
        32   -> f_open
        32   -> f_read
        32   -> reset_file_info
      16   getDispText(int)
        16   -> memset
        16   -> strcpy
      16   get_printing_rate
        16   -> __aeabi_f2iz
        16   -> __aeabi_fdiv
        16   -> __aeabi_fmul
        16   -> __aeabi_ui2f
      16   gui_view_init
        16   -> BUTTON_SetDefaultBkColor
        16   -> BUTTON_SetDefaultFont
        16   -> BUTTON_SetDefaultTextAlign
        16   -> BUTTON_SetDefaultTextColor
        16   -> GUI_SetBkColor
        16   -> GUI_SetFont
        16   -> TEXT_SetDefaultFont
        16   -> WIDGET_SetDefaultEffect
         0   -> init_cb_stack()
       8   init_cb_stack()
         8   -> memset
       0   pop_cb_stack()
      16   preview_gcode_prehandle
        16   -> epr_write_data
        16   -> f_open
        16   -> f_read
        16   -> strstr(char const *, char const *)
       8   push_cb_stack
       0   strstr(char const *, char const *)
         0   -> __iar_Strstr
      24   titleText_cat(char *, int, char *)
         0   -> strcat
        24   -> strlen


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  ?<Constant ":">
      12  ?<Constant ";simage:">
       2  ?<Constant ">">
       8  ?<Constant ">...>">
       8  ?<Constant "Z: %.3f">
       4  ??DataTable13
       4  ??DataTable14
       4  ??DataTable21
       4  ??DataTable21_1
       4  ??DataTable21_10
       4  ??DataTable21_11
       4  ??DataTable21_12
       4  ??DataTable21_13
       4  ??DataTable21_14
       4  ??DataTable21_15
       4  ??DataTable21_16
       4  ??DataTable21_17
       4  ??DataTable21_18
       4  ??DataTable21_19
       4  ??DataTable21_2
       4  ??DataTable21_20
       4  ??DataTable21_21
       4  ??DataTable21_22
       4  ??DataTable21_23
       4  ??DataTable21_24
       4  ??DataTable21_25
       4  ??DataTable21_26
       4  ??DataTable21_27
       4  ??DataTable21_28
       4  ??DataTable21_29
       4  ??DataTable21_3
       4  ??DataTable21_30
       4  ??DataTable21_31
       4  ??DataTable21_32
       4  ??DataTable21_33
       4  ??DataTable21_34
       4  ??DataTable21_35
       4  ??DataTable21_36
       4  ??DataTable21_37
       4  ??DataTable21_38
       4  ??DataTable21_39
       4  ??DataTable21_4
       4  ??DataTable21_40
       4  ??DataTable21_41
       4  ??DataTable21_42
       4  ??DataTable21_43
       4  ??DataTable21_44
       4  ??DataTable21_45
       4  ??DataTable21_5
       4  ??DataTable21_6
       4  ??DataTable21_7
       4  ??DataTable21_8
       4  ??DataTable21_9
       1  BMP_PIC_X
       1  BMP_PIC_Y
     128  DRAW_LOGO
     172  Draw_default_preview(int, int, uint8_t)
     400  GUI_RefreshPage
       2  GUI_callback
      48  ascii2dec_test1(char *)
      24  button4
     210  clear_cur_ui
     220  creat_title_text
     556  curFile_1
      68  disp_pre_gcode
      36  disp_sel_lang
     236  disp_state_stack
          TitleText
          titleText
     180  draw_return_ui
      44  gCbEventStack
     102  gcode_has_preview
     306  gcode_preview(FIL *, int, int)
     582  getDispText(int)
     116  get_printing_rate
      96  gui_view_init
      22  init_cb_stack()
       1  last_disp_state
      16  logo_n
      48  pop_cb_stack()
     104  preview_gcode_prehandle
       1  preview_pic
      58  push_cb_stack
       4  strstr(char const *, char const *)
    1092  temperature_change_frequency
          from_flash_pic
          fan_move_flag
          gcode_preview_over
          flash_preview_begin
          default_preview_flg
          disp_state
          To_pre_view
          srcfp
          row
          size
          TEST_FIL1
          buff_pic
      48  titleText_cat(char *, int, char *)
       1  -- Other

 
   864 bytes in section .bss
 1 108 bytes in section .data
     5 bytes in section .rodata
 3 170 bytes in section .text
 
 3 166 bytes of CODE  memory (+ 4 bytes shared)
     4 bytes of CONST memory (+ 1 byte  shared)
 1 972 bytes of DATA  memory

Errors: none
Warnings: 45
