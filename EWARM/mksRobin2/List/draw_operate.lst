###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  18:22:50
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_operate.cpp
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_operate.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\..\Middlewares\GUI\
#        -Om --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\draw_operate.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\draw_operate.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_operate.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "PROGBAR.h"
      4          #include "draw_operate.h"
      5          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\EWARM/../Middlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Inc\mks_cfg.h",609  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_en.h",135  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_s_cn.h",218  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 213)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_t_cn.h",127  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 113)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_ru.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_ru.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 225)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_fr.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_fr.h",233  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 229)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_sp.h",132  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 113)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_it.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Language_it.h",229  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 224)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Multi_language.h",652  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 645)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\Multi_language\Multi_language.h",860  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 854)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.h",492  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.h",547  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          544)

  #define Complex_Speed "ÀŸ∂»"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_ui.h",548  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          545)
      6          #include "fontLib.h"
      7          #include "LISTBOX.h"
      8          #include "text.h"
      9          #include "draw_printing.h"
     10          #include "draw_pause_ui.h"
     11          #include "draw_pre_heat.h"
     12          #include "draw_fan.h"
     13          #include "draw_change_speed.h"
     14          #include "draw_printing_moremenu.h"
     15          //#include "mks_tft_com.h"
     16          #include "mks_cfg.h"
     17          #include "draw_move_motor.h"
     18          #include "draw_extrusion.h"
     19          #include "draw_filamentchange.h"
     20          
     21          #include "marlin.h"

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Marlin_export.h")

    }
    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\marlin.h",538  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"
     22          #include "mks_reprint.h"

  #define SD_DETECT_INVERTED false
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\cardreader.h",27  Warning[Pe047]: 
          incompatible redefinition of macro "SD_DETECT_INVERTED" (declared at
          line 524 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Configuration_adv.h")

  #define PSTR(s) s
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\cardreader.h",31  Warning[Pe047]: 
          incompatible redefinition of macro "PSTR" (declared at line 63 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\EWARM/../Middlewares/Third_Party/Marlin\marlin.h")

  #define pgm_read_byte(x) (*(char*)x)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\cardreader.h",32  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_byte" (declared at line
          64 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\Marlin_export.h")

      static constexpr int8_t next_block_index(const int8_t block_index) { return BLOCK_MOD(block_index + 1); }
             ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\planner.h",627  Warning[Pe815]: 
          type qualifier on return type is meaningless

      static constexpr int8_t prev_block_index(const int8_t block_index) { return BLOCK_MOD(block_index - 1); }
             ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\planner.h",628  Warning[Pe815]: 
          type qualifier on return type is meaningless

        target_temperature[HOTEND_INDEX] = celsius;
                                         ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\temperature.h",406  Warning[Pa093]: 
          implicit conversion from floating point to integer

          target_temperature_bed =
                                 ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\temperature.h",414  Warning[Pa093]: 
          implicit conversion from floating point to integer

  #define LONG_FILENAME_LENGTH (13*MAX_VFAT_ENTRIES+1)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\cardreader.h",61  Warning[Pe047]: 
          incompatible redefinition of macro "LONG_FILENAME_LENGTH" (declared
          at line 119 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\SdFatConfig.h")

  #define ALLOW_DEPRECATED_FUNCTIONS 0
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\SdFat.h",635  Warning[Pe047]: 
          incompatible redefinition of macro "ALLOW_DEPRECATED_FUNCTIONS"
          (declared at line 67 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\SdFatConfig.h")

  #define SPI_SD_INIT_RATE 11
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Third_Party\Marlin\SdFat.h",647  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_SD_INIT_RATE" (declared at
          line 79 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\Middlewares\Third_Party\Marlin\SdFatConfig.h")
     23          #ifndef GUI_FLASH
     24          #define GUI_FLASH
     25          #endif
     26          
     27          extern float feedrate_mm_s;
     28          
     29          

   \                                 In section .bss, align 4
     30          static GUI_HWIN hOperateWnd, hStopDlgWnd;
     31          
     32          extern int8_t curFilePath[30];
     33          extern FILE_PRINT_STATE gCurFileState ;
     34          extern void reset_tx_fifo();
     35          
     36          extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz18;
     37          extern int X_ADD, X_INTERVAL;
     38          
     39          static PROGBAR_Handle printingBar;
     40          
     41          static TEXT_Handle textPrintTemp1, textPrintTemp2, printStopDlgText,Fill_State_BK;
     42          static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
     43          static BUTTON_STRUCT buttonFilament,buttonAuto_Off,buttonExtrude,buttonMove,buttonLed;
     44          
     45          //extern PR_STATUS printerStaus;
     46          extern uint8_t flash_preview_begin;
     47          extern uint8_t from_flash_pic;
     48          extern uint8_t default_preview_flg;
     49          
     50          uint8_t pause_flag;
     51          
     52          uint8_t IsChooseAutoShutdown = 0;
   \                     IsChooseAutoShutdown:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   \   00000004                      DS8 24
   \   0000001C                      DS8 24

   \                                 In section .bss, align 2
   \                     printingBar:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     textPrintTemp1:
   \   00000000                      DS8 2
   \   00000002                      DS8 2

   \                                 In section .bss, align 4
   \                     buttonSpeed:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonRet:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonFilament:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonMove:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 1
   \                     pause_flag:
   \   00000000                      DS8 1
     53          
     54          extern uint8_t led_state;
     55          
     56          //void Autoshutdown_display();
     57          

   \                                 In section .text, align 2, keep-with-next
     58          static void cbOperateWin(WM_MESSAGE * pMsg) {
     59          
     60          switch (pMsg->MsgId)
   \                     _Z12cbOperateWinP10WM_MESSAGE: (+1)
   \   00000000   0x6801             LDR      R1,[R0, #+0]
   \   00000002   0x290C             CMP      R1,#+12
   \   00000004   0xD100             BNE.N    ??cbOperateWin_0
   \   00000006   0x4770             BX       LR
   \                     ??cbOperateWin_0: (+1)
   \   00000008   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   0000000C   0x290D             CMP      R1,#+13
   \   0000000E   0xF000 0x8136      BEQ.W    ??cbOperateWin_1
   \   00000012   0x290F             CMP      R1,#+15
   \   00000014   0xF000 0x8133      BEQ.W    ??cbOperateWin_1
   \   00000018   0x2926             CMP      R1,#+38
   \   0000001A   0xF040 0x812C      BNE.W    ??cbOperateWin_2
     61          {
     62          	case WM_PAINT:
     63          		//GUI_SetColor(gCfgItems.state_background_color);
     64          		//GUI_DrawRect(LCD_WIDTH/4+X_ADD, 0, LCD_WIDTH *3 / 4-X_INTERVAL, imgHeight /2 -15);
     65          		//GUI_SetColor(gCfgItems.state_background_color);
     66          		//GUI_FillRect(LCD_WIDTH/4+X_ADD, 0, LCD_WIDTH *3 / 4-X_INTERVAL, imgHeight /2 -15);
     67          		
     68          		break;
     69          	case WM_TOUCH:
     70          	 	
     71          		break;
     72          	case WM_TOUCH_CHILD:
     73          		
     74          		break;
     75          		
     76          	case WM_NOTIFY_PARENT:
     77          		#if 1
     78          		if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \   0000001E   0x6881             LDR      R1,[R0, #+8]
   \   00000020   0x2902             CMP      R1,#+2
   \   00000022   0xF040 0x812C      BNE.W    ??cbOperateWin_1
     79          		{
     80          			#if !defined(TFT35)
     81          			if(pMsg->hWinSrc == buttonPause.btnHandle)
     82          			{
     83          				stop_print_time();
     84                          if(mksCfg.extruders==2)
     85          				{
     86          					gCfgItems.curSprayerChoose_bak= active_extruder;
     87          					gCfgItems.moveSpeed_bak = feedrate_mm_s;
     88          				}
     89          				if(mksReprint.mks_printer_state == MKS_WORKING)
     90          				{
     91          					//MX_I2C1_Init(100000);
     92                				card.pauseSDPrint();
     93                				print_job_timer.pause();  
     94                              mksReprint.mks_printer_state = MKS_PAUSING;
     95                              last_disp_state = OPERATE_UI;
     96          					Clear_operate();
     97          					draw_pause();
     98          				}
     99          			}
    100          			else if(pMsg->hWinSrc == buttonStop.btnHandle)
    101          			{	
    102          				last_disp_state = OPERATE_UI;
    103          				Clear_operate();
    104          				draw_dialog(DIALOG_TYPE_STOP);
    105          			}
    106          			else 
    107          				#endif
    108          		    if(pMsg->hWinSrc == buttonRet.btnHandle)
   \   00000026   0xF9B0 0x0006      LDRSH    R0,[R0, #+6]
   \   0000002A   0x.... 0x....      LDR.W    R2,??DataTable22
   \   0000002E   0xF9B2 0x1000      LDRSH    R1,[R2, #+0]
   \   00000032   0x4288             CMP      R0,R1
   \   00000034   0xD117             BNE.N    ??cbOperateWin_3
    109          			{
    110          			#if defined(TFT35)
    111          				if(from_flash_pic==1)
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0x2801             CMP      R0,#+1
   \   0000003E   0xD104             BNE.N    ??cbOperateWin_4
    112          					flash_preview_begin = 1;
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable22_2
   \   00000046   0x7008             STRB     R0,[R1, #+0]
   \   00000048   0xE003             B.N      ??cbOperateWin_5
    113          				else
    114          					default_preview_flg = 1;
   \                     ??cbOperateWin_4: (+1)
   \   0000004A   0x2001             MOVS     R0,#+1
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable22_3
   \   00000050   0x7008             STRB     R0,[R1, #+0]
    115          			#endif
    116          				last_disp_state = OPERATE_UI;
   \                     ??cbOperateWin_5: (+1)
   \   00000052   0x2005             MOVS     R0,#+5
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable22_4
   \   00000058   0x7008             STRB     R0,[R1, #+0]
    117          				Clear_operate();
   \   0000005A   0x.... 0x....      BL       Clear_operate
    118          				//draw_return_ui();
    119          				draw_printing();
   \   0000005E   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000062   0x.... 0x....      B.W      draw_printing
    120          			}
    121          			else if(pMsg->hWinSrc == buttonTemperature.btnHandle)
   \                     ??cbOperateWin_3: (+1)
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable22_5
   \   0000006A   0xF9B1 0x3004      LDRSH    R3,[R1, #+4]
   \   0000006E   0x4298             CMP      R0,R3
   \   00000070   0xD117             BNE.N    ??cbOperateWin_6
    122          			{
    123          				if(mksCfg.extruders==2)
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable22_6
   \   00000076   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   0000007A   0x2802             CMP      R0,#+2
   \   0000007C   0xD107             BNE.N    ??cbOperateWin_7
    124          				{
    125          					gCfgItems.curSprayerChoose_bak= active_extruder;
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable22_7
   \   00000082   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable22_8
   \   0000008A   0xF881 0x009D      STRB     R0,[R1, #+157]
    126          				}			
    127          				last_disp_state = OPERATE_UI;
   \                     ??cbOperateWin_7: (+1)
   \   0000008E   0x2005             MOVS     R0,#+5
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable22_4
   \   00000094   0x7008             STRB     R0,[R1, #+0]
    128          				Clear_operate();
   \   00000096   0x.... 0x....      BL       Clear_operate
    129          				draw_preHeat();
   \   0000009A   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000009E   0x.... 0x....      B.W      draw_preHeat
    130          			}
    131          	            #if defined(TFT35)
    132          				else if(pMsg->hWinSrc == buttonFan.btnHandle)
   \                     ??cbOperateWin_6: (+1)
   \   000000A2   0xF9B2 0x2018      LDRSH    R2,[R2, #+24]
   \   000000A6   0x4290             CMP      R0,R2
   \   000000A8   0xD109             BNE.N    ??cbOperateWin_8
    133          				{
    134          					last_disp_state = OPERATE_UI;
   \   000000AA   0x2005             MOVS     R0,#+5
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable22_4
   \   000000B0   0x7008             STRB     R0,[R1, #+0]
    135          					Clear_operate();
   \   000000B2   0x.... 0x....      BL       Clear_operate
    136          					draw_fan();
   \   000000B6   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   000000BA   0x.... 0x....      B.W      draw_fan
    137          				}
    138          	            #endif
    139          			else if(pMsg->hWinSrc == buttonFilament.btnHandle)
   \                     ??cbOperateWin_8: (+1)
   \   000000BE   0x.... 0x....      LDR.W    R2,??DataTable22_9
   \   000000C2   0xF9B2 0x3000      LDRSH    R3,[R2, #+0]
   \   000000C6   0x4298             CMP      R0,R3
   \   000000C8   0xD14B             BNE.N    ??cbOperateWin_9
    140          			{
    141          				if(mksCfg.extruders==2)
   \   000000CA   0x.... 0x....      LDR.W    R4,??DataTable22_8
   \   000000CE   0x.... 0x....      LDR.W    R5,??DataTable22_7
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable22_6
   \   000000D6   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   000000DA   0x2802             CMP      R0,#+2
   \   000000DC   0xD10A             BNE.N    ??cbOperateWin_10
    142          				{
    143          					gCfgItems.curSprayerChoose_bak= active_extruder;
   \   000000DE   0xF995 0x0000      LDRSB    R0,[R5, #+0]
   \   000000E2   0xF884 0x009D      STRB     R0,[R4, #+157]
    144          					gCfgItems.moveSpeed_bak = feedrate_mm_s;
                 					                        ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable22_10
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0x.... 0x....      BL       __aeabi_f2iz
   \   000000F0   0xF8A4 0x00B2      STRH     R0,[R4, #+178]
    145          				}
    146          
    147          				if(mksReprint.mks_printer_state == MKS_WORKING)
   \                     ??cbOperateWin_10: (+1)
   \   000000F4   0x.... 0x....      LDR.W    R6,??DataTable22_11
   \   000000F8   0x.... 0x....      LDR.W    R7,??DataTable22_12
   \   000000FC   0x.... 0x....      LDR.W    R8,??DataTable22_4
   \   00000100   0xF897 0x00B4      LDRB     R0,[R7, #+180]
   \   00000104   0x28A7             CMP      R0,#+167
   \   00000106   0xD11C             BNE.N    ??cbOperateWin_11
    148          				{
    149          					stop_print_time();
   \   00000108   0x.... 0x....      BL       stop_print_time
    150          					last_disp_state = OPERATE_UI;
   \   0000010C   0x2005             MOVS     R0,#+5
   \   0000010E   0xF888 0x0000      STRB     R0,[R8, #+0]
    151          					//MX_I2C1_Init();
    152                				card.pauseSDPrint();
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable22_13
   \   00000116   0x.... 0x....      BL       _ZN10CardReader12pauseSDPrintEv
    153                				print_job_timer.pause();					
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable22_14
   \   0000011E   0x.... 0x....      BL       _ZN9Stopwatch5pauseEv
    154          					mksReprint.mks_printer_state = MKS_PAUSING;				
   \   00000122   0x20A9             MOVS     R0,#+169
   \   00000124   0xF887 0x00B4      STRB     R0,[R7, #+180]
    155          					Clear_operate();
   \   00000128   0x.... 0x....      BL       Clear_operate
    156          					gCfgItems.desireSprayerTempBak = thermalManager.target_temperature[active_extruder];
   \   0000012C   0x7828             LDRB     R0,[R5, #+0]
   \   0000012E   0xF856 0x0020      LDR      R0,[R6, R0, LSL #+2]
   \   00000132   0x.... 0x....      BL       __aeabi_i2f
   \   00000136   0xF8C4 0x013C      STR      R0,[R4, #+316]
    157          					draw_FilamentChange();
   \   0000013A   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000013E   0x.... 0x....      B.W      draw_FilamentChange
    158          				}
    159          				else
    160          				{
    161          					last_disp_state = OPERATE_UI;
   \                     ??cbOperateWin_11: (+1)
   \   00000142   0x2005             MOVS     R0,#+5
   \   00000144   0xF888 0x0000      STRB     R0,[R8, #+0]
    162          					Clear_operate();
   \   00000148   0x.... 0x....      BL       Clear_operate
    163                              gCfgItems.desireSprayerTempBak = thermalManager.target_temperature[active_extruder];
   \   0000014C   0x7828             LDRB     R0,[R5, #+0]
   \   0000014E   0xF856 0x0020      LDR      R0,[R6, R0, LSL #+2]
   \   00000152   0x.... 0x....      BL       __aeabi_i2f
   \   00000156   0xF8C4 0x013C      STR      R0,[R4, #+316]
    164          					draw_FilamentChange();					
   \   0000015A   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000015E   0x.... 0x....      B.W      draw_FilamentChange
    165          				}
    166          
    167          			}			
    168          			else if (pMsg->hWinSrc == buttonMore_printing.btnHandle)
   \                     ??cbOperateWin_9: (+1)
   \   00000162   0x.... 0x....      LDR.W    R3,??DataTable22_15
   \   00000166   0xF9B3 0x4018      LDRSH    R4,[R3, #+24]
   \   0000016A   0x42A0             CMP      R0,R4
   \   0000016C   0xD109             BNE.N    ??cbOperateWin_12
    169          			{
    170          				last_disp_state = OPERATE_UI;
   \   0000016E   0x2005             MOVS     R0,#+5
   \   00000170   0x.... 0x....      LDR.W    R1,??DataTable22_4
   \   00000174   0x7008             STRB     R0,[R1, #+0]
    171          				Clear_operate();
   \   00000176   0x.... 0x....      BL       Clear_operate
    172          				draw_printmore();	
   \   0000017A   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000017E   0x.... 0x....      B.W      draw_printmore
    173          			}
    174                      #if defined(MKS_ROBIN2) ||defined(MKS_ROBIN_NANO)
    175          			else if(pMsg->hWinSrc == buttonSpeed.btnHandle)
   \                     ??cbOperateWin_12: (+1)
   \   00000182   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000186   0x4298             CMP      R0,R3
   \   00000188   0xD109             BNE.N    ??cbOperateWin_13
    176          			{
    177          				last_disp_state = OPERATE_UI;
   \   0000018A   0x2005             MOVS     R0,#+5
   \   0000018C   0x.... 0x....      LDR.W    R1,??DataTable22_4
   \   00000190   0x7008             STRB     R0,[R1, #+0]
    178          				Clear_operate();
   \   00000192   0x.... 0x....      BL       Clear_operate
    179          				//if(gCfgItems.sprayerNum==2)
    180          				//{
    181          				//	gCfgItems.curSprayerChoose_bak= gCfgItems.curSprayerChoose;
    182          				//}
    183          				draw_changeSpeed();
   \   00000196   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000019A   0x.... 0x....      B.W      draw_changeSpeed
    184          
    185          			}
    186          			else if(pMsg->hWinSrc == buttonExtrude.btnHandle)
   \                     ??cbOperateWin_13: (+1)
   \   0000019E   0xF9B2 0x2018      LDRSH    R2,[R2, #+24]
   \   000001A2   0x4290             CMP      R0,R2
   \   000001A4   0xD123             BNE.N    ??cbOperateWin_14
    187          			{
    188          				last_disp_state = OPERATE_UI;
   \   000001A6   0x2005             MOVS     R0,#+5
   \   000001A8   0x.... 0x....      LDR.W    R1,??DataTable22_4
   \   000001AC   0x7008             STRB     R0,[R1, #+0]
    189          				Clear_operate();
   \   000001AE   0x.... 0x....      BL       Clear_operate
    190          				if(mksCfg.extruders==2)
   \   000001B2   0x.... 0x....      LDR.W    R5,??DataTable22_10
   \   000001B6   0x.... 0x....      LDR.W    R4,??DataTable22_8
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable22_6
   \   000001BE   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   000001C2   0x2802             CMP      R0,#+2
   \   000001C4   0xD10A             BNE.N    ??cbOperateWin_15
    191          				{
    192          					gCfgItems.curSprayerChoose_bak= active_extruder;
   \   000001C6   0x.... 0x....      LDR.W    R0,??DataTable22_7
   \   000001CA   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   000001CE   0xF884 0x009D      STRB     R0,[R4, #+157]
    193          					gCfgItems.moveSpeed_bak = feedrate_mm_s;
                 					                        ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   000001D2   0x6828             LDR      R0,[R5, #+0]
   \   000001D4   0x.... 0x....      BL       __aeabi_f2iz
   \   000001D8   0xF8A4 0x00B2      STRH     R0,[R4, #+178]
    194          				}
    195          				gCfgItems.extruSpeed_bak = feedrate_mm_s;
                 				                         ^
Warning[Pa093]: implicit conversion from floating point to integer
   \                     ??cbOperateWin_15: (+1)
   \   000001DC   0x6828             LDR      R0,[R5, #+0]
   \   000001DE   0x.... 0x....      BL       __aeabi_f2iz
   \   000001E2   0xF884 0x00B0      STRB     R0,[R4, #+176]
    196          				draw_extrusion();
   \   000001E6   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   000001EA   0x.... 0x....      B.W      draw_extrusion
    197          			}	
    198          			else if(pMsg->hWinSrc == buttonMove.btnHandle)
   \                     ??cbOperateWin_14: (+1)
   \   000001EE   0x.... 0x....      LDR.W    R2,??DataTable22_16
   \   000001F2   0xF9B2 0x3000      LDRSH    R3,[R2, #+0]
   \   000001F6   0x4298             CMP      R0,R3
   \   000001F8   0xD112             BNE.N    ??cbOperateWin_16
    199          			{
    200          				gCfgItems.moveSpeed_bak = feedrate_mm_s;
                 				                        ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   000001FA   0x.... 0x....      LDR.W    R0,??DataTable22_10
   \   000001FE   0x6800             LDR      R0,[R0, #+0]
   \   00000200   0x.... 0x....      BL       __aeabi_f2iz
   \   00000204   0x.... 0x....      LDR.W    R1,??DataTable22_8
   \   00000208   0xF8A1 0x00B2      STRH     R0,[R1, #+178]
    201          				last_disp_state = OPERATE_UI;
   \   0000020C   0x2005             MOVS     R0,#+5
   \   0000020E   0x.... 0x....      LDR.W    R1,??DataTable22_4
   \   00000212   0x7008             STRB     R0,[R1, #+0]
    202          				Clear_operate();
   \   00000214   0x.... 0x....      BL       Clear_operate
    203          				draw_move_motor();
   \   00000218   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000021C   0x.... 0x....      B.W      draw_move_motor
    204          			}
    205          			#if 1
    206          			else if(pMsg->hWinSrc == buttonAuto_Off.btnHandle)
   \                     ??cbOperateWin_16: (+1)
   \   00000220   0xF9B1 0x301C      LDRSH    R3,[R1, #+28]
   \   00000224   0x4298             CMP      R0,R3
   \   00000226   0xD10C             BNE.N    ??cbOperateWin_17
    207          			{
    208          				if(IsChooseAutoShutdown == 1)
   \   00000228   0x7808             LDRB     R0,[R1, #+0]
   \   0000022A   0x2801             CMP      R0,#+1
   \   0000022C   0xD104             BNE.N    ??cbOperateWin_18
    209          				{
    210          						IsChooseAutoShutdown = 0;		
   \   0000022E   0x2000             MOVS     R0,#+0
   \   00000230   0x7008             STRB     R0,[R1, #+0]
    211          						Autoshutdown_display2();
   \   00000232   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000236   0x....             B.N      Autoshutdown_display2
    212          				}
    213          				else
    214          				{
    215          						IsChooseAutoShutdown = 1;
   \                     ??cbOperateWin_18: (+1)
   \   00000238   0x2001             MOVS     R0,#+1
   \   0000023A   0x7008             STRB     R0,[R1, #+0]
    216          						Autoshutdown_display2();
   \   0000023C   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000240   0x....             B.N      Autoshutdown_display2
    217          				}
    218          			}	
    219          			#endif
    220          			else if(pMsg->hWinSrc == buttonLed.btnHandle)
   \                     ??cbOperateWin_17: (+1)
   \   00000242   0xF9B2 0x1018      LDRSH    R1,[R2, #+24]
   \   00000246   0x4288             CMP      R0,R1
   \   00000248   0xD119             BNE.N    ??cbOperateWin_1
    221          			{
    222          				if(led_state == 0)
   \   0000024A   0x.... 0x....      LDR.W    R0,??DataTable22_17  ;; 0x40010c00
   \   0000024E   0x.... 0x....      LDR.W    R4,??DataTable22_18
   \   00000252   0x7821             LDRB     R1,[R4, #+0]
   \   00000254   0x2900             CMP      R1,#+0
   \   00000256   0xD104             BNE.N    ??cbOperateWin_19
    223          					HAL_GPIO_WritePin(HEATER2_GPIO_Port, HEATER2_Pin, GPIO_PIN_SET);
   \   00000258   0x2201             MOVS     R2,#+1
   \   0000025A   0x4611             MOV      R1,R2
   \   0000025C   0x.... 0x....      BL       HAL_GPIO_WritePin
   \   00000260   0xE003             B.N      ??cbOperateWin_20
    224          				else
    225          					HAL_GPIO_WritePin(HEATER2_GPIO_Port, HEATER2_Pin, GPIO_PIN_RESET);
   \                     ??cbOperateWin_19: (+1)
   \   00000262   0x2200             MOVS     R2,#+0
   \   00000264   0x2101             MOVS     R1,#+1
   \   00000266   0x.... 0x....      BL       HAL_GPIO_WritePin
    226          				led_state =!led_state;
   \                     ??cbOperateWin_20: (+1)
   \   0000026A   0x7821             LDRB     R1,[R4, #+0]
   \   0000026C   0x1E48             SUBS     R0,R1,#+1
   \   0000026E   0x4180             SBCS     R0,R0,R0
   \   00000270   0x0FC0             LSRS     R0,R0,#+31
   \   00000272   0x7020             STRB     R0,[R4, #+0]
   \   00000274   0xE003             B.N      ??cbOperateWin_1
    227          			}
    228                      #endif
    229          		}
    230          		#endif
    231          		break;
    232          		
    233          	default:
    234          		WM_DefaultProc(pMsg);
   \                     ??cbOperateWin_2: (+1)
   \   00000276   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000027A   0x.... 0x....      B.W      WM_DefaultProc
    235          	}
    236          }
   \                     ??cbOperateWin_1: (+1)
   \   0000027E   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    237          
    238          #if 0
    239          void draw_operate()
    240          {
    241          
    242          	int i;
    243          
    244          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != OPERATE_UI)
    245          	{
    246          		disp_state_stack._disp_index++;
    247          		disp_state_stack._disp_state[disp_state_stack._disp_index] = OPERATE_UI;
    248          	}
    249          	
    250          	disp_state = OPERATE_UI;
    251          		
    252          	GUI_SetBkColor(gCfgItems.background_color);
    253          	GUI_SetColor(gCfgItems.title_color);
    254          	GUI_Clear();
    255          
    256          	
    257          	//GUI_UC_SetEncodeNone();
    258          	//GUI_SetFont(&GUI_FontHZ16);
    259          	GUI_DispStringAt(creat_title_text(), TITLE_XPOS, TITLE_YPOS);
    260          	//GUI_SetFont(&FONT_TITLE);
    261          	//GUI_UC_SetEncodeUTF8();
    262          	
    263          	hOperateWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbOperateWin, 0);
    264          
    265          	buttonTemperature.btnHandle = BUTTON_CreateEx(INTERVAL_V,0,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 301);
    266          	buttonFan.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,0,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 302);
    267          	buttonFilament.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,0,BTN_X_PIXEL,BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 303);
    268          
    269          	if((mksReprint.mks_printer_state == MKS_PAUSING)||(mksReprint.mks_printer_state == MKS_PAUSED)||(mksReprint.mks_printer_state ==MKS_REPRINTING)||(mksReprint.mks_printer_state ==MKS_REPRINTED))
    270          	{
    271          		buttonSpeed.btnHandle = 0;
    272          		buttonAuto_Off.btnHandle = 0;
    273          		
    274          		buttonExtrude.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,0,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);
    275          		buttonMove.btnHandle = BUTTON_CreateEx(INTERVAL_V,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);		
    276          		buttonMore_printing.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
    277          
    278          		if(gCfgItems.print_finish_close_machine_flg == 1)
    279          		{
    280          			buttonAuto_Off.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 107);
    281          		}
    282          
    283          	}
    284          	else //if(mksReprint.mks_printer_state ==MKS_WORKING)
    285          	{
    286          			buttonExtrude.btnHandle = 0;
    287          			buttonMove.btnHandle = 0;
    288          			
    289          			buttonSpeed.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,0,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);
    290          			buttonMore_printing.btnHandle = BUTTON_CreateEx(INTERVAL_V, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
    291          		
    292          			if(gCfgItems.print_finish_close_machine_flg == 1)
    293          			{
    294          				buttonAuto_Off.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
    295          			}
    296          	}
    297          
    298          	
    299          	buttonRet.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 306);
    300          
    301          	#if VERSION_WITH_PIC	
    302          
    303          	BUTTON_SetBmpFileName(buttonTemperature.btnHandle, "bmp_opt_temp.bin",1);
    304          	BUTTON_SetBmpFileName(buttonSpeed.btnHandle, "bmp_speed.bin",1);
    305          	BUTTON_SetBmpFileName(buttonFan.btnHandle, "bmp_fan.bin",1);
    306          	BUTTON_SetBmpFileName(buttonFilament.btnHandle, "bmp_filament.bin",1);
    307          	BUTTON_SetBmpFileName(buttonExtrude.btnHandle, "bmp_extrude_opr.bin",1);
    308          	BUTTON_SetBmpFileName(buttonMove.btnHandle, "bmp_move_opr.bin",1);
    309          	BUTTON_SetBmpFileName(buttonMore_printing.btnHandle, "bmp_more_opr.bin",1);
    310          	if(gCfgItems.print_finish_close_machine_flg == 1)
    311          	{
    312          		if(IsChooseAutoShutdown == 1)
    313          		{
    314          			BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_auto_off.bin",1);
    315          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_sel_color);
    316          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_sel_color);	
    317          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_sel_textcolor);
    318          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_sel_textcolor);
    319          			
    320          			if(gCfgItems.multiple_language != 0)
    321          			{	
    322          				BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.auto_off);
    323          			}
    324          
    325          		}
    326          		else
    327          		{
    328          			BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_manual_off.bin",1);
    329          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_color);
    330          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_color);
    331          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_textcolor);
    332          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_textcolor);			
    333          			if(gCfgItems.multiple_language != 0)
    334          			{	
    335          				BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.manual_off);
    336          			}			
    337          		}
    338          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle,0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    339          
    340          		
    341          	}
    342          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",1);
    343          	
    344          	BUTTON_SetBitmapEx(buttonTemperature.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    345          	BUTTON_SetBitmapEx(buttonSpeed.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    346          	BUTTON_SetBitmapEx(buttonFan.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    347          	BUTTON_SetBitmapEx(buttonFilament.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    348          	BUTTON_SetBitmapEx(buttonExtrude.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    349          	BUTTON_SetBitmapEx(buttonMove.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    350          #if 0
    351          	if(gCfgItems.print_finish_close_machine_flg == 1)
    352          	{
    353          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    354          		BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    355          	}
    356          	else
    357          #endif
    358          	{
    359          		BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    360          	}
    361          	
    362          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    363          
    364          	BUTTON_SetBkColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    365          	BUTTON_SetBkColor(buttonTemperature.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    366          	BUTTON_SetBkColor(buttonSpeed.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    367          	BUTTON_SetBkColor(buttonSpeed.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    368          	BUTTON_SetBkColor(buttonFan.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    369          	BUTTON_SetBkColor(buttonFan.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    370          	BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    371          	BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    372          	BUTTON_SetTextColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    373          	BUTTON_SetTextColor(buttonTemperature.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    374          	BUTTON_SetTextColor(buttonSpeed.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    375          	BUTTON_SetTextColor(buttonSpeed.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    376          	BUTTON_SetTextColor(buttonFan.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    377          	BUTTON_SetTextColor(buttonFan.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    378          	BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    379          	BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    380          
    381          
    382          	BUTTON_SetBkColor(buttonMove.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    383          	BUTTON_SetBkColor(buttonMove.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    384          	BUTTON_SetTextColor(buttonMove.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    385          	BUTTON_SetTextColor(buttonMove.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    386          	
    387          	BUTTON_SetBkColor(buttonExtrude.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    388          	BUTTON_SetBkColor(buttonExtrude.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    389          	BUTTON_SetTextColor(buttonExtrude.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    390          	BUTTON_SetTextColor(buttonExtrude.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    391          
    392          	BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    393          	BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    394          	BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    395          	BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    396          
    397          
    398          
    399          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
    400          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
    401          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
    402          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);
    403          
    404          	if(gCfgItems.multiple_language != 0)
    405          	{
    406          		BUTTON_SetText(buttonFan.btnHandle, operation_menu.fan);
    407          		BUTTON_SetText(buttonFilament.btnHandle, operation_menu.filament);
    408          		BUTTON_SetText(buttonTemperature.btnHandle, operation_menu.temp);
    409          		BUTTON_SetText(buttonMore_printing.btnHandle, operation_menu.more);
    410          		BUTTON_SetText(buttonSpeed.btnHandle, operation_menu.speed);
    411          		BUTTON_SetText(buttonExtrude.btnHandle, operation_menu.extr);
    412          		BUTTON_SetText(buttonMove.btnHandle, operation_menu.move);
    413          		BUTTON_SetText(buttonRet.btnHandle, common_menu.text_back);
    414          	}
    415          
    416          	
    417          
    418          	#endif
    419          #if 0
    420          	if(gCfgItems.print_finish_close_machine_flg == 1)
    421          	{
    422          		Autoshutdown_display();
    423          	}
    424          #endif
    425          #if 0
    426          	Fill_State_BK = TEXT_CreateEx(LCD_WIDTH  / 4+X_ADD, 0, LCD_WIDTH / 2-X_INTERVAL, imgHeight / 2-X_INTERVAL, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT0, " ");
    427          	TEXT_SetBkColor(Fill_State_BK, gCfgItems.state_background_color);
    428          
    429          	textPrintTemp1 = TEXT_CreateEx(LCD_WIDTH  / 4 + 50, 120, LCD_WIDTH / 4 - 30, 80, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT1, " ");
    430          
    431          	textPrintTemp2 = TEXT_CreateEx(LCD_WIDTH  / 2+80 , 120, LCD_WIDTH / 4 - 90, 80, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT2, " ");
    432          	
    433          
    434          	TEXT_SetTextAlign(textPrintTemp1,  GUI_TA_VCENTER | GUI_TA_LEFT);
    435          	TEXT_SetTextAlign(textPrintTemp2,  GUI_TA_VCENTER | GUI_TA_LEFT);
    436          	
    437          	printingBar = PROGBAR_CreateEx(LCD_WIDTH  / 4 + 5, 40,  LCD_WIDTH / 2 - 10, 45, hOperateWnd, WM_CF_SHOW, 0, 0);
    438          	
    439          	PROGBAR_SetBarColor(printingBar, 0, GUI_GREEN);
    440          	
    441          	PROGBAR_SetTextColor(printingBar, 0, GUI_BLACK);
    442          	PROGBAR_SetFont(printingBar, &GUI_FontHZ_fontHz18);
    443          	
    444          	
    445          	PROGBAR_SetValue(printingBar, get_printing_rate(srcfp));
    446                
    447                 
    448          	disp_temp_operate();
    449          #endif	
    450          	//GUI_Exec();
    451          	
    452          
    453          
    454          	
    455          }
    456          
    457          #endif
    458          
    459          #if defined(TFT35)

   \                                 In section .text, align 2, keep-with-next
    460          void draw_operate()
    461          {
   \                     draw_operate: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
    462          #if 1
    463          	int i;
                 	    ^
Warning[Pe177]: variable "i" was declared but never referenced

  static GUI_HWIN hOperateWnd, hStopDlgWnd;
                               ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_operate.cpp",30  Warning[Pe177]: 
          variable "hStopDlgWnd" was declared but never referenced

  static TEXT_Handle textPrintTemp1, textPrintTemp2, printStopDlgText,Fill_State_BK;
                                                     ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_operate.cpp",41  Warning[Pe177]: 
          variable "printStopDlgText" was declared but never referenced

  static TEXT_Handle textPrintTemp1, textPrintTemp2, printStopDlgText,Fill_State_BK;
                                                                      ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_operate.cpp",41  Warning[Pe177]: 
          variable "Fill_State_BK" was declared but never referenced

  static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
                       ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_operate.cpp",42  Warning[Pe177]: 
          variable "buttonPause" was declared but never referenced

  static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
                                    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_operate.cpp",42  Warning[Pe177]: 
          variable "buttonStop" was declared but never referenced

  static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
                                                                                                                ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_operate.cpp",42  Warning[Pe177]: 
          variable "buttonOk" was declared but never referenced

  static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
                                                                                                                          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\User\ui\draw_operate.cpp",42  Warning[Pe177]: 
          variable "buttonCancle" was declared but never referenced
    464          
    465          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != OPERATE_UI)
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable22_19
   \   0000000A   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   0000000E   0x560A             LDRSB    R2,[R1, R0]
   \   00000010   0x2A05             CMP      R2,#+5
   \   00000012   0xD005             BEQ.N    ??draw_operate_0
    466          	{
    467          		disp_state_stack._disp_index++;
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \   00000016   0xF880 0x1064      STRB     R1,[R0, #+100]
    468          		disp_state_stack._disp_state[disp_state_stack._disp_index] = OPERATE_UI;
   \   0000001A   0x2205             MOVS     R2,#+5
   \   0000001C   0xB249             SXTB     R1,R1
   \   0000001E   0x540A             STRB     R2,[R1, R0]
    469          	}
    470          	
    471          	disp_state = OPERATE_UI;
   \                     ??draw_operate_0: (+1)
   \   00000020   0x2005             MOVS     R0,#+5
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable22_20
   \   00000026   0x7008             STRB     R0,[R1, #+0]
    472          		
    473          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000028   0x.... 0x....      LDR.W    R4,??DataTable22_8
   \   0000002C   0x6860             LDR      R0,[R4, #+4]
   \   0000002E   0x.... 0x....      BL       GUI_SetBkColor
    474          	GUI_SetColor(gCfgItems.title_color);
   \   00000032   0x1D25             ADDS     R5,R4,#+4
   \   00000034   0x6868             LDR      R0,[R5, #+4]
   \   00000036   0x.... 0x....      BL       GUI_SetColor
    475          	GUI_Clear();
   \   0000003A   0x.... 0x....      BL       GUI_Clear
    476          
    477          	
    478          	//GUI_UC_SetEncodeNone();
    479          	//GUI_SetFont(&GUI_FontHZ16);
    480          	GUI_DispStringAt(creat_title_text(), TITLE_XPOS, TITLE_YPOS);
   \   0000003E   0x.... 0x....      BL       creat_title_text
   \   00000042   0x2205             MOVS     R2,#+5
   \   00000044   0x2103             MOVS     R1,#+3
   \   00000046   0x.... 0x....      BL       GUI_DispStringAt
    481          	//GUI_SetFont(&FONT_TITLE);
    482          	//GUI_UC_SetEncodeUTF8();
    483          	
    484          	hOperateWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbOperateWin, 0);
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x9002             STR      R0,[SP, #+8]
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable22_21
   \   00000052   0x9001             STR      R0,[SP, #+4]
   \   00000054   0x2002             MOVS     R0,#+2
   \   00000056   0x9000             STR      R0,[SP, #+0]
   \   00000058   0xF44F 0x738E      MOV      R3,#+284
   \   0000005C   0xF44F 0x72F0      MOV      R2,#+480
   \   00000060   0x2124             MOVS     R1,#+36
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x.... 0x....      BL       WM_CreateWindow
   \   00000068   0x.... 0x....      LDR.W    R6,??DataTable22_5
   \   0000006C   0x8070             STRH     R0,[R6, #+2]
    485          
    486          	buttonTemperature.btnHandle = BUTTON_CreateEx(INTERVAL_V,0,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 301);
   \   0000006E   0xF240 0x112D      MOVW     R1,#+301
   \   00000072   0x9103             STR      R1,[SP, #+12]
   \   00000074   0x2100             MOVS     R1,#+0
   \   00000076   0x9102             STR      R1,[SP, #+8]
   \   00000078   0x2102             MOVS     R1,#+2
   \   0000007A   0x9101             STR      R1,[SP, #+4]
   \   0000007C   0x9000             STR      R0,[SP, #+0]
   \   0000007E   0x238C             MOVS     R3,#+140
   \   00000080   0x2275             MOVS     R2,#+117
   \   00000082   0x2100             MOVS     R1,#+0
   \   00000084   0x2002             MOVS     R0,#+2
   \   00000086   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000008A   0x80B0             STRH     R0,[R6, #+4]
    487          	buttonFan.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,0,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 302);
   \   0000008C   0x.... 0x....      LDR.W    R7,??DataTable22
   \   00000090   0xF44F 0x7097      MOV      R0,#+302
   \   00000094   0x9003             STR      R0,[SP, #+12]
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0x9002             STR      R0,[SP, #+8]
   \   0000009A   0x2002             MOVS     R0,#+2
   \   0000009C   0x9001             STR      R0,[SP, #+4]
   \   0000009E   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   000000A2   0x9000             STR      R0,[SP, #+0]
   \   000000A4   0x238C             MOVS     R3,#+140
   \   000000A6   0x2275             MOVS     R2,#+117
   \   000000A8   0x2100             MOVS     R1,#+0
   \   000000AA   0x2079             MOVS     R0,#+121
   \   000000AC   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000B0   0x8338             STRH     R0,[R7, #+24]
    488          	buttonFilament.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,0,BTN_X_PIXEL,BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 303);
   \   000000B2   0x.... 0x....      LDR.W    R8,??DataTable22_9
   \   000000B6   0xF240 0x102F      MOVW     R0,#+303
   \   000000BA   0x9003             STR      R0,[SP, #+12]
   \   000000BC   0x2000             MOVS     R0,#+0
   \   000000BE   0x9002             STR      R0,[SP, #+8]
   \   000000C0   0x2002             MOVS     R0,#+2
   \   000000C2   0x9001             STR      R0,[SP, #+4]
   \   000000C4   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   000000C8   0x9000             STR      R0,[SP, #+0]
   \   000000CA   0x238C             MOVS     R3,#+140
   \   000000CC   0x2275             MOVS     R2,#+117
   \   000000CE   0x2100             MOVS     R1,#+0
   \   000000D0   0x20F0             MOVS     R0,#+240
   \   000000D2   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000D6   0xF8A8 0x0000      STRH     R0,[R8, #+0]
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable22_12
   \   000000DE   0xF890 0x00B4      LDRB     R0,[R0, #+180]
   \   000000E2   0xF204 0x01D9      ADDW     R1,R4,#+217
   \   000000E6   0x9104             STR      R1,[SP, #+16]
   \   000000E8   0x.... 0x....      LDR.W    R9,??DataTable22_15
   \   000000EC   0x.... 0x....      LDR.W    R10,??DataTable22_16
   \   000000F0   0x28A9             CMP      R0,#+169
   \   000000F2   0xD005             BEQ.N    ??draw_operate_1
   \   000000F4   0x28AA             CMP      R0,#+170
   \   000000F6   0xD003             BEQ.N    ??draw_operate_1
   \   000000F8   0x28AB             CMP      R0,#+171
   \   000000FA   0xD001             BEQ.N    ??draw_operate_1
   \   000000FC   0x28AC             CMP      R0,#+172
   \   000000FE   0xD151             BNE.N    ??draw_operate_2
    489          
    490          	if((mksReprint.mks_printer_state == MKS_PAUSING)||(mksReprint.mks_printer_state == MKS_PAUSED)||(mksReprint.mks_printer_state ==MKS_REPRINTING)||(mksReprint.mks_printer_state ==MKS_REPRINTED))
    491          	{
    492          		buttonSpeed.btnHandle = 0;
   \                     ??draw_operate_1: (+1)
   \   00000100   0x2000             MOVS     R0,#+0
   \   00000102   0xF8A9 0x0000      STRH     R0,[R9, #+0]
    493          		buttonAuto_Off.btnHandle = 0;
   \   00000106   0x83B0             STRH     R0,[R6, #+28]
    494          		
    495          		buttonExtrude.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,0,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);
   \   00000108   0x206A             MOVS     R0,#+106
   \   0000010A   0x9003             STR      R0,[SP, #+12]
   \   0000010C   0x2000             MOVS     R0,#+0
   \   0000010E   0x9002             STR      R0,[SP, #+8]
   \   00000110   0x2002             MOVS     R0,#+2
   \   00000112   0x9001             STR      R0,[SP, #+4]
   \   00000114   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   00000118   0x9000             STR      R0,[SP, #+0]
   \   0000011A   0x238C             MOVS     R3,#+140
   \   0000011C   0x2275             MOVS     R2,#+117
   \   0000011E   0x2100             MOVS     R1,#+0
   \   00000120   0xF240 0x1067      MOVW     R0,#+359
   \   00000124   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000128   0xF8A8 0x0018      STRH     R0,[R8, #+24]
    496          		buttonMove.btnHandle = BUTTON_CreateEx(INTERVAL_V,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);		
   \   0000012C   0x206A             MOVS     R0,#+106
   \   0000012E   0x9003             STR      R0,[SP, #+12]
   \   00000130   0x2000             MOVS     R0,#+0
   \   00000132   0x9002             STR      R0,[SP, #+8]
   \   00000134   0x2002             MOVS     R0,#+2
   \   00000136   0x9001             STR      R0,[SP, #+4]
   \   00000138   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   0000013C   0x9000             STR      R0,[SP, #+0]
   \   0000013E   0x238C             MOVS     R3,#+140
   \   00000140   0x2275             MOVS     R2,#+117
   \   00000142   0x218E             MOVS     R1,#+142
   \   00000144   0x2002             MOVS     R0,#+2
   \   00000146   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000014A   0xF8AA 0x0000      STRH     R0,[R10, #+0]
    497          		if(gCfgItems.morefunc_cnt > 0)
   \   0000014E   0x9804             LDR      R0,[SP, #+16]
   \   00000150   0x7840             LDRB     R0,[R0, #+1]
   \   00000152   0x2800             CMP      R0,#+0
   \   00000154   0xD011             BEQ.N    ??draw_operate_3
    498          		buttonMore_printing.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
   \   00000156   0xF44F 0x7097      MOV      R0,#+302
   \   0000015A   0x9003             STR      R0,[SP, #+12]
   \   0000015C   0x2000             MOVS     R0,#+0
   \   0000015E   0x9002             STR      R0,[SP, #+8]
   \   00000160   0x2002             MOVS     R0,#+2
   \   00000162   0x9001             STR      R0,[SP, #+4]
   \   00000164   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   00000168   0x9000             STR      R0,[SP, #+0]
   \   0000016A   0x238C             MOVS     R3,#+140
   \   0000016C   0x2275             MOVS     R2,#+117
   \   0000016E   0x218E             MOVS     R1,#+142
   \   00000170   0x20F0             MOVS     R0,#+240
   \   00000172   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000176   0xF8A9 0x0018      STRH     R0,[R9, #+24]
    499          
    500          		if(gCfgItems.print_finish_close_machine_flg == 1)
   \                     ??draw_operate_3: (+1)
   \   0000017A   0xF894 0x00D9      LDRB     R0,[R4, #+217]
   \   0000017E   0x2801             CMP      R0,#+1
   \   00000180   0xD168             BNE.N    ??draw_operate_4
    501          		{
    502          			buttonAuto_Off.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 107);
   \   00000182   0x206B             MOVS     R0,#+107
   \   00000184   0x9003             STR      R0,[SP, #+12]
   \   00000186   0x2000             MOVS     R0,#+0
   \   00000188   0x9002             STR      R0,[SP, #+8]
   \   0000018A   0x2002             MOVS     R0,#+2
   \   0000018C   0x9001             STR      R0,[SP, #+4]
   \   0000018E   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   00000192   0x9000             STR      R0,[SP, #+0]
   \   00000194   0x238C             MOVS     R3,#+140
   \   00000196   0x2275             MOVS     R2,#+117
   \   00000198   0x218E             MOVS     R1,#+142
   \   0000019A   0x2079             MOVS     R0,#+121
   \   0000019C   0x.... 0x....      BL       BUTTON_CreateEx
   \   000001A0   0x83B0             STRH     R0,[R6, #+28]
   \   000001A2   0xE057             B.N      ??draw_operate_4
    503          		}
    504          
    505          	}
    506          	else //if(mksReprint.mks_printer_state ==MKS_WORKING)
    507          	{
    508          			buttonExtrude.btnHandle = 0;
   \                     ??draw_operate_2: (+1)
   \   000001A4   0x2000             MOVS     R0,#+0
   \   000001A6   0xF8A8 0x0018      STRH     R0,[R8, #+24]
    509          			buttonMove.btnHandle = 0;
   \   000001AA   0xF8AA 0x0000      STRH     R0,[R10, #+0]
    510          			
    511          			buttonSpeed.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,0,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);
   \   000001AE   0x206A             MOVS     R0,#+106
   \   000001B0   0x9003             STR      R0,[SP, #+12]
   \   000001B2   0x2000             MOVS     R0,#+0
   \   000001B4   0x9002             STR      R0,[SP, #+8]
   \   000001B6   0x2002             MOVS     R0,#+2
   \   000001B8   0x9001             STR      R0,[SP, #+4]
   \   000001BA   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   000001BE   0x9000             STR      R0,[SP, #+0]
   \   000001C0   0x238C             MOVS     R3,#+140
   \   000001C2   0x2275             MOVS     R2,#+117
   \   000001C4   0x2100             MOVS     R1,#+0
   \   000001C6   0xF240 0x1067      MOVW     R0,#+359
   \   000001CA   0x.... 0x....      BL       BUTTON_CreateEx
   \   000001CE   0xF8A9 0x0000      STRH     R0,[R9, #+0]
    512          			if(gCfgItems.morefunc_cnt > 0)
   \   000001D2   0x9804             LDR      R0,[SP, #+16]
   \   000001D4   0x7840             LDRB     R0,[R0, #+1]
   \   000001D6   0x2800             CMP      R0,#+0
   \   000001D8   0xD011             BEQ.N    ??draw_operate_5
    513          			buttonMore_printing.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
   \   000001DA   0xF44F 0x7097      MOV      R0,#+302
   \   000001DE   0x9003             STR      R0,[SP, #+12]
   \   000001E0   0x2000             MOVS     R0,#+0
   \   000001E2   0x9002             STR      R0,[SP, #+8]
   \   000001E4   0x2002             MOVS     R0,#+2
   \   000001E6   0x9001             STR      R0,[SP, #+4]
   \   000001E8   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   000001EC   0x9000             STR      R0,[SP, #+0]
   \   000001EE   0x238C             MOVS     R3,#+140
   \   000001F0   0x2275             MOVS     R2,#+117
   \   000001F2   0x218E             MOVS     R1,#+142
   \   000001F4   0x2079             MOVS     R0,#+121
   \   000001F6   0x.... 0x....      BL       BUTTON_CreateEx
   \   000001FA   0xF8A9 0x0018      STRH     R0,[R9, #+24]
    514          		
    515          			if(gCfgItems.print_finish_close_machine_flg == 1)
   \                     ??draw_operate_5: (+1)
   \   000001FE   0xF894 0x00D9      LDRB     R0,[R4, #+217]
   \   00000202   0x2801             CMP      R0,#+1
   \   00000204   0xD110             BNE.N    ??draw_operate_6
    516          			{
    517          				buttonAuto_Off.btnHandle = BUTTON_CreateEx(INTERVAL_V,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
   \   00000206   0xF44F 0x7097      MOV      R0,#+302
   \   0000020A   0x9003             STR      R0,[SP, #+12]
   \   0000020C   0x2000             MOVS     R0,#+0
   \   0000020E   0x9002             STR      R0,[SP, #+8]
   \   00000210   0x2002             MOVS     R0,#+2
   \   00000212   0x9001             STR      R0,[SP, #+4]
   \   00000214   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   00000218   0x9000             STR      R0,[SP, #+0]
   \   0000021A   0x238C             MOVS     R3,#+140
   \   0000021C   0x2275             MOVS     R2,#+117
   \   0000021E   0x218E             MOVS     R1,#+142
   \   00000220   0x2002             MOVS     R0,#+2
   \   00000222   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000226   0x83B0             STRH     R0,[R6, #+28]
    518          			}
    519          			if(gCfgItems.enable_led == 1)
   \                     ??draw_operate_6: (+1)
   \   00000228   0xF894 0x029D      LDRB     R0,[R4, #+669]
   \   0000022C   0x2801             CMP      R0,#+1
   \   0000022E   0xD111             BNE.N    ??draw_operate_4
    520          			buttonLed.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000230   0x.... 0x....      BL       alloc_win_id
   \   00000234   0x9003             STR      R0,[SP, #+12]
   \   00000236   0x2000             MOVS     R0,#+0
   \   00000238   0x9002             STR      R0,[SP, #+8]
   \   0000023A   0x2002             MOVS     R0,#+2
   \   0000023C   0x9001             STR      R0,[SP, #+4]
   \   0000023E   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   00000242   0x9000             STR      R0,[SP, #+0]
   \   00000244   0x238C             MOVS     R3,#+140
   \   00000246   0x2275             MOVS     R2,#+117
   \   00000248   0x218E             MOVS     R1,#+142
   \   0000024A   0x20F0             MOVS     R0,#+240
   \   0000024C   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000250   0xF8AA 0x0018      STRH     R0,[R10, #+24]
    521          	}
    522          
    523          	
    524          	buttonRet.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 306);
   \                     ??draw_operate_4: (+1)
   \   00000254   0xF44F 0x7099      MOV      R0,#+306
   \   00000258   0x9003             STR      R0,[SP, #+12]
   \   0000025A   0x2000             MOVS     R0,#+0
   \   0000025C   0x9002             STR      R0,[SP, #+8]
   \   0000025E   0x2002             MOVS     R0,#+2
   \   00000260   0x9001             STR      R0,[SP, #+4]
   \   00000262   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   00000266   0x9000             STR      R0,[SP, #+0]
   \   00000268   0x238C             MOVS     R3,#+140
   \   0000026A   0x2275             MOVS     R2,#+117
   \   0000026C   0x218E             MOVS     R1,#+142
   \   0000026E   0xF240 0x1067      MOVW     R0,#+359
   \   00000272   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000276   0x8038             STRH     R0,[R7, #+0]
    525          
    526          	#if VERSION_WITH_PIC	
    527          
    528          	BUTTON_SetBmpFileName(buttonTemperature.btnHandle, "bmp_opt_temp.bin",1);
   \   00000278   0x2201             MOVS     R2,#+1
   \   0000027A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_opt_temp.bin">`
   \   0000027E   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   00000282   0x.... 0x....      BL       BUTTON_SetBmpFileName
    529          	BUTTON_SetBmpFileName(buttonSpeed.btnHandle, "bmp_speed.bin",1);
   \   00000286   0x2201             MOVS     R2,#+1
   \   00000288   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_speed.bin">`
   \   0000028C   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000290   0x.... 0x....      BL       BUTTON_SetBmpFileName
    530          	BUTTON_SetBmpFileName(buttonFan.btnHandle, "bmp_fan.bin",1);
   \   00000294   0x2201             MOVS     R2,#+1
   \   00000296   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_fan.bin">`
   \   0000029A   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000029E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    531          	BUTTON_SetBmpFileName(buttonFilament.btnHandle, "bmp_filament.bin",1);
   \   000002A2   0x2201             MOVS     R2,#+1
   \   000002A4   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_filament.bin">`
   \   000002A8   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000002AC   0x.... 0x....      BL       BUTTON_SetBmpFileName
    532          	BUTTON_SetBmpFileName(buttonExtrude.btnHandle, "bmp_extrude_opr.bin",1);
   \   000002B0   0x2201             MOVS     R2,#+1
   \   000002B2   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_extrude_opr.bin">`
   \   000002B6   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000002BA   0x.... 0x....      BL       BUTTON_SetBmpFileName
    533          	BUTTON_SetBmpFileName(buttonMove.btnHandle, "bmp_move_opr.bin",1);
   \   000002BE   0x2201             MOVS     R2,#+1
   \   000002C0   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_move_opr.bin">`
   \   000002C4   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   000002C8   0x.... 0x....      BL       BUTTON_SetBmpFileName
    534          	if(gCfgItems.morefunc_cnt > 0)
   \   000002CC   0x9804             LDR      R0,[SP, #+16]
   \   000002CE   0x7840             LDRB     R0,[R0, #+1]
   \   000002D0   0x2800             CMP      R0,#+0
   \   000002D2   0xD006             BEQ.N    ??draw_operate_7
    535          	BUTTON_SetBmpFileName(buttonMore_printing.btnHandle, "bmp_more_opr.bin",1);
   \   000002D4   0x2201             MOVS     R2,#+1
   \   000002D6   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_more_opr.bin">`
   \   000002DA   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000002DE   0x.... 0x....      BL       BUTTON_SetBmpFileName
    536          	if(gCfgItems.enable_led == 1)
   \                     ??draw_operate_7: (+1)
   \   000002E2   0xF894 0x029D      LDRB     R0,[R4, #+669]
   \   000002E6   0x2801             CMP      R0,#+1
   \   000002E8   0xD106             BNE.N    ??draw_operate_8
    537          	BUTTON_SetBmpFileName(buttonLed.btnHandle, "bmp_led.bin",1);
   \   000002EA   0x2201             MOVS     R2,#+1
   \   000002EC   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_led.bin">`
   \   000002F0   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   000002F4   0x.... 0x....      BL       BUTTON_SetBmpFileName
   \                     ??draw_operate_8: (+1)
   \   000002F8   0x.... 0x....      LDR.W    R11,??DataTable22_22
   \   000002FC   0xF894 0x00D9      LDRB     R0,[R4, #+217]
   \   00000300   0x2801             CMP      R0,#+1
   \   00000302   0xD163             BNE.N    ??draw_operate_9
    538          	if(gCfgItems.print_finish_close_machine_flg == 1)
    539          	{
    540          		if(IsChooseAutoShutdown == 1)
   \   00000304   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   00000308   0x7831             LDRB     R1,[R6, #+0]
   \   0000030A   0x2901             CMP      R1,#+1
   \   0000030C   0xD128             BNE.N    ??draw_operate_10
    541          		{
    542          			BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_auto_off.bin",1);
   \   0000030E   0x2201             MOVS     R2,#+1
   \   00000310   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_auto_off.bin">`
   \   00000314   0x.... 0x....      BL       BUTTON_SetBmpFileName
    543          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_sel_color);
   \   00000318   0x6B2A             LDR      R2,[R5, #+48]
   \   0000031A   0x2101             MOVS     R1,#+1
   \   0000031C   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   00000320   0x.... 0x....      BL       BUTTON_SetBkColor
    544          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_sel_color);	
   \   00000324   0x6B2A             LDR      R2,[R5, #+48]
   \   00000326   0x2100             MOVS     R1,#+0
   \   00000328   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   0000032C   0x.... 0x....      BL       BUTTON_SetBkColor
    545          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_sel_textcolor);
   \   00000330   0x6B6A             LDR      R2,[R5, #+52]
   \   00000332   0x2101             MOVS     R1,#+1
   \   00000334   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   00000338   0x.... 0x....      BL       BUTTON_SetTextColor
    546          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_sel_textcolor);
   \   0000033C   0x6B6A             LDR      R2,[R5, #+52]
   \   0000033E   0x2100             MOVS     R1,#+0
   \   00000340   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   00000344   0x.... 0x....      BL       BUTTON_SetTextColor
    547          			
    548          			if(gCfgItems.multiple_language != 0)
   \   00000348   0xF894 0x01BF      LDRB     R0,[R4, #+447]
   \   0000034C   0x2800             CMP      R0,#+0
   \   0000034E   0xD02F             BEQ.N    ??draw_operate_11
    549          			{	
    550          				BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.auto_off);
   \   00000350   0x.... 0x....      LDR.W    R0,??DataTable22_23
   \   00000354   0x6A81             LDR      R1,[R0, #+40]
   \   00000356   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   0000035A   0x.... 0x....      BL       BUTTON_SetText
   \   0000035E   0xE027             B.N      ??draw_operate_11
    551          			}
    552          
    553          		}
    554          		else
    555          		{
    556          			BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_manual_off.bin",1);
   \                     ??draw_operate_10: (+1)
   \   00000360   0x2201             MOVS     R2,#+1
   \   00000362   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_manual_off.bin">`
   \   00000366   0x.... 0x....      BL       BUTTON_SetBmpFileName
    557          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_color);
   \   0000036A   0x6AAA             LDR      R2,[R5, #+40]
   \   0000036C   0x2101             MOVS     R1,#+1
   \   0000036E   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   00000372   0x.... 0x....      BL       BUTTON_SetBkColor
    558          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_color);
   \   00000376   0x6AAA             LDR      R2,[R5, #+40]
   \   00000378   0x2100             MOVS     R1,#+0
   \   0000037A   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   0000037E   0x.... 0x....      BL       BUTTON_SetBkColor
    559          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_textcolor);
   \   00000382   0x6AEA             LDR      R2,[R5, #+44]
   \   00000384   0x2101             MOVS     R1,#+1
   \   00000386   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   0000038A   0x.... 0x....      BL       BUTTON_SetTextColor
    560          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_textcolor);			
   \   0000038E   0x6AEA             LDR      R2,[R5, #+44]
   \   00000390   0x2100             MOVS     R1,#+0
   \   00000392   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   00000396   0x.... 0x....      BL       BUTTON_SetTextColor
    561          			if(gCfgItems.multiple_language != 0)
   \   0000039A   0xF894 0x01BF      LDRB     R0,[R4, #+447]
   \   0000039E   0x2800             CMP      R0,#+0
   \   000003A0   0xD006             BEQ.N    ??draw_operate_11
    562          			{	
    563          				BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.manual_off);
   \   000003A2   0x.... 0x....      LDR.W    R0,??DataTable22_23
   \   000003A6   0x6AC1             LDR      R1,[R0, #+44]
   \   000003A8   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   000003AC   0x.... 0x....      BL       BUTTON_SetText
    564          			}			
    565          		}
    566          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle,0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \                     ??draw_operate_11: (+1)
   \   000003B0   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000003B4   0x9000             STR      R0,[SP, #+0]
   \   000003B6   0x.... 0x....      LDR.W    R0,??DataTable22_24
   \   000003BA   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   000003BE   0x.... 0x....      LDR.W    R2,??DataTable22_25
   \   000003C2   0x2100             MOVS     R1,#+0
   \   000003C4   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   000003C8   0x.... 0x....      BL       BUTTON_SetBitmapEx
    567          
    568          		
    569          	}
    570          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",1);
   \                     ??draw_operate_9: (+1)
   \   000003CC   0x2201             MOVS     R2,#+1
   \   000003CE   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_return.bin">`
   \   000003D2   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000003D6   0x.... 0x....      BL       BUTTON_SetBmpFileName
    571          	
    572          	BUTTON_SetBitmapEx(buttonTemperature.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000003DA   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000003DE   0x9000             STR      R0,[SP, #+0]
   \   000003E0   0x.... 0x....      LDR.W    R0,??DataTable22_24
   \   000003E4   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   000003E8   0x.... 0x....      LDR.W    R2,??DataTable22_25
   \   000003EC   0x2100             MOVS     R1,#+0
   \   000003EE   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   000003F2   0x.... 0x....      BL       BUTTON_SetBitmapEx
    573          	BUTTON_SetBitmapEx(buttonSpeed.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000003F6   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000003FA   0x9000             STR      R0,[SP, #+0]
   \   000003FC   0x.... 0x....      LDR.W    R0,??DataTable22_24
   \   00000400   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   00000404   0x.... 0x....      LDR.W    R2,??DataTable22_25
   \   00000408   0x2100             MOVS     R1,#+0
   \   0000040A   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   0000040E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    574          	BUTTON_SetBitmapEx(buttonFan.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000412   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000416   0x9000             STR      R0,[SP, #+0]
   \   00000418   0x.... 0x....      LDR.W    R0,??DataTable22_24
   \   0000041C   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   00000420   0x.... 0x....      LDR.W    R2,??DataTable22_25
   \   00000424   0x2100             MOVS     R1,#+0
   \   00000426   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000042A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    575          	BUTTON_SetBitmapEx(buttonFilament.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   0000042E   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000432   0x9000             STR      R0,[SP, #+0]
   \   00000434   0x.... 0x....      LDR.W    R0,??DataTable22_24
   \   00000438   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   0000043C   0x.... 0x....      LDR.W    R2,??DataTable22_25
   \   00000440   0x2100             MOVS     R1,#+0
   \   00000442   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000446   0x.... 0x....      BL       BUTTON_SetBitmapEx
    576          	BUTTON_SetBitmapEx(buttonExtrude.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   0000044A   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   0000044E   0x9000             STR      R0,[SP, #+0]
   \   00000450   0x.... 0x....      LDR.W    R0,??DataTable22_24
   \   00000454   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   00000458   0x.... 0x....      LDR.W    R2,??DataTable22_25
   \   0000045C   0x2100             MOVS     R1,#+0
   \   0000045E   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   00000462   0x.... 0x....      BL       BUTTON_SetBitmapEx
    577          	BUTTON_SetBitmapEx(buttonMove.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000466   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   0000046A   0x9000             STR      R0,[SP, #+0]
   \   0000046C   0x.... 0x....      LDR.W    R0,??DataTable22_24
   \   00000470   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   00000474   0x.... 0x....      LDR.W    R2,??DataTable22_25
   \   00000478   0x2100             MOVS     R1,#+0
   \   0000047A   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   0000047E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    578          	if(gCfgItems.enable_led == 1)
   \   00000482   0xF894 0x029D      LDRB     R0,[R4, #+669]
   \   00000486   0x2801             CMP      R0,#+1
   \   00000488   0xD10D             BNE.N    ??draw_operate_12
    579          	BUTTON_SetBitmapEx(buttonLed.btnHandle, 0, &bmp_struct,BMP_PIC_X, BMP_PIC_Y);
   \   0000048A   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   0000048E   0x9000             STR      R0,[SP, #+0]
   \   00000490   0x.... 0x....      LDR.W    R0,??DataTable22_24
   \   00000494   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   00000498   0x.... 0x....      LDR.W    R2,??DataTable22_25
   \   0000049C   0x2100             MOVS     R1,#+0
   \   0000049E   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   000004A2   0x.... 0x....      BL       BUTTON_SetBitmapEx
    580          #if 0
    581          	if(gCfgItems.print_finish_close_machine_flg == 1)
    582          	{
    583          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    584          		BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    585          	}
    586          	else
    587          #endif
    588          	{
    589          		if(gCfgItems.morefunc_cnt > 0)
   \                     ??draw_operate_12: (+1)
   \   000004A6   0x9804             LDR      R0,[SP, #+16]
   \   000004A8   0x7840             LDRB     R0,[R0, #+1]
   \   000004AA   0x2800             CMP      R0,#+0
   \   000004AC   0xD00D             BEQ.N    ??draw_operate_13
    590          		BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000004AE   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000004B2   0x9000             STR      R0,[SP, #+0]
   \   000004B4   0x.... 0x....      LDR.W    R0,??DataTable22_24
   \   000004B8   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   000004BC   0x.... 0x....      LDR.W    R2,??DataTable22_25
   \   000004C0   0x2100             MOVS     R1,#+0
   \   000004C2   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000004C6   0x.... 0x....      BL       BUTTON_SetBitmapEx
    591          	}
    592          	
    593          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \                     ??draw_operate_13: (+1)
   \   000004CA   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000004CE   0x9000             STR      R0,[SP, #+0]
   \   000004D0   0x.... 0x....      LDR.W    R0,??DataTable22_24
   \   000004D4   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   000004D8   0x.... 0x....      LDR.W    R2,??DataTable22_25
   \   000004DC   0x2100             MOVS     R1,#+0
   \   000004DE   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000004E2   0x.... 0x....      BL       BUTTON_SetBitmapEx
    594          
    595          	BUTTON_SetBkColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   000004E6   0x6A2A             LDR      R2,[R5, #+32]
   \   000004E8   0x2101             MOVS     R1,#+1
   \   000004EA   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   000004EE   0x.... 0x....      BL       BUTTON_SetBkColor
    596          	BUTTON_SetBkColor(buttonTemperature.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   000004F2   0x6A2A             LDR      R2,[R5, #+32]
   \   000004F4   0x2100             MOVS     R1,#+0
   \   000004F6   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   000004FA   0x.... 0x....      BL       BUTTON_SetBkColor
    597          	BUTTON_SetBkColor(buttonSpeed.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   000004FE   0x6A2A             LDR      R2,[R5, #+32]
   \   00000500   0x2101             MOVS     R1,#+1
   \   00000502   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000506   0x.... 0x....      BL       BUTTON_SetBkColor
    598          	BUTTON_SetBkColor(buttonSpeed.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   0000050A   0x6A2A             LDR      R2,[R5, #+32]
   \   0000050C   0x2100             MOVS     R1,#+0
   \   0000050E   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000512   0x.... 0x....      BL       BUTTON_SetBkColor
    599          	BUTTON_SetBkColor(buttonFan.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   00000516   0x6A2A             LDR      R2,[R5, #+32]
   \   00000518   0x2101             MOVS     R1,#+1
   \   0000051A   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000051E   0x.... 0x....      BL       BUTTON_SetBkColor
    600          	BUTTON_SetBkColor(buttonFan.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   00000522   0x6A2A             LDR      R2,[R5, #+32]
   \   00000524   0x2100             MOVS     R1,#+0
   \   00000526   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000052A   0x.... 0x....      BL       BUTTON_SetBkColor
    601          	BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   0000052E   0x6A2A             LDR      R2,[R5, #+32]
   \   00000530   0x2101             MOVS     R1,#+1
   \   00000532   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000536   0x.... 0x....      BL       BUTTON_SetBkColor
    602          	BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   0000053A   0x6A2A             LDR      R2,[R5, #+32]
   \   0000053C   0x2100             MOVS     R1,#+0
   \   0000053E   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000542   0x.... 0x....      BL       BUTTON_SetBkColor
    603          	BUTTON_SetTextColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   00000546   0x6A6A             LDR      R2,[R5, #+36]
   \   00000548   0x2101             MOVS     R1,#+1
   \   0000054A   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   0000054E   0x.... 0x....      BL       BUTTON_SetTextColor
    604          	BUTTON_SetTextColor(buttonTemperature.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   00000552   0x6A6A             LDR      R2,[R5, #+36]
   \   00000554   0x2100             MOVS     R1,#+0
   \   00000556   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   0000055A   0x.... 0x....      BL       BUTTON_SetTextColor
    605          	BUTTON_SetTextColor(buttonSpeed.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   0000055E   0x6A6A             LDR      R2,[R5, #+36]
   \   00000560   0x2101             MOVS     R1,#+1
   \   00000562   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000566   0x.... 0x....      BL       BUTTON_SetTextColor
    606          	BUTTON_SetTextColor(buttonSpeed.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   0000056A   0x6A6A             LDR      R2,[R5, #+36]
   \   0000056C   0x2100             MOVS     R1,#+0
   \   0000056E   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000572   0x.... 0x....      BL       BUTTON_SetTextColor
    607          	BUTTON_SetTextColor(buttonFan.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   00000576   0x6A6A             LDR      R2,[R5, #+36]
   \   00000578   0x2101             MOVS     R1,#+1
   \   0000057A   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000057E   0x.... 0x....      BL       BUTTON_SetTextColor
    608          	BUTTON_SetTextColor(buttonFan.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   00000582   0x6A6A             LDR      R2,[R5, #+36]
   \   00000584   0x2100             MOVS     R1,#+0
   \   00000586   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000058A   0x.... 0x....      BL       BUTTON_SetTextColor
    609          	BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   0000058E   0x6A6A             LDR      R2,[R5, #+36]
   \   00000590   0x2101             MOVS     R1,#+1
   \   00000592   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000596   0x.... 0x....      BL       BUTTON_SetTextColor
    610          	BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   0000059A   0x6A6A             LDR      R2,[R5, #+36]
   \   0000059C   0x2100             MOVS     R1,#+0
   \   0000059E   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000005A2   0x.... 0x....      BL       BUTTON_SetTextColor
    611          
    612          
    613          	BUTTON_SetBkColor(buttonMove.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   000005A6   0x6A2A             LDR      R2,[R5, #+32]
   \   000005A8   0x2101             MOVS     R1,#+1
   \   000005AA   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   000005AE   0x.... 0x....      BL       BUTTON_SetBkColor
    614          	BUTTON_SetBkColor(buttonMove.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   000005B2   0x6A2A             LDR      R2,[R5, #+32]
   \   000005B4   0x2100             MOVS     R1,#+0
   \   000005B6   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   000005BA   0x.... 0x....      BL       BUTTON_SetBkColor
    615          	BUTTON_SetTextColor(buttonMove.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   000005BE   0x6A6A             LDR      R2,[R5, #+36]
   \   000005C0   0x2101             MOVS     R1,#+1
   \   000005C2   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   000005C6   0x.... 0x....      BL       BUTTON_SetTextColor
    616          	BUTTON_SetTextColor(buttonMove.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   000005CA   0x6A6A             LDR      R2,[R5, #+36]
   \   000005CC   0x2100             MOVS     R1,#+0
   \   000005CE   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   000005D2   0x.... 0x....      BL       BUTTON_SetTextColor
    617          	
    618          	BUTTON_SetBkColor(buttonExtrude.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   000005D6   0x6A2A             LDR      R2,[R5, #+32]
   \   000005D8   0x2101             MOVS     R1,#+1
   \   000005DA   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000005DE   0x.... 0x....      BL       BUTTON_SetBkColor
    619          	BUTTON_SetBkColor(buttonExtrude.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   000005E2   0x6A2A             LDR      R2,[R5, #+32]
   \   000005E4   0x2100             MOVS     R1,#+0
   \   000005E6   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000005EA   0x.... 0x....      BL       BUTTON_SetBkColor
    620          	BUTTON_SetTextColor(buttonExtrude.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   000005EE   0x6A6A             LDR      R2,[R5, #+36]
   \   000005F0   0x2101             MOVS     R1,#+1
   \   000005F2   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000005F6   0x.... 0x....      BL       BUTTON_SetTextColor
    621          	BUTTON_SetTextColor(buttonExtrude.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   000005FA   0x6A6A             LDR      R2,[R5, #+36]
   \   000005FC   0x2100             MOVS     R1,#+0
   \   000005FE   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   00000602   0x.... 0x....      BL       BUTTON_SetTextColor
    622          	if(gCfgItems.morefunc_cnt > 0)
   \   00000606   0x9804             LDR      R0,[SP, #+16]
   \   00000608   0x7840             LDRB     R0,[R0, #+1]
   \   0000060A   0x2800             CMP      R0,#+0
   \   0000060C   0xD017             BEQ.N    ??draw_operate_14
    623          	{
    624          	BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   0000060E   0x6A2A             LDR      R2,[R5, #+32]
   \   00000610   0x2101             MOVS     R1,#+1
   \   00000612   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   00000616   0x.... 0x....      BL       BUTTON_SetBkColor
    625          	BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   0000061A   0x6A2A             LDR      R2,[R5, #+32]
   \   0000061C   0x2100             MOVS     R1,#+0
   \   0000061E   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   00000622   0x.... 0x....      BL       BUTTON_SetBkColor
    626          	BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   00000626   0x6A6A             LDR      R2,[R5, #+36]
   \   00000628   0x2101             MOVS     R1,#+1
   \   0000062A   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   0000062E   0x.... 0x....      BL       BUTTON_SetTextColor
    627          	BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   00000632   0x6A6A             LDR      R2,[R5, #+36]
   \   00000634   0x2100             MOVS     R1,#+0
   \   00000636   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   0000063A   0x.... 0x....      BL       BUTTON_SetTextColor
    628          	}
    629          
    630          
    631          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
   \                     ??draw_operate_14: (+1)
   \   0000063E   0x6BAA             LDR      R2,[R5, #+56]
   \   00000640   0x2101             MOVS     R1,#+1
   \   00000642   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000646   0x.... 0x....      BL       BUTTON_SetBkColor
    632          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
   \   0000064A   0x6BAA             LDR      R2,[R5, #+56]
   \   0000064C   0x2100             MOVS     R1,#+0
   \   0000064E   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000652   0x.... 0x....      BL       BUTTON_SetBkColor
    633          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
   \   00000656   0x6BEA             LDR      R2,[R5, #+60]
   \   00000658   0x2101             MOVS     R1,#+1
   \   0000065A   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   0000065E   0x.... 0x....      BL       BUTTON_SetTextColor
    634          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);
   \   00000662   0x6BEA             LDR      R2,[R5, #+60]
   \   00000664   0x2100             MOVS     R1,#+0
   \   00000666   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   0000066A   0x.... 0x....      BL       BUTTON_SetTextColor
    635          	if(gCfgItems.enable_led == 1)
   \   0000066E   0xF894 0x029D      LDRB     R0,[R4, #+669]
   \   00000672   0x2801             CMP      R0,#+1
   \   00000674   0xD117             BNE.N    ??draw_operate_15
    636          	{
    637          	BUTTON_SetBkColor(buttonLed.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   00000676   0x6A2A             LDR      R2,[R5, #+32]
   \   00000678   0x2100             MOVS     R1,#+0
   \   0000067A   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   0000067E   0x.... 0x....      BL       BUTTON_SetBkColor
    638          	BUTTON_SetBkColor(buttonLed.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   00000682   0x6A2A             LDR      R2,[R5, #+32]
   \   00000684   0x2101             MOVS     R1,#+1
   \   00000686   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   0000068A   0x.... 0x....      BL       BUTTON_SetBkColor
    639          	BUTTON_SetTextColor(buttonLed.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   0000068E   0x6A6A             LDR      R2,[R5, #+36]
   \   00000690   0x2100             MOVS     R1,#+0
   \   00000692   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   00000696   0x.... 0x....      BL       BUTTON_SetTextColor
    640          	BUTTON_SetTextColor(buttonLed.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   0000069A   0x6A6A             LDR      R2,[R5, #+36]
   \   0000069C   0x2101             MOVS     R1,#+1
   \   0000069E   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   000006A2   0x.... 0x....      BL       BUTTON_SetTextColor
    641          	}
    642          	if(gCfgItems.multiple_language != 0)
   \                     ??draw_operate_15: (+1)
   \   000006A6   0xF894 0x01BF      LDRB     R0,[R4, #+447]
   \   000006AA   0x2800             CMP      R0,#+0
   \   000006AC   0xD03A             BEQ.N    ??draw_operate_16
    643          	{
    644          		BUTTON_SetText(buttonFan.btnHandle, operation_menu.fan);
   \   000006AE   0x....             LDR.N    R5,??DataTable22_23
   \   000006B0   0x6929             LDR      R1,[R5, #+16]
   \   000006B2   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000006B6   0x.... 0x....      BL       BUTTON_SetText
    645          		BUTTON_SetText(buttonFilament.btnHandle, operation_menu.filament);
   \   000006BA   0x6969             LDR      R1,[R5, #+20]
   \   000006BC   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000006C0   0x.... 0x....      BL       BUTTON_SetText
    646          		BUTTON_SetText(buttonTemperature.btnHandle, operation_menu.temp);
   \   000006C4   0x68E9             LDR      R1,[R5, #+12]
   \   000006C6   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   000006CA   0x.... 0x....      BL       BUTTON_SetText
    647          		if(gCfgItems.morefunc_cnt > 0)
   \   000006CE   0x9804             LDR      R0,[SP, #+16]
   \   000006D0   0x7840             LDRB     R0,[R0, #+1]
   \   000006D2   0x2800             CMP      R0,#+0
   \   000006D4   0xD004             BEQ.N    ??draw_operate_17
    648          		BUTTON_SetText(buttonMore_printing.btnHandle, operation_menu.more);
   \   000006D6   0x6A69             LDR      R1,[R5, #+36]
   \   000006D8   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000006DC   0x.... 0x....      BL       BUTTON_SetText
    649          		BUTTON_SetText(buttonSpeed.btnHandle, operation_menu.speed);
   \                     ??draw_operate_17: (+1)
   \   000006E0   0x69E9             LDR      R1,[R5, #+28]
   \   000006E2   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   000006E6   0x.... 0x....      BL       BUTTON_SetText
    650          		BUTTON_SetText(buttonExtrude.btnHandle, operation_menu.extr);
   \   000006EA   0x69A9             LDR      R1,[R5, #+24]
   \   000006EC   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000006F0   0x.... 0x....      BL       BUTTON_SetText
    651          		BUTTON_SetText(buttonMove.btnHandle, operation_menu.move);
   \   000006F4   0x6A29             LDR      R1,[R5, #+32]
   \   000006F6   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   000006FA   0x.... 0x....      BL       BUTTON_SetText
    652          		BUTTON_SetText(buttonRet.btnHandle, common_menu.text_back);
   \   000006FE   0x....             LDR.N    R0,??DataTable22_26
   \   00000700   0x6801             LDR      R1,[R0, #+0]
   \   00000702   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000706   0x.... 0x....      BL       BUTTON_SetText
    653          		if(gCfgItems.enable_led == 1)
   \   0000070A   0xF894 0x029D      LDRB     R0,[R4, #+669]
   \   0000070E   0x2801             CMP      R0,#+1
   \   00000710   0xD108             BNE.N    ??draw_operate_16
    654          		BUTTON_SetText(buttonLed.btnHandle, set_menu.LED);
   \   00000712   0x....             LDR.N    R0,??DataTable22_27
   \   00000714   0x6A81             LDR      R1,[R0, #+40]
   \   00000716   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   0000071A   0xB005             ADD      SP,SP,#+20
   \   0000071C   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   00000720   0x.... 0x....      B.W      BUTTON_SetText
    655          	}
    656          
    657          	
    658          
    659          	#endif
    660          #if 0
    661          	if(gCfgItems.print_finish_close_machine_flg == 1)
    662          	{
    663          		Autoshutdown_display();
    664          	}
    665          #endif
    666          #if 0
    667          	Fill_State_BK = TEXT_CreateEx(LCD_WIDTH  / 4+X_ADD, 0, LCD_WIDTH / 2-X_INTERVAL, imgHeight / 2-X_INTERVAL, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT0, " ");
    668          	TEXT_SetBkColor(Fill_State_BK, gCfgItems.state_background_color);
    669          
    670          	textPrintTemp1 = TEXT_CreateEx(LCD_WIDTH  / 4 + 50, 120, LCD_WIDTH / 4 - 30, 80, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT1, " ");
    671          
    672          	textPrintTemp2 = TEXT_CreateEx(LCD_WIDTH  / 2+80 , 120, LCD_WIDTH / 4 - 90, 80, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT2, " ");
    673          	
    674          
    675          	TEXT_SetTextAlign(textPrintTemp1,  GUI_TA_VCENTER | GUI_TA_LEFT);
    676          	TEXT_SetTextAlign(textPrintTemp2,  GUI_TA_VCENTER | GUI_TA_LEFT);
    677          	
    678          	printingBar = PROGBAR_CreateEx(LCD_WIDTH  / 4 + 5, 40,  LCD_WIDTH / 2 - 10, 45, hOperateWnd, WM_CF_SHOW, 0, 0);
    679          	
    680          	PROGBAR_SetBarColor(printingBar, 0, GUI_GREEN);
    681          	
    682          	PROGBAR_SetTextColor(printingBar, 0, GUI_BLACK);
    683          	PROGBAR_SetFont(printingBar, &GUI_FontHZ_fontHz18);
    684          	
    685          	
    686          	PROGBAR_SetValue(printingBar, get_printing_rate(srcfp));
    687                
    688                 
    689          	disp_temp_operate();
    690          #endif	
    691          	//GUI_Exec();
    692          	
    693          #endif
    694          	
    695          }
   \                     ??draw_operate_16: (+1)
   \   00000724   0xB005             ADD      SP,SP,#+20
   \   00000726   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    696          
    697          

   \                                 In section .text, align 2, keep-with-next
    698          void Autoshutdown_display2()
    699          {
   \                     Autoshutdown_display2: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    700          	if(IsChooseAutoShutdown == 1)
   \   00000002   0x....             LDR.N    R4,??DataTable22_5
   \   00000004   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   00000008   0x....             LDR.N    R5,??DataTable22_25
   \   0000000A   0x....             LDR.N    R6,??DataTable22_24
   \   0000000C   0x....             LDR.N    R7,??DataTable22_22
   \   0000000E   0x7821             LDRB     R1,[R4, #+0]
   \   00000010   0x2901             CMP      R1,#+1
   \   00000012   0xD110             BNE.N    ??Autoshutdown_display2_0
    701          	{
    702          		BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_auto_off.bin",0);
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_auto_off.bin">`
   \   0000001A   0x.... 0x....      BL       BUTTON_SetBmpFileName
    703          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   0000001E   0xF997 0x0000      LDRSB    R0,[R7, #+0]
   \   00000022   0x9000             STR      R0,[SP, #+0]
   \   00000024   0xF996 0x3000      LDRSB    R3,[R6, #+0]
   \   00000028   0x462A             MOV      R2,R5
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   00000030   0x.... 0x....      BL       BUTTON_SetBitmapEx
   \   00000034   0xE00F             B.N      ??Autoshutdown_display2_1
    704          	}
    705          	else
    706          	{
    707          		BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_manual_off.bin",0);
   \                     ??Autoshutdown_display2_0: (+1)
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_manual_off.bin">`
   \   0000003C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    708          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000040   0xF997 0x0000      LDRSB    R0,[R7, #+0]
   \   00000044   0x9000             STR      R0,[SP, #+0]
   \   00000046   0xF996 0x3000      LDRSB    R3,[R6, #+0]
   \   0000004A   0x462A             MOV      R2,R5
   \   0000004C   0x2100             MOVS     R1,#+0
   \   0000004E   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   00000052   0x.... 0x....      BL       BUTTON_SetBitmapEx
    709          	}
    710          	if(gCfgItems.multiple_language != 0)
   \                     ??Autoshutdown_display2_1: (+1)
   \   00000056   0x....             LDR.N    R0,??DataTable22_8
   \   00000058   0xF890 0x01BF      LDRB     R0,[R0, #+447]
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD00F             BEQ.N    ??Autoshutdown_display2_2
    711          	{
    712          		if(IsChooseAutoShutdown == 1)
   \   00000060   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   00000064   0x....             LDR.N    R1,??DataTable22_28
   \   00000066   0x7822             LDRB     R2,[R4, #+0]
   \   00000068   0x2A01             CMP      R2,#+1
   \   0000006A   0xD104             BNE.N    ??Autoshutdown_display2_3
    713          			BUTTON_SetText(buttonAuto_Off.btnHandle,printing_more_menu.auto_close);
   \   0000006C   0x6889             LDR      R1,[R1, #+8]
   \   0000006E   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   00000072   0x.... 0x....      B.W      BUTTON_SetText
    714          		else
    715          			BUTTON_SetText(buttonAuto_Off.btnHandle,printing_more_menu.manual);
   \                     ??Autoshutdown_display2_3: (+1)
   \   00000076   0x68C9             LDR      R1,[R1, #+12]
   \   00000078   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   0000007C   0x.... 0x....      B.W      BUTTON_SetText
    716          	}
    717          
    718          }
   \                     ??Autoshutdown_display2_2: (+1)
   \   00000080   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    719          #else
    720          
    721          void draw_operate()
    722          {
    723          	int8_t buf[50] = {0};
    724          	
    725          	int i;
    726          
    727          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != OPERATE_UI)
    728          	{
    729          		disp_state_stack._disp_index++;
    730          		disp_state_stack._disp_state[disp_state_stack._disp_index] = OPERATE_UI;
    731          	}
    732          	
    733          	disp_state = OPERATE_UI;
    734          		
    735          	GUI_SetBkColor(gCfgItems.background_color);
    736          	GUI_SetColor(gCfgItems.title_color);
    737          	GUI_Clear();
    738          
    739          	GUI_UC_SetEncodeNone();
    740          	GUI_SetFont(&GUI_FontHZ16);
    741          	GUI_DispStringAt(creat_title_text(), 0, 0);
    742          	GUI_SetFont(&FONT_TITLE);
    743          	GUI_UC_SetEncodeUTF8();
    744          	
    745          	hOperateWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbOperateWin, 0);
    746          	
    747          	buttonPause.btnHandle = BUTTON_CreateEx(0, 0, LCD_WIDTH / 4 - 2, imgHeight / 2 - 1, hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    748          	buttonStop.btnHandle = BUTTON_CreateEx(LCD_WIDTH * 3 / 4,  0, LCD_WIDTH / 4 - 2, imgHeight / 2 - 1, hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    749          	buttonTemperature.btnHandle = BUTTON_CreateEx(0 , imgHeight / 2, LCD_WIDTH / 4 - 2, imgHeight / 2 - 1, hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    750          	buttonFilament.btnHandle = BUTTON_CreateEx(LCD_WIDTH / 4,	imgHeight / 2,LCD_WIDTH / 4 - 2, imgHeight / 2 - 1,hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    751          	if(gCfgItems.morefunc_cnt > 0)
    752          	buttonMore_printing.btnHandle = BUTTON_CreateEx(LCD_WIDTH / 2,  imgHeight / 2,LCD_WIDTH / 4 - 2, imgHeight / 2 - 1,hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    753          	buttonRet.btnHandle = BUTTON_CreateEx(LCD_WIDTH * 3 / 4 , imgHeight / 2, LCD_WIDTH / 4 - 2, imgHeight / 2 - 1, hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    754          
    755              BUTTON_SetBkColor(buttonPause.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    756              BUTTON_SetBkColor(buttonPause.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    757              BUTTON_SetBkColor(buttonStop.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    758              BUTTON_SetBkColor(buttonStop.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    759              BUTTON_SetBkColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    760              BUTTON_SetBkColor(buttonTemperature.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    761              BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    762              BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    763              if(gCfgItems.morefunc_cnt > 0){
    764              BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    765              BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);   
    766              	}
    767          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
    768              BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);    
    769              BUTTON_SetTextColor(buttonPause.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    770              BUTTON_SetTextColor(buttonPause.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    771              BUTTON_SetTextColor(buttonStop.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    772              BUTTON_SetTextColor(buttonStop.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    773              BUTTON_SetTextColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    774              BUTTON_SetTextColor(buttonTemperature.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    775              BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    776              BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    777          	if(gCfgItems.morefunc_cnt > 0){
    778          	BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    779              BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    780          	}
    781          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
    782              BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);
    783          
    784          
    785          	BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",0);
    786          	BUTTON_SetBmpFileName(buttonStop.btnHandle, "bmp_stop.bin",0);
    787          	BUTTON_SetBmpFileName(buttonTemperature.btnHandle, "bmp_temp.bin",0);
    788          	if(gCfgItems.morefunc_cnt > 0)
    789          	BUTTON_SetBmpFileName(buttonMore_printing.btnHandle, "bmp_more.bin",0);
    790          	BUTTON_SetBmpFileName(buttonFilament.btnHandle, "bmp_filamentchange.bin",0);
    791          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",0);
    792          
    793          	BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    794          	BUTTON_SetBitmapEx(buttonStop.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    795          	BUTTON_SetBitmapEx(buttonTemperature.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    796          	if(gCfgItems.morefunc_cnt > 0)
    797          	BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    798          	BUTTON_SetBitmapEx(buttonFilament.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    799          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    800          
    801          	printingBar = PROGBAR_CreateEx(LCD_WIDTH  / 4 + 5, 15,  LCD_WIDTH / 2 - 10, 30, hOperateWnd, WM_CF_SHOW, 0, 0);
    802          
    803          	textPrintTemp1 = TEXT_CreateEx(LCD_WIDTH  / 4 + 5, 60, LCD_WIDTH / 4 - 4, 40, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT1, " ");
    804          
    805          	textPrintTemp2 = TEXT_CreateEx(LCD_WIDTH  / 2 , 60, LCD_WIDTH / 4 - 4, 40, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT2, " ");
    806          
    807          	TEXT_SetTextAlign(textPrintTemp1,  GUI_TA_VCENTER | GUI_TA_LEFT);
    808          	TEXT_SetTextAlign(textPrintTemp2,  GUI_TA_VCENTER | GUI_TA_LEFT);
    809          	
    810          	PROGBAR_SetBarColor(printingBar, 0, GUI_GREEN);
    811          	
    812          	PROGBAR_SetTextColor(printingBar, 0, GUI_BLACK);
    813          	PROGBAR_SetFont(printingBar, &GUI_FontHZ_fontHz14);
    814          	
    815          	disp_temp_operate();
    816          	setProBarRateOpera();
    817          	if(gCfgItems.multiple_language != 0)
    818          	{
    819          		BUTTON_SetText(buttonPause.btnHandle,operation_menu.pause);
    820          		BUTTON_SetText(buttonStop.btnHandle,operation_menu.stop);
    821          		BUTTON_SetText(buttonTemperature.btnHandle,operation_menu.temp);
    822          		if(gCfgItems.morefunc_cnt > 0)
    823          		BUTTON_SetText(buttonMore_printing.btnHandle,operation_menu.more);
    824          		BUTTON_SetText(buttonFilament.btnHandle,operation_menu.filament);
    825          		BUTTON_SetText(buttonRet.btnHandle,common_menu.text_back);
    826          	}
    827          	
    828          }
    829          
    830          #endif

   \                                 In section .text, align 2, keep-with-next
    831          void setProBarRateOpera()
    832          {
   \                     setProBarRateOpera: (+1)
   \   00000000   0xB5D0             PUSH     {R4,R6,R7,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
    833          
    834          	int rate;
    835          	volatile long long rate_tmp_op;
    836          	//rate_tmp_op = (long long)card.sdpos * 100;
    837          	//rate = rate_tmp_op / card.filesize;
    838          
    839          	if(from_flash_pic != 1)
   \   00000004   0x....             LDR.N    R2,??DataTable22_13
   \   00000006   0xF202 0x405C      ADDW     R0,R2,#+1116
   \   0000000A   0x6840             LDR      R0,[R0, #+4]
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0xF8D2 0x245C      LDR      R2,[R2, #+1116]
   \   00000012   0x2464             MOVS     R4,#+100
   \   00000014   0x....             LDR.N    R3,??DataTable22_1
   \   00000016   0x781B             LDRB     R3,[R3, #+0]
   \   00000018   0x2B01             CMP      R3,#+1
   \   0000001A   0xD009             BEQ.N    ??setProBarRateOpera_0
    840          	{
    841          		rate_tmp_op =(long long)card.sdpos * 100;
   \   0000001C   0xFBA4 0x6700      UMULL    R6,R7,R4,R0
   \   00000020   0xE9CD 0x6700      STRD     R6,R7,[SP, #+0]
    842          		rate = rate_tmp_op / card.filesize;
   \   00000024   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   00000028   0x2300             MOVS     R3,#+0
   \   0000002A   0x.... 0x....      BL       __aeabi_ldivmod
   \   0000002E   0xE013             B.N      ??setProBarRateOpera_1
    843          	}
    844          	else
    845          	{
    846          		rate_tmp_op =(long long)card.sdpos;
   \                     ??setProBarRateOpera_0: (+1)
   \   00000030   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
    847          		rate = (rate_tmp_op-(PREVIEW_SIZE+To_pre_view))* 100 / (card.filesize-(PREVIEW_SIZE+To_pre_view));
   \   00000034   0x....             LDR.N    R0,??DataTable22_29
   \   00000036   0x6803             LDR      R3,[R0, #+0]
   \   00000038   0xE9DD 0x6700      LDRD     R6,R7,[SP, #+0]
   \   0000003C   0x....             LDR.N    R0,??DataTable22_30  ;; 0x317e0
   \   0000003E   0x18C0             ADDS     R0,R0,R3
   \   00000040   0x1A36             SUBS     R6,R6,R0
   \   00000042   0x418F             SBCS     R7,R7,R1
   \   00000044   0xFBA4 0x0106      UMULL    R0,R1,R4,R6
   \   00000048   0xFB04 0x1107      MLA      R1,R4,R7,R1
   \   0000004C   0x1AD2             SUBS     R2,R2,R3
   \   0000004E   0x....             LDR.N    R3,??DataTable22_31  ;; 0xfffce820
   \   00000050   0x189A             ADDS     R2,R3,R2
   \   00000052   0x2300             MOVS     R3,#+0
   \   00000054   0x.... 0x....      BL       __aeabi_ldivmod
    848          	}
    849          
    850          	if(rate <= 0)
   \                     ??setProBarRateOpera_1: (+1)
   \   00000058   0x2801             CMP      R0,#+1
   \   0000005A   0xDB0D             BLT.N    ??setProBarRateOpera_2
    851          		return;
    852          	
    853          	
    854          	if(disp_state == OPERATE_UI)
   \   0000005C   0x....             LDR.N    R1,??DataTable22_20
   \   0000005E   0xF991 0x1000      LDRSB    R1,[R1, #+0]
   \   00000062   0x2905             CMP      R1,#+5
   \   00000064   0xD108             BNE.N    ??setProBarRateOpera_2
    855          	{
    856          		PROGBAR_SetValue(printingBar, rate );
   \   00000066   0x4601             MOV      R1,R0
   \   00000068   0x....             LDR.N    R0,??DataTable22_32
   \   0000006A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000006E   0xB004             ADD      SP,SP,#+16
   \   00000070   0xE8BD 0x40D0      POP      {R4,R6,R7,LR}
   \   00000074   0x.... 0x....      B.W      PROGBAR_SetValue
    857          	}
    858          	
    859          }
   \                     ??setProBarRateOpera_2: (+1)
   \   00000078   0xBDDF             POP      {R0-R4,R6,R7,PC}  ;; return
    860          /*
    861          void setProBarRateOpera(int rate)
    862          {
    863          	if(rate <= 0)
    864          		return;
    865          	gCurFileState.totalSend = rate;
    866          	
    867          	if(disp_state == OPERATE_UI)
    868          	{
    869          		PROGBAR_SetValue(printingBar, rate );
    870          	}
    871          	
    872          }
    873          */

   \                                 In section .text, align 2, keep-with-next
    874          void disp_temp_operate()
    875          {
   \                     disp_temp_operate: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB08D             SUB      SP,SP,#+52
    876          	char buf[50] = {0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2134             MOVS     R1,#+52
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    877          	
    878          	TEXT_SetTextColor(textPrintTemp1, gCfgItems.state_text_color);
   \   0000000C   0x....             LDR.N    R4,??DataTable22_33
   \   0000000E   0x....             LDR.N    R5,??DataTable22_8
   \   00000010   0x6929             LDR      R1,[R5, #+16]
   \   00000012   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000016   0x.... 0x....      BL       TEXT_SetTextColor
    879          	TEXT_SetTextColor(textPrintTemp2, gCfgItems.state_text_color);
   \   0000001A   0x6929             LDR      R1,[R5, #+16]
   \   0000001C   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000020   0x.... 0x....      BL       TEXT_SetTextColor
    880          
    881          	TEXT_SetBkColor(textPrintTemp1, gCfgItems.state_background_color);
   \   00000024   0x68E9             LDR      R1,[R5, #+12]
   \   00000026   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000002A   0x.... 0x....      BL       TEXT_SetBkColor
    882          	TEXT_SetBkColor(textPrintTemp2, gCfgItems.state_background_color);
   \   0000002E   0x68E9             LDR      R1,[R5, #+12]
   \   00000030   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000034   0x.... 0x....      BL       TEXT_SetBkColor
    883          	
    884          	if(mksCfg.extruders == 2)
   \   00000038   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000003C   0x....             LDR.N    R5,??DataTable22_34
   \   0000003E   0x....             LDR.N    R6,??DataTable22_35
   \   00000040   0x....             LDR.N    R7,??DataTable22_6
   \   00000042   0xF897 0x10F7      LDRB     R1,[R7, #+247]
   \   00000046   0x2902             CMP      R1,#+2
   \   00000048   0x4631             MOV      R1,R6
   \   0000004A   0xD142             BNE.N    ??disp_temp_operate_0
    885          	{
    886          		TEXT_SetFont(textPrintTemp1,&GUI_FontHZ_fontHz14);
   \   0000004C   0x.... 0x....      BL       TEXT_SetFont
    887          		TEXT_SetFont(textPrintTemp2,&GUI_FontHZ_fontHz14);
   \   00000050   0x4631             MOV      R1,R6
   \   00000052   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000056   0x.... 0x....      BL       TEXT_SetFont
   \   0000005A   0x6828             LDR      R0,[R5, #+0]
   \   0000005C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000060   0x4606             MOV      R6,R0
   \   00000062   0xF897 0x0036      LDRB     R0,[R7, #+54]
   \   00000066   0x2801             CMP      R0,#+1
   \   00000068   0xD110             BNE.N    ??disp_temp_operate_1
    888          		if(mksCfg.has_temp_bed == 1)
    889          		{
    890          			
    891          			sprintf(buf, " E1:%d\n B:%d", (int)thermalManager.current_temperature[0], (int)thermalManager.current_temperature_bed);
   \   0000006A   0x....             LDR.N    R0,??DataTable22_36
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000072   0x4603             MOV      R3,R0
   \   00000074   0x4632             MOV      R2,R6
   \   00000076   0x.... 0x....      ADR.W    R1,`?<Constant " E1:%d\\n B:%d">`
   \   0000007A   0xA800             ADD      R0,SP,#+0
   \   0000007C   0x.... 0x....      BL       sprintf
    892          			TEXT_SetText(textPrintTemp1, buf);
   \   00000080   0xA900             ADD      R1,SP,#+0
   \   00000082   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000086   0x.... 0x....      BL       TEXT_SetText
   \   0000008A   0xE00A             B.N      ??disp_temp_operate_2
    893          		}
    894          		else
    895          		{
    896          			sprintf(buf, " E 1:%d\n", (int)thermalManager.current_temperature[0]);
   \                     ??disp_temp_operate_1: (+1)
   \   0000008C   0x4632             MOV      R2,R6
   \   0000008E   0x.... 0x....      ADR.W    R1,`?<Constant " E 1:%d\\n">`
   \   00000092   0xA800             ADD      R0,SP,#+0
   \   00000094   0x.... 0x....      BL       sprintf
    897          			TEXT_SetText(textPrintTemp1, buf);			
   \   00000098   0xA900             ADD      R1,SP,#+0
   \   0000009A   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000009E   0x.... 0x....      BL       TEXT_SetText
    898          		}
    899          		
    900          		memset(buf, 0, sizeof(buf));
   \                     ??disp_temp_operate_2: (+1)
   \   000000A2   0x2232             MOVS     R2,#+50
   \   000000A4   0x2100             MOVS     R1,#+0
   \   000000A6   0xA800             ADD      R0,SP,#+0
   \   000000A8   0x.... 0x....      BL       memset
    901          		sprintf(buf, "E 2:%d\nFAN:%d", (int)thermalManager.current_temperature[1],fanSpeeds[0]);
   \   000000AC   0x....             LDR.N    R0,??DataTable22_37
   \   000000AE   0x6803             LDR      R3,[R0, #+0]
   \   000000B0   0x461E             MOV      R6,R3
   \   000000B2   0x6868             LDR      R0,[R5, #+4]
   \   000000B4   0x.... 0x....      BL       __aeabi_f2iz
   \   000000B8   0x4602             MOV      R2,R0
   \   000000BA   0x4633             MOV      R3,R6
   \   000000BC   0x.... 0x....      ADR.W    R1,`?<Constant "E 2:%d\\nFAN:%d">`
   \   000000C0   0xA800             ADD      R0,SP,#+0
   \   000000C2   0x.... 0x....      BL       sprintf
    902          		TEXT_SetText(textPrintTemp2, buf);
   \   000000C6   0xA900             ADD      R1,SP,#+0
   \   000000C8   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000000CC   0x.... 0x....      BL       TEXT_SetText
   \   000000D0   0xE03B             B.N      ??disp_temp_operate_3
    903          		
    904          	}
    905          	else
    906          	{
    907          		TEXT_SetFont(textPrintTemp1,&GUI_FontHZ_fontHz14);
   \                     ??disp_temp_operate_0: (+1)
   \   000000D2   0x.... 0x....      BL       TEXT_SetFont
    908          		TEXT_SetFont(textPrintTemp2,&GUI_FontHZ_fontHz14);
   \   000000D6   0x4631             MOV      R1,R6
   \   000000D8   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000000DC   0x.... 0x....      BL       TEXT_SetFont
   \   000000E0   0x6828             LDR      R0,[R5, #+0]
   \   000000E2   0x.... 0x....      BL       __aeabi_f2iz
   \   000000E6   0x4605             MOV      R5,R0
   \   000000E8   0xF897 0x0036      LDRB     R0,[R7, #+54]
   \   000000EC   0x2801             CMP      R0,#+1
   \   000000EE   0xD110             BNE.N    ??disp_temp_operate_4
    909          		if(mksCfg.has_temp_bed == 1)
    910          		{
    911          			
    912          			sprintf(buf, " E1:%d\n B:%d", (int)thermalManager.current_temperature[0], (int)thermalManager.current_temperature_bed);
   \   000000F0   0x....             LDR.N    R0,??DataTable22_36
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0x.... 0x....      BL       __aeabi_f2iz
   \   000000F8   0x4603             MOV      R3,R0
   \   000000FA   0x462A             MOV      R2,R5
   \   000000FC   0x.... 0x....      ADR.W    R1,`?<Constant " E1:%d\\n B:%d">`
   \   00000100   0xA800             ADD      R0,SP,#+0
   \   00000102   0x.... 0x....      BL       sprintf
    913          			TEXT_SetText(textPrintTemp1, buf);
   \   00000106   0xA900             ADD      R1,SP,#+0
   \   00000108   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000010C   0x.... 0x....      BL       TEXT_SetText
   \   00000110   0xE00A             B.N      ??disp_temp_operate_5
    914          		}
    915          		else
    916          		{
    917          			
    918          			sprintf(buf, " E1:%d\n", (int)thermalManager.current_temperature[0]);
   \                     ??disp_temp_operate_4: (+1)
   \   00000112   0x462A             MOV      R2,R5
   \   00000114   0x.... 0x....      ADR.W    R1,`?<Constant " E1:%d\\n">`
   \   00000118   0xA800             ADD      R0,SP,#+0
   \   0000011A   0x.... 0x....      BL       sprintf
    919          			TEXT_SetText(textPrintTemp1, buf);			
   \   0000011E   0xA900             ADD      R1,SP,#+0
   \   00000120   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000124   0x.... 0x....      BL       TEXT_SetText
    920          		}
    921          		
    922          		memset(buf, 0, sizeof(buf));
   \                     ??disp_temp_operate_5: (+1)
   \   00000128   0x2232             MOVS     R2,#+50
   \   0000012A   0x2100             MOVS     R1,#+0
   \   0000012C   0xA800             ADD      R0,SP,#+0
   \   0000012E   0x.... 0x....      BL       memset
    923          		sprintf(buf, "FAN:%d\n", fanSpeeds[0]);
   \   00000132   0x....             LDR.N    R0,??DataTable22_37
   \   00000134   0x6802             LDR      R2,[R0, #+0]
   \   00000136   0x.... 0x....      ADR.W    R1,`?<Constant "FAN:%d\\n">`
   \   0000013A   0xA800             ADD      R0,SP,#+0
   \   0000013C   0x.... 0x....      BL       sprintf
    924          		TEXT_SetText(textPrintTemp2, buf);
   \   00000140   0xA900             ADD      R1,SP,#+0
   \   00000142   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000146   0x.... 0x....      BL       TEXT_SetText
    925          	}
    926          
    927          }
   \                     ??disp_temp_operate_3: (+1)
   \   0000014A   0xB00D             ADD      SP,SP,#+52
   \   0000014C   0xBDF0             POP      {R4-R7,PC}       ;; return
    928          #if 0
    929          void Autoshutdown_display()
    930          {
    931          	if(IsChooseAutoShutdown == 1)
    932          	{
    933          		BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_auto_off.bin",1);
    934          		
    935          		BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_sel_color);
    936          		BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_state_sel_color);
    937          		
    938          		BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_PRESSED,gCfgItems.btn_state_sel_textcolor);
    939          		BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED,gCfgItems.btn_state_sel_textcolor);
    940          		
    941          		if(gCfgItems.multiple_language != 0)
    942          		{	
    943          			BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.auto_off);
    944          		}
    945          			
    946          	}
    947          	else
    948          	{
    949          		BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_manual_off.bin",1);
    950          		BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_color);
    951          		BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_state_color);
    952          
    953          		BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_PRESSED,gCfgItems.btn_state_textcolor);
    954          		BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED,gCfgItems.btn_state_textcolor);
    955          		if(gCfgItems.multiple_language != 0)
    956          		{	
    957          			BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.manual_off);
    958          		}		
    959          	}
    960          
    961          }
    962          #endif

   \                                 In section .text, align 2, keep-with-next
    963          void Clear_operate()
    964          {
   \                     Clear_operate: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    965          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable22_8
   \   00000004   0x6840             LDR      R0,[R0, #+4]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    966          	if(WM_IsWindow(hOperateWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable22_5
   \   0000000C   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD005             BEQ.N    ??Clear_operate_0
    967          	{
    968          		WM_DeleteWindow(hOperateWnd);
   \   00000018   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000001C   0xE8BD 0x4010      POP      {R4,LR}
   \   00000020   0x.... 0x....      B.W      WM_DeleteWindow
    969          		//GUI_Exec();
    970          	}
    971          	
    972          	//GUI_Clear();
    973          }
   \                     ??Clear_operate_0: (+1)
   \   00000024   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22:
   \   00000000   0x........         DC32     buttonRet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_1:
   \   00000000   0x........         DC32     from_flash_pic

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_2:
   \   00000000   0x........         DC32     flash_preview_begin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_3:
   \   00000000   0x........         DC32     default_preview_flg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_4:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_5:
   \   00000000   0x........         DC32     IsChooseAutoShutdown

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_6:
   \   00000000   0x........         DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_7:
   \   00000000   0x........         DC32     active_extruder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_8:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_9:
   \   00000000   0x........         DC32     buttonFilament

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_10:
   \   00000000   0x........         DC32     feedrate_mm_s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_11:
   \   00000000   0x........         DC32     _ZN11Temperature18target_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_12:
   \   00000000   0x........         DC32     mksReprint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_13:
   \   00000000   0x........         DC32     card

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_14:
   \   00000000   0x........         DC32     print_job_timer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_15:
   \   00000000   0x........         DC32     buttonSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_16:
   \   00000000   0x........         DC32     buttonMove

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_17:
   \   00000000   0x40010C00         DC32     0x40010c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_18:
   \   00000000   0x........         DC32     led_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_19:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_20:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_21:
   \   00000000   0x........         DC32     _Z12cbOperateWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_22:
   \   00000000   0x........         DC32     BMP_PIC_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_23:
   \   00000000   0x........         DC32     operation_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_24:
   \   00000000   0x........         DC32     BMP_PIC_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_25:
   \   00000000   0x........         DC32     bmp_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_26:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_27:
   \   00000000   0x........         DC32     set_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_28:
   \   00000000   0x........         DC32     printing_more_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_29:
   \   00000000   0x........         DC32     To_pre_view

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_30:
   \   00000000   0x000317E0         DC32     0x317e0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_31:
   \   00000000   0xFFFCE820         DC32     0xfffce820

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_32:
   \   00000000   0x........         DC32     printingBar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_33:
   \   00000000   0x........         DC32     textPrintTemp1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_34:
   \   00000000   0x........         DC32     _ZN11Temperature19current_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_35:
   \   00000000   0x........         DC32     GUI_FontHZ_fontHz14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_36:
   \   00000000   0x........         DC32     _ZN11Temperature23current_temperature_bedE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_37:
   \   00000000   0x........         DC32     fanSpeeds

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_opt_temp.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_opt_temp.bin"
   \              0x70 0x5F    
   \              0x6F 0x70    
   \              0x74 0x5F    
   \              0x74 0x65    
   \              0x6D 0x70    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_speed.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_speed.bin"
   \              0x70 0x5F    
   \              0x73 0x70    
   \              0x65 0x65    
   \              0x64 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_fan.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_fan.bin"
   \              0x70 0x5F    
   \              0x66 0x61    
   \              0x6E 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_filament.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_filament.bin"
   \              0x70 0x5F    
   \              0x66 0x69    
   \              0x6C 0x61    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_extrude_opr.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_extrude_opr.bin"
   \              0x70 0x5F    
   \              0x65 0x78    
   \              0x74 0x72    
   \              0x75 0x64    
   \              0x65 0x5F    
   \              0x6F 0x70    
   \              0x72 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_move_opr.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_move_opr.bin"
   \              0x70 0x5F    
   \              0x6D 0x6F    
   \              0x76 0x65    
   \              0x5F 0x6F    
   \              0x70 0x72    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_more_opr.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_more_opr.bin"
   \              0x70 0x5F    
   \              0x6D 0x6F    
   \              0x72 0x65    
   \              0x5F 0x6F    
   \              0x70 0x72    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_led.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_led.bin"
   \              0x70 0x5F    
   \              0x6C 0x65    
   \              0x64 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_auto_off.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_auto_off.bin"
   \              0x70 0x5F    
   \              0x61 0x75    
   \              0x74 0x6F    
   \              0x5F 0x6F    
   \              0x66 0x66    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_manual_off.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_manual_off.bin"
   \              0x70 0x5F    
   \              0x6D 0x61    
   \              0x6E 0x75    
   \              0x61 0x6C    
   \              0x5F 0x6F    
   \              0x66 0x66    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_return.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_return.bin"
   \              0x70 0x5F    
   \              0x72 0x65    
   \              0x74 0x75    
   \              0x72 0x6E    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " E1:%d\\n B:%d">`:
   \   00000000   0x20 0x45          DC8 " E1:%d\012 B:%d"
   \              0x31 0x3A    
   \              0x25 0x64    
   \              0x0A 0x20    
   \              0x42 0x3A    
   \              0x25 0x64    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " E 1:%d\\n">`:
   \   00000000   0x20 0x45          DC8 " E 1:%d\012"
   \              0x20 0x31    
   \              0x3A 0x25    
   \              0x64 0x0A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "E 2:%d\\nFAN:%d">`:
   \   00000000   0x45 0x20          DC8 "E 2:%d\012FAN:%d"
   \              0x32 0x3A    
   \              0x25 0x64    
   \              0x0A 0x46    
   \              0x41 0x4E    
   \              0x3A 0x25    
   \              0x64 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " E1:%d\\n">`:
   \   00000000   0x20 0x45          DC8 " E1:%d\012"
   \              0x31 0x3A    
   \              0x25 0x64    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "FAN:%d\\n">`:
   \   00000000   0x46 0x41          DC8 "FAN:%d\012"
   \              0x4E 0x3A    
   \              0x25 0x64    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000021   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   Autoshutdown_display2
        24   -> BUTTON_SetBitmapEx
        24   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
       8   Clear_operate
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      24   cbOperateWin(WM_MESSAGE *)
         0   -> Autoshutdown_display2
        24   -> CardReader::pauseSDPrint()
        24   -> Clear_operate
        24   -> HAL_GPIO_WritePin
        24   -> Stopwatch::pause()
         0   -> WM_DefaultProc
        24   -> __aeabi_f2iz
        24   -> __aeabi_i2f
         0   -> draw_FilamentChange
         0   -> draw_changeSpeed
         0   -> draw_extrusion
         0   -> draw_fan
         0   -> draw_move_motor
         0   -> draw_preHeat
         0   -> draw_printing
         0   -> draw_printmore
        24   -> stop_print_time
      72   disp_temp_operate
        72   -> TEXT_SetBkColor
        72   -> TEXT_SetFont
        72   -> TEXT_SetText
        72   -> TEXT_SetTextColor
        72   -> __aeabi_f2iz
        72   -> __aeabi_memclr4
        72   -> memset
        72   -> sprintf
      56   draw_operate
        56   -> BUTTON_CreateEx
        56   -> BUTTON_SetBitmapEx
        56   -> BUTTON_SetBkColor
        56   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
        56   -> BUTTON_SetText
        56   -> BUTTON_SetTextColor
        56   -> GUI_Clear
        56   -> GUI_DispStringAt
        56   -> GUI_SetBkColor
        56   -> GUI_SetColor
        56   -> WM_CreateWindow
        56   -> alloc_win_id
        56   -> creat_title_text
      32   setProBarRateOpera
         0   -> PROGBAR_SetValue
        32   -> __aeabi_ldivmod


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant " E 1:%d\n">
      16  ?<Constant " E1:%d\n B:%d">
       8  ?<Constant " E1:%d\n">
      16  ?<Constant "E 2:%d\nFAN:%d">
       8  ?<Constant "FAN:%d\n">
      20  ?<Constant "bmp_auto_off.bin">
      20  ?<Constant "bmp_extrude_opr.bin">
      12  ?<Constant "bmp_fan.bin">
      20  ?<Constant "bmp_filament.bin">
      12  ?<Constant "bmp_led.bin">
      20  ?<Constant "bmp_manual_off.bin">
      20  ?<Constant "bmp_more_opr.bin">
      20  ?<Constant "bmp_move_opr.bin">
      20  ?<Constant "bmp_opt_temp.bin">
      16  ?<Constant "bmp_return.bin">
      16  ?<Constant "bmp_speed.bin">
      52  ?<Constant {'\000'}>
       4  ??DataTable22
       4  ??DataTable22_1
       4  ??DataTable22_10
       4  ??DataTable22_11
       4  ??DataTable22_12
       4  ??DataTable22_13
       4  ??DataTable22_14
       4  ??DataTable22_15
       4  ??DataTable22_16
       4  ??DataTable22_17
       4  ??DataTable22_18
       4  ??DataTable22_19
       4  ??DataTable22_2
       4  ??DataTable22_20
       4  ??DataTable22_21
       4  ??DataTable22_22
       4  ??DataTable22_23
       4  ??DataTable22_24
       4  ??DataTable22_25
       4  ??DataTable22_26
       4  ??DataTable22_27
       4  ??DataTable22_28
       4  ??DataTable22_29
       4  ??DataTable22_3
       4  ??DataTable22_30
       4  ??DataTable22_31
       4  ??DataTable22_32
       4  ??DataTable22_33
       4  ??DataTable22_34
       4  ??DataTable22_35
       4  ??DataTable22_36
       4  ??DataTable22_37
       4  ??DataTable22_4
       4  ??DataTable22_5
       4  ??DataTable22_6
       4  ??DataTable22_7
       4  ??DataTable22_8
       4  ??DataTable22_9
     130  Autoshutdown_display2
      38  Clear_operate
      52  IsChooseAutoShutdown
          hOperateWnd
          buttonTemperature
          buttonAuto_Off
      48  buttonFilament
          buttonExtrude
      48  buttonMove
          buttonLed
      48  buttonRet
          buttonFan
      48  buttonSpeed
          buttonMore_printing
     642  cbOperateWin(WM_MESSAGE *)
     334  disp_temp_operate
    1834  draw_operate
       1  pause_flag
       2  printingBar
     122  setProBarRateOpera
       4  textPrintTemp1
          textPrintTemp2
       1  -- Other

 
   251 bytes in section .bss
    53 bytes in section .rodata
 3 508 bytes in section .text
 
 3 508 bytes of CODE  memory
    52 bytes of CONST memory (+ 1 byte shared)
   251 bytes of DATA  memory

Errors: none
Warnings: 44
