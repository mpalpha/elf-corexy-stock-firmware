###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:26
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_SetCaptureMove.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_SetCaptureMove.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\WM_SetCaptureMove.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WM_SetCaptureMove.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_SetCaptureMove.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_SetCaptureMove.c
     16          Purpose     : Implementation of WM_SetCaptureMove
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "WM_Intern.h"
     21          
     22          #if GUI_WINSUPPORT
     23          
     24          /*********************************************************************
     25          *
     26          *        Static data
     27          *
     28          **********************************************************************
     29          */

   \                                 In section .bss, align 4
     30          static GUI_POINT WM__CapturePoint;
   \                     WM__CapturePoint:
   \   00000000                      DS8 4
     31          
     32          /*********************************************************************
     33          *
     34          *        Public code
     35          *
     36          **********************************************************************
     37          */
     38          /*********************************************************************
     39          *
     40          *       WM_SetCaptureMove
     41          */

   \                                 In section .text, align 4, keep-with-next
     42          void WM_SetCaptureMove(WM_HWIN hWin, const GUI_PID_STATE* pState, int MinVisibility) {
   \                     WM_SetCaptureMove: (+1)
   \   00000000   0xE92D 0x41FF      PUSH     {R0-R8,LR}
   \   00000004   0x4605             MOV      R5,R0
   \   00000006   0x460F             MOV      R7,R1
   \   00000008   0x4616             MOV      R6,R2
     43            if (!WM_HasCaptured(hWin)) {
   \   0000000A   0x4C1D             LDR.N    R4,??WM_SetCaptureMove_0
   \   0000000C   0x.... 0x....      BL       WM_HasCaptured
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD108             BNE.N    ??WM_SetCaptureMove_1
     44              WM_SetCapture(hWin, 1);        /* Set capture with auto release */
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x4628             MOV      R0,R5
   \   00000018   0x.... 0x....      BL       WM_SetCapture
     45              WM__CapturePoint.x = pState->x;
   \   0000001C   0x6838             LDR      R0,[R7, #+0]
   \   0000001E   0x8020             STRH     R0,[R4, #+0]
     46              WM__CapturePoint.y = pState->y;
   \   00000020   0x6878             LDR      R0,[R7, #+4]
   \   00000022   0x8060             STRH     R0,[R4, #+2]
   \   00000024   0xE029             B.N      ??WM_SetCaptureMove_2
     47            } else {                         /* Moving ... let the window move ! */
     48              int dx, dy;
     49              dx = pState->x - WM__CapturePoint.x;
   \                     ??WM_SetCaptureMove_1: (+1)
   \   00000026   0x6838             LDR      R0,[R7, #+0]
   \   00000028   0xF9B4 0x1000      LDRSH    R1,[R4, #+0]
   \   0000002C   0xEBA0 0x0801      SUB      R8,R0,R1
     50              dy = pState->y - WM__CapturePoint.y;
   \   00000030   0x6878             LDR      R0,[R7, #+4]
   \   00000032   0xF9B4 0x1002      LDRSH    R1,[R4, #+2]
   \   00000036   0x1A44             SUBS     R4,R0,R1
     51              /* make sure at least a part of the windows stays inside of its parent */
     52              if (MinVisibility == 0) {
   \   00000038   0x2E00             CMP      R6,#+0
   \   0000003A   0xD019             BEQ.N    ??WM_SetCaptureMove_3
     53                WM_MoveWindow(hWin, dx, dy);
     54              } else {
     55                GUI_RECT Rect, RectParent;
     56                /* make sure at least a part of the windows stays inside of its parent */
     57                WM_GetWindowRectEx(hWin, &Rect);
   \   0000003C   0xA902             ADD      R1,SP,#+8
   \   0000003E   0x4628             MOV      R0,R5
   \   00000040   0x.... 0x....      BL       WM_GetWindowRectEx
     58                WM_GetWindowRectEx(WM_GetParent(hWin), &RectParent);
   \   00000044   0x4628             MOV      R0,R5
   \   00000046   0x.... 0x....      BL       WM_GetParent
   \   0000004A   0xA900             ADD      R1,SP,#+0
   \   0000004C   0x.... 0x....      BL       WM_GetWindowRectEx
     59                GUI_MoveRect(&Rect, dx, dy);
   \   00000050   0x4622             MOV      R2,R4
   \   00000052   0x4641             MOV      R1,R8
   \   00000054   0xA802             ADD      R0,SP,#+8
   \   00000056   0x.... 0x....      BL       GUI_MoveRect
     60                GUI__ReduceRect(&RectParent, &RectParent, MinVisibility);
   \   0000005A   0x4632             MOV      R2,R6
   \   0000005C   0xA900             ADD      R1,SP,#+0
   \   0000005E   0xA800             ADD      R0,SP,#+0
   \   00000060   0x.... 0x....      BL       GUI__ReduceRect
     61                if (GUI_RectsIntersect(&Rect, &RectParent)) {
   \   00000064   0xA900             ADD      R1,SP,#+0
   \   00000066   0xA802             ADD      R0,SP,#+8
   \   00000068   0x.... 0x....      BL       GUI_RectsIntersect
   \   0000006C   0x2800             CMP      R0,#+0
   \   0000006E   0xD004             BEQ.N    ??WM_SetCaptureMove_2
     62                  WM_MoveWindow(hWin, dx, dy);
   \                     ??WM_SetCaptureMove_3: (+1)
   \   00000070   0x4622             MOV      R2,R4
   \   00000072   0x4641             MOV      R1,R8
   \   00000074   0x4628             MOV      R0,R5
   \   00000076   0x.... 0x....      BL       WM_MoveWindow
     63                }
     64              }
     65            }
     66          }
   \                     ??WM_SetCaptureMove_2: (+1)
   \   0000007A   0xE8BD 0x81FF      POP      {R0-R8,PC}       ;; return
   \   0000007E   0xBF00             Nop      
   \                     ??WM_SetCaptureMove_0:
   \   00000080   0x........         DC32     WM__CapturePoint
     67          
     68          
     69          #else
     70            void WM_SetCaptureMove_c(void) {} /* avoid empty object files */
     71          #endif /* GUI_WINSUPPORT */
     72          
     73          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   WM_SetCaptureMove
        40   -> GUI_MoveRect
        40   -> GUI_RectsIntersect
        40   -> GUI__ReduceRect
        40   -> WM_GetParent
        40   -> WM_GetWindowRectEx
        40   -> WM_HasCaptured
        40   -> WM_MoveWindow
        40   -> WM_SetCapture


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     132  WM_SetCaptureMove
       4  WM__CapturePoint

 
   4 bytes in section .bss
 132 bytes in section .text
 
 132 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
