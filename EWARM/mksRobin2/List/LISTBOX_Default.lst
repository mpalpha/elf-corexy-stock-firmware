###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:00:48
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\LISTBOX_Default.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\LISTBOX_Default.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\LISTBOX_Default.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\LISTBOX_Default.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\LISTBOX_Default.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : LISTBOX_Default.c
     16          Purpose     : Implementation of listbox widget
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "LISTBOX_Private.h"
     21          
     22          #if GUI_WINSUPPORT
     23          
     24          /*********************************************************************
     25          *
     26          *       Exported routines:  Various methods
     27          *
     28          **********************************************************************
     29          */
     30          /*********************************************************************
     31          *
     32          *       LISTBOX_SetDefaultFont
     33          */

   \                                 In section .text, align 2, keep-with-next
     34          void LISTBOX_SetDefaultFont(const GUI_FONT GUI_UNI_PTR * pFont) {
     35            LISTBOX_DefaultProps.pFont = pFont;
   \                     LISTBOX_SetDefaultFont: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable7
   \   00000002   0x6008             STR      R0,[R1, #+0]
     36          }
   \   00000004   0x4770             BX       LR               ;; return
     37          
     38          /*********************************************************************
     39          *
     40          *       LISTBOX_GetDefaultFont
     41          */

   \                                 In section .text, align 2, keep-with-next
     42          const GUI_FONT GUI_UNI_PTR * LISTBOX_GetDefaultFont(void) {
     43            return LISTBOX_DefaultProps.pFont;
   \                     LISTBOX_GetDefaultFont: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable7
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
     44          }
     45          
     46          /*********************************************************************
     47          *
     48          *       LISTBOX_SetDefaultScrollStepH
     49          */

   \                                 In section .text, align 2, keep-with-next
     50          void LISTBOX_SetDefaultScrollStepH(int Value) {
     51            LISTBOX_DefaultProps.ScrollStepH = Value;
   \                     LISTBOX_SetDefaultScrollStepH: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable7
   \   00000002   0x8088             STRH     R0,[R1, #+4]
     52          }
   \   00000004   0x4770             BX       LR               ;; return
     53          
     54          /*********************************************************************
     55          *
     56          *       LISTBOX_GetDefaultScrollStepH
     57          */

   \                                 In section .text, align 2, keep-with-next
     58          int LISTBOX_GetDefaultScrollStepH(void) {
     59            return LISTBOX_DefaultProps.ScrollStepH;
   \                     LISTBOX_GetDefaultScrollStepH: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable7
   \   00000002   0x8880             LDRH     R0,[R0, #+4]
   \   00000004   0x4770             BX       LR               ;; return
     60          }
     61          
     62          /*********************************************************************
     63          *
     64          *       LISTBOX_SetDefaultBkColor
     65          */

   \                                 In section .text, align 2, keep-with-next
     66          void LISTBOX_SetDefaultBkColor(unsigned Index, GUI_COLOR Color) {
     67            if (Index < GUI_COUNTOF(LISTBOX_DefaultProps.aBackColor)) {
   \                     LISTBOX_SetDefaultBkColor: (+1)
   \   00000000   0x2804             CMP      R0,#+4
   \   00000002   0xD203             BCS.N    ??LISTBOX_SetDefaultBkColor_0
     68              LISTBOX_DefaultProps.aBackColor[Index] = Color;
   \   00000004   0x....             LDR.N    R2,??DataTable7
   \   00000006   0xEB02 0x0080      ADD      R0,R2,R0, LSL #+2
   \   0000000A   0x6081             STR      R1,[R0, #+8]
     69            }
     70          }
   \                     ??LISTBOX_SetDefaultBkColor_0: (+1)
   \   0000000C   0x4770             BX       LR               ;; return
     71          
     72          /*********************************************************************
     73          *
     74          *       LISTBOX_GetDefaultBkColor
     75          */

   \                                 In section .text, align 2, keep-with-next
     76          GUI_COLOR LISTBOX_GetDefaultBkColor(unsigned Index) {
     77            if (Index < GUI_COUNTOF(LISTBOX_DefaultProps.aBackColor)) {
   \                     LISTBOX_GetDefaultBkColor: (+1)
   \   00000000   0x2804             CMP      R0,#+4
   \   00000002   0xD204             BCS.N    ??LISTBOX_GetDefaultBkColor_0
     78              return LISTBOX_DefaultProps.aBackColor[Index];
   \   00000004   0x....             LDR.N    R1,??DataTable7
   \   00000006   0xEB01 0x0080      ADD      R0,R1,R0, LSL #+2
   \   0000000A   0x6880             LDR      R0,[R0, #+8]
   \   0000000C   0x4770             BX       LR
     79            }
     80            return GUI_INVALID_COLOR;
   \                     ??LISTBOX_GetDefaultBkColor_0: (+1)
   \   0000000E   0xF06F 0x4070      MVN      R0,#-268435456
   \   00000012   0x4770             BX       LR               ;; return
     81          }
     82          
     83          /*********************************************************************
     84          *
     85          *       LISTBOX_SetDefaultTextColor
     86          */

   \                                 In section .text, align 2, keep-with-next
     87          void LISTBOX_SetDefaultTextColor(unsigned Index, GUI_COLOR Color) {
     88            if (Index < GUI_COUNTOF(LISTBOX_DefaultProps.aTextColor)) {
   \                     LISTBOX_SetDefaultTextColor: (+1)
   \   00000000   0x2804             CMP      R0,#+4
   \   00000002   0xD203             BCS.N    ??LISTBOX_SetDefaultTextColor_0
     89              LISTBOX_DefaultProps.aTextColor[Index] = Color;
   \   00000004   0x....             LDR.N    R2,??DataTable7
   \   00000006   0xEB02 0x0080      ADD      R0,R2,R0, LSL #+2
   \   0000000A   0x6181             STR      R1,[R0, #+24]
     90            }
     91          }
   \                     ??LISTBOX_SetDefaultTextColor_0: (+1)
   \   0000000C   0x4770             BX       LR               ;; return
     92          
     93          /*********************************************************************
     94          *
     95          *       LISTBOX_GetDefaultTextColor
     96          */

   \                                 In section .text, align 2, keep-with-next
     97          GUI_COLOR LISTBOX_GetDefaultTextColor(unsigned Index) {
     98            if (Index < GUI_COUNTOF(LISTBOX_DefaultProps.aTextColor)) {
   \                     LISTBOX_GetDefaultTextColor: (+1)
   \   00000000   0x2804             CMP      R0,#+4
   \   00000002   0xD204             BCS.N    ??LISTBOX_GetDefaultTextColor_0
     99              return LISTBOX_DefaultProps.aTextColor[Index];
   \   00000004   0x....             LDR.N    R1,??DataTable7
   \   00000006   0xEB01 0x0080      ADD      R0,R1,R0, LSL #+2
   \   0000000A   0x6980             LDR      R0,[R0, #+24]
   \   0000000C   0x4770             BX       LR
    100            }
    101            return GUI_INVALID_COLOR;
   \                     ??LISTBOX_GetDefaultTextColor_0: (+1)
   \   0000000E   0xF06F 0x4070      MVN      R0,#-268435456
   \   00000012   0x4770             BX       LR               ;; return
    102          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     LISTBOX_DefaultProps
    103          
    104          #else                            /* Avoid problems with empty object modules */
    105            void LISTBOX_Default_C(void) {}
    106          #endif
    107          
    108          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   LISTBOX_GetDefaultBkColor
       0   LISTBOX_GetDefaultFont
       0   LISTBOX_GetDefaultScrollStepH
       0   LISTBOX_GetDefaultTextColor
       0   LISTBOX_SetDefaultBkColor
       0   LISTBOX_SetDefaultFont
       0   LISTBOX_SetDefaultScrollStepH
       0   LISTBOX_SetDefaultTextColor


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
      20  LISTBOX_GetDefaultBkColor
       6  LISTBOX_GetDefaultFont
       6  LISTBOX_GetDefaultScrollStepH
      20  LISTBOX_GetDefaultTextColor
      14  LISTBOX_SetDefaultBkColor
       6  LISTBOX_SetDefaultFont
       6  LISTBOX_SetDefaultScrollStepH
      14  LISTBOX_SetDefaultTextColor

 
 96 bytes in section .text
 
 96 bytes of CODE memory

Errors: none
Warnings: none
