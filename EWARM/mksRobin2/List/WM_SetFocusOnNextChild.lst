###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:27
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_SetFocusOnNextChild.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_SetFocusOnNextChild.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\WM_SetFocusOnNextChild.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WM_SetFocusOnNextChild.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_SetFocusOnNextChild.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_SetFocusOnNextChild.c
     16          Purpose     : Implementation of WM_SetFocusOnNextChild
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "WM_Intern.h"
     21          
     22          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     23          
     24          /*********************************************************************
     25          *
     26          *       static code
     27          *
     28          **********************************************************************
     29          */
     30          /*********************************************************************
     31          *
     32          *       _GetNextChild
     33          *
     34          * Purpose:
     35          *   Returns a handle to the next child of a window.
     36          *
     37          * Parameters:
     38          *   hParent:  handle of parent window.
     39          *   hChild:   handle of child to begin our search to its next sibling.
     40          *
     41          * Return value:
     42          *   Handle to next child if we found one.
     43          *   0 if window has no other children.
     44          */

   \                                 In section .text, align 2, keep-with-next
     45          static WM_HWIN _GetNextChild(WM_HWIN hParent, WM_HWIN hChild) {
   \                     _GetNextChild: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     46            WM_HWIN hObj = 0;
   \   00000006   0x2000             MOVS     R0,#+0
     47            WM_Obj* pObj;
     48            if (hChild) {
   \   00000008   0x2D00             CMP      R5,#+0
   \   0000000A   0xD004             BEQ.N    ??_GetNextChild_0
     49              pObj = WM_HANDLE2PTR(hChild);
   \   0000000C   0x4628             MOV      R0,R5
   \   0000000E   0x.... 0x....      BL       GUI_ALLOC_h2p
     50              hObj = pObj->hNext;
   \   00000012   0xF9B0 0x001A      LDRSH    R0,[R0, #+26]
     51            }
     52            if (!hObj) {
   \                     ??_GetNextChild_0: (+1)
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD104             BNE.N    ??_GetNextChild_1
     53              pObj = WM_HANDLE2PTR(hParent);
   \   0000001A   0x4620             MOV      R0,R4
   \   0000001C   0x.... 0x....      BL       GUI_ALLOC_h2p
     54              hObj = pObj->hFirstChild;
   \   00000020   0xF9B0 0x0018      LDRSH    R0,[R0, #+24]
     55            }
     56            if (hObj != hChild) {
   \                     ??_GetNextChild_1: (+1)
   \   00000024   0x42A8             CMP      R0,R5
   \   00000026   0xD100             BNE.N    ??_GetNextChild_2
     57              return hObj;
     58            }
     59            return 0;
   \   00000028   0x2000             MOVS     R0,#+0
   \                     ??_GetNextChild_2: (+1)
   \   0000002A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     60          }
     61          
     62          /*********************************************************************
     63          *
     64          *       _SetFocusOnNextChild
     65          *
     66          * Purpose:
     67          *   Sets the focus on next focussable child of a window.
     68          *
     69          * Return value:
     70          *   Handle of focussed child, if we found an other focussable child
     71          *   as the current. Otherwise the return value is zero.
     72          */

   \                                 In section .text, align 2, keep-with-next
     73          static WM_HWIN _SetFocusOnNextChild(WM_HWIN hParent) {
   \                     _SetFocusOnNextChild: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
     74            WM_HWIN hChild, hWin;
     75            hChild = WM__GetFocussedChild(hParent);
   \   00000004   0x.... 0x....      BL       WM__GetFocussedChild
     76            hChild = _GetNextChild(hParent, hChild);
   \   00000008   0x4601             MOV      R1,R0
   \   0000000A   0x4620             MOV      R0,R4
   \   0000000C   0x.... 0x....      BL       _GetNextChild
   \   00000010   0x4605             MOV      R5,R0
     77            hWin   = hChild;
   \   00000012   0x462E             MOV      R6,R5
     78            while ((WM_IsFocussable(hWin) == 0) && hWin) {
   \                     ??_SetFocusOnNextChild_0: (+1)
   \   00000014   0x4630             MOV      R0,R6
   \   00000016   0x.... 0x....      BL       WM_IsFocussable
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD108             BNE.N    ??_SetFocusOnNextChild_1
   \   0000001E   0x2E00             CMP      R6,#+0
   \   00000020   0xD006             BEQ.N    ??_SetFocusOnNextChild_1
     79              hWin = _GetNextChild(hParent, hWin);
   \   00000022   0x4631             MOV      R1,R6
   \   00000024   0x4620             MOV      R0,R4
   \   00000026   0x.... 0x....      BL       _GetNextChild
   \   0000002A   0x4606             MOV      R6,R0
     80              if (hWin == hChild) {
   \   0000002C   0x42AE             CMP      R6,R5
   \   0000002E   0xD1F1             BNE.N    ??_SetFocusOnNextChild_0
     81                break;
     82              }
     83            }
     84            if (WM_SetFocus(hWin) == 0) {
   \                     ??_SetFocusOnNextChild_1: (+1)
   \   00000030   0x4630             MOV      R0,R6
   \   00000032   0x.... 0x....      BL       WM_SetFocus
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD101             BNE.N    ??_SetFocusOnNextChild_2
     85              return hWin;
   \   0000003A   0x4630             MOV      R0,R6
   \   0000003C   0xBD70             POP      {R4-R6,PC}
     86            }
     87            return 0;
   \                     ??_SetFocusOnNextChild_2: (+1)
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0xBD70             POP      {R4-R6,PC}       ;; return
     88          }
     89          
     90          /*********************************************************************
     91          *
     92          *       Public code
     93          *
     94          **********************************************************************
     95          */
     96          /*********************************************************************
     97          *
     98          *       WM_SetFocusOnNextChild
     99          */

   \                                 In section .text, align 2, keep-with-next
    100          WM_HWIN WM_SetFocusOnNextChild(WM_HWIN hParent) {
   \                     WM_SetFocusOnNextChild: (+1)
   \   00000000   0x4601             MOV      R1,R0
    101            WM_HWIN r = 0;
   \   00000002   0x2000             MOVS     R0,#+0
    102            if (hParent) {
   \   00000004   0x2900             CMP      R1,#+0
   \   00000006   0xD001             BEQ.N    ??WM_SetFocusOnNextChild_0
    103              WM_LOCK();
    104              r = _SetFocusOnNextChild(hParent);
   \   00000008   0x4608             MOV      R0,R1
   \   0000000A   0x....             B.N      _SetFocusOnNextChild
    105              WM_UNLOCK();
    106            }
    107            return r;
   \                     ??WM_SetFocusOnNextChild_0: (+1)
   \   0000000C   0x4770             BX       LR               ;; return
    108          }
    109          
    110          #else
    111            void WM_SetFocusOnNextChild_C(void) {} /* avoid empty object files */
    112          #endif
    113          
    114          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   WM_SetFocusOnNextChild
         0   -> _SetFocusOnNextChild
      16   _GetNextChild
        16   -> GUI_ALLOC_h2p
      16   _SetFocusOnNextChild
        16   -> WM_IsFocussable
        16   -> WM_SetFocus
        16   -> WM__GetFocussedChild
        16   -> _GetNextChild


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      14  WM_SetFocusOnNextChild
      44  _GetNextChild
      66  _SetFocusOnNextChild

 
 124 bytes in section .text
 
 124 bytes of CODE memory

Errors: none
Warnings: none
