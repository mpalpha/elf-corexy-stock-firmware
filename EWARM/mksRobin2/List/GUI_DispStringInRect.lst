###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:39
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_DispStringInRect.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_DispStringInRect.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\GUI_DispStringInRect.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\GUI_DispStringInRect.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_DispStringInRect.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_DispStringInRect.c
     16          Purpose     : Implementation of GUI_DispStringInRect
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stddef.h>           /* needed for definition of NULL */
     21          #include <stdio.h>
     22          #include "GUI_Protected.h"
     23          #if GUI_WINSUPPORT
     24            #include "WM.h"
     25          #endif
     26          #include "mks_cfg.h" 

  #define UNUSED(x) ((void)(x))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_N
          ano_code\EWARM/../Middlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Inc\mks_cfg.h",609  Warning[Pe083]: 
          type qualifier specified more than once
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       GUI__DispStringInRect
     36          */

   \                                 In section .text, align 2, keep-with-next
     37          void GUI__DispStringInRect(const char GUI_UNI_PTR *s, GUI_RECT* pRect, int TextAlign, int MaxNumChars) {
   \                     GUI__DispStringInRect: (+1)
   \   00000000   0xE92D 0x4FF5      PUSH     {R0,R2,R4-R11,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
   \   00000006   0x4689             MOV      R9,R1
   \   00000008   0x461C             MOV      R4,R3
     38            GUI_RECT r;
     39            GUI_RECT rLine;
     40            int y = 0;
   \   0000000A   0xF04F 0x0800      MOV      R8,#+0
     41            const char GUI_UNI_PTR *sOrg =s;
   \   0000000E   0x4605             MOV      R5,R0
     42            int FontYSize;
     43            int xLine = 0;
   \   00000010   0x4646             MOV      R6,R8
     44            int LineLen;
     45            int NumCharsRem;           /* Number of remaining characters */
     46            FontYSize = GUI_GetFontSizeY();
   \   00000012   0x.... 0x....      BL       GUI_GetFontSizeY
   \   00000016   0x4607             MOV      R7,R0
     47            if (pRect) {
   \   00000018   0xF1B9 0x0F00      CMP      R9,#+0
   \   0000001C   0xA800             ADD      R0,SP,#+0
   \   0000001E   0xD004             BEQ.N    ??GUI__DispStringInRect_0
     48              r = *pRect;
   \   00000020   0x4649             MOV      R1,R9
   \   00000022   0x2208             MOVS     R2,#+8
   \   00000024   0x.... 0x....      BL       __aeabi_memcpy
   \   00000028   0xE001             B.N      ??GUI__DispStringInRect_1
     49            } else {
     50              GUI_GetClientRect(&r);
   \                     ??GUI__DispStringInRect_0: (+1)
   \   0000002A   0x.... 0x....      BL       GUI_GetClientRect
     51            }
     52            /* handle vertical alignment */
     53            if ((TextAlign & GUI_TA_VERTICAL) == GUI_TA_TOP) {
   \                     ??GUI__DispStringInRect_1: (+1)
   \   0000002E   0x9806             LDR      R0,[SP, #+24]
   \   00000030   0xF010 0x0F0C      TST      R0,#0xC
   \   00000034   0xD102             BNE.N    ??GUI__DispStringInRect_2
     54          		y = r.y0;
   \   00000036   0xF9BD 0x8002      LDRSH    R8,[SP, #+2]
   \   0000003A   0xE043             B.N      ??GUI__DispStringInRect_3
     55            } else {
     56              int NumLines;
     57              /* Count the number of lines */
     58              for (NumCharsRem = MaxNumChars, NumLines = 1; NumCharsRem ;NumLines++) {
   \                     ??GUI__DispStringInRect_2: (+1)
   \   0000003C   0x46A2             MOV      R10,R4
   \   0000003E   0xF04F 0x0901      MOV      R9,#+1
   \   00000042   0xE001             B.N      ??GUI__DispStringInRect_4
   \                     ??GUI__DispStringInRect_5: (+1)
   \   00000044   0xF109 0x0901      ADD      R9,R9,#+1
   \                     ??GUI__DispStringInRect_4: (+1)
   \   00000048   0xF1BA 0x0F00      CMP      R10,#+0
   \   0000004C   0xD012             BEQ.N    ??GUI__DispStringInRect_6
     59                LineLen = GUI__GetLineNumChars(s, NumCharsRem);
   \   0000004E   0x4651             MOV      R1,R10
   \   00000050   0x9805             LDR      R0,[SP, #+20]
   \   00000052   0x.... 0x....      BL       GUI__GetLineNumChars
   \   00000056   0x4683             MOV      R11,R0
     60                NumCharsRem -= LineLen;
   \   00000058   0xEBAA 0x0A0B      SUB      R10,R10,R11
     61                s += GUI_UC__NumChars2NumBytes(s, LineLen);
   \   0000005C   0x4659             MOV      R1,R11
   \   0000005E   0x9805             LDR      R0,[SP, #+20]
   \   00000060   0x.... 0x....      BL       GUI_UC__NumChars2NumBytes
   \   00000064   0x9905             LDR      R1,[SP, #+20]
   \   00000066   0x1840             ADDS     R0,R0,R1
   \   00000068   0x9005             STR      R0,[SP, #+20]
     62                if (GUI__HandleEOLine(&s))
   \   0000006A   0xA805             ADD      R0,SP,#+20
   \   0000006C   0x.... 0x....      BL       GUI__HandleEOLine
   \   00000070   0x2800             CMP      R0,#+0
   \   00000072   0xD0E7             BEQ.N    ??GUI__DispStringInRect_5
     63                  break;
     64              }
     65              /* Do the vertical alignment */
     66              switch (TextAlign & GUI_TA_VERTICAL) {
   \                     ??GUI__DispStringInRect_6: (+1)
   \   00000074   0x9806             LDR      R0,[SP, #+24]
   \   00000076   0xF000 0x000C      AND      R0,R0,#0xC
   \   0000007A   0x2804             CMP      R0,#+4
   \   0000007C   0xD00B             BEQ.N    ??GUI__DispStringInRect_7
   \   0000007E   0x2808             CMP      R0,#+8
   \   00000080   0xD002             BEQ.N    ??GUI__DispStringInRect_8
   \   00000082   0x280C             CMP      R0,#+12
   \   00000084   0xD012             BEQ.N    ??GUI__DispStringInRect_9
   \   00000086   0xE01D             B.N      ??GUI__DispStringInRect_3
     67          	  case GUI_TA_BASELINE:
     68                  y = r.y1 -NumLines * FontYSize+1;
   \                     ??GUI__DispStringInRect_8: (+1)
   \   00000088   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   0000008C   0xFB07 0x0019      MLS      R0,R7,R9,R0
   \   00000090   0xF100 0x0801      ADD      R8,R0,#+1
     69                  break;
   \   00000094   0xE016             B.N      ??GUI__DispStringInRect_3
     70          	  case GUI_TA_BOTTOM:
     71          	  //y = r.y1 -NumLines * FontYSize+1-23;
     72          		#if defined(TFT70)
     73          			y = r.y1 -NumLines * FontYSize+1-25;
     74          		#elif defined(TFT35)
     75          			y = r.y1 -NumLines * FontYSize+1-gCfgItems.btn_text_offset;//5;
   \                     ??GUI__DispStringInRect_7: (+1)
   \   00000096   0xF9BD 0x0006      LDRSH    R0,[SP, #+6]
   \   0000009A   0xFB07 0x0019      MLS      R0,R7,R9,R0
   \   0000009E   0x1C40             ADDS     R0,R0,#+1
   \   000000A0   0x....             LDR.N    R1,??DataTable0
   \   000000A2   0xF891 0x1294      LDRB     R1,[R1, #+660]
   \   000000A6   0xEBA0 0x0801      SUB      R8,R0,R1
     76          		#endif
     77          	  
     78                break;
   \   000000AA   0xE00B             B.N      ??GUI__DispStringInRect_3
     79          	  case GUI_TA_VCENTER:
     80          		  y = r.y0+(r.y1-r.y0+1 -NumLines * FontYSize) /2;
   \                     ??GUI__DispStringInRect_9: (+1)
   \   000000AC   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   000000B0   0xF9BD 0x1006      LDRSH    R1,[SP, #+6]
   \   000000B4   0x1A09             SUBS     R1,R1,R0
   \   000000B6   0x1C49             ADDS     R1,R1,#+1
   \   000000B8   0xFB07 0x1119      MLS      R1,R7,R9,R1
   \   000000BC   0xEB01 0x71D1      ADD      R1,R1,R1, LSR #+31
   \   000000C0   0xEB00 0x0861      ADD      R8,R0,R1, ASR #+1
     81                break;
     82          	  }
     83            }
     84            /* Output string */
     85            for (NumCharsRem = MaxNumChars, s = sOrg; NumCharsRem;) {
   \                     ??GUI__DispStringInRect_3: (+1)
   \   000000C4   0x9505             STR      R5,[SP, #+20]
   \                     ??GUI__DispStringInRect_10: (+1)
   \   000000C6   0x2C00             CMP      R4,#+0
   \   000000C8   0xD053             BEQ.N    ??GUI__DispStringInRect_11
     86              int xLineSize;
     87              LineLen = GUI__GetLineNumChars(s, NumCharsRem);
   \   000000CA   0x4621             MOV      R1,R4
   \   000000CC   0x9805             LDR      R0,[SP, #+20]
   \   000000CE   0x.... 0x....      BL       GUI__GetLineNumChars
   \   000000D2   0x4683             MOV      R11,R0
     88              NumCharsRem -= LineLen;
   \   000000D4   0xEBA4 0x040B      SUB      R4,R4,R11
     89              xLineSize = GUI__GetLineDistX(s, LineLen);
   \   000000D8   0x4659             MOV      R1,R11
   \   000000DA   0x9805             LDR      R0,[SP, #+20]
   \   000000DC   0x.... 0x....      BL       GUI__GetLineDistX
     90              switch (TextAlign & GUI_TA_HORIZONTAL) {
   \   000000E0   0x9906             LDR      R1,[SP, #+24]
   \   000000E2   0xF011 0x0113      ANDS     R1,R1,#0x13
   \   000000E6   0xD016             BEQ.N    ??GUI__DispStringInRect_12
   \   000000E8   0x2901             CMP      R1,#+1
   \   000000EA   0xD017             BEQ.N    ??GUI__DispStringInRect_13
   \   000000EC   0x2902             CMP      R1,#+2
   \   000000EE   0xD002             BEQ.N    ??GUI__DispStringInRect_14
   \   000000F0   0x2910             CMP      R1,#+16
   \   000000F2   0xD00B             BEQ.N    ??GUI__DispStringInRect_15
   \   000000F4   0xE016             B.N      ??GUI__DispStringInRect_16
     91              case GUI_TA_HCENTER:
     92                xLine = r.x0+(r.x1-r.x0-xLineSize)/2; break;
   \                     ??GUI__DispStringInRect_14: (+1)
   \   000000F6   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   000000FA   0xF9BD 0x2004      LDRSH    R2,[SP, #+4]
   \   000000FE   0x1A52             SUBS     R2,R2,R1
   \   00000100   0x1A12             SUBS     R2,R2,R0
   \   00000102   0xEB02 0x72D2      ADD      R2,R2,R2, LSR #+31
   \   00000106   0xEB01 0x0662      ADD      R6,R1,R2, ASR #+1
   \   0000010A   0xE00B             B.N      ??GUI__DispStringInRect_16
     93          		case GUI_CUSTOM_POS:
     94          			xLine = r.x0+71; break;			
   \                     ??GUI__DispStringInRect_15: (+1)
   \   0000010C   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   00000110   0xF101 0x0647      ADD      R6,R1,#+71
   \   00000114   0xE006             B.N      ??GUI__DispStringInRect_16
     95              case GUI_TA_LEFT:
     96                xLine = r.x0; break;
   \                     ??GUI__DispStringInRect_12: (+1)
   \   00000116   0xF9BD 0x6000      LDRSH    R6,[SP, #+0]
   \   0000011A   0xE003             B.N      ??GUI__DispStringInRect_16
     97              case GUI_TA_RIGHT:
     98                xLine = r.x1 -xLineSize + 1;
   \                     ??GUI__DispStringInRect_13: (+1)
   \   0000011C   0xF9BD 0x1004      LDRSH    R1,[SP, #+4]
   \   00000120   0x1A09             SUBS     R1,R1,R0
   \   00000122   0x1C4E             ADDS     R6,R1,#+1
     99              }
    100              rLine.x0 = GUI_Context.DispPosX = xLine;
   \                     ??GUI__DispStringInRect_16: (+1)
   \   00000124   0x....             LDR.N    R1,??DataTable0_1
   \   00000126   0x844E             STRH     R6,[R1, #+34]
   \   00000128   0x8C4A             LDRH     R2,[R1, #+34]
   \   0000012A   0xF8AD 0x2008      STRH     R2,[SP, #+8]
    101              rLine.x1 = rLine.x0 + xLineSize-1;
   \   0000012E   0x1880             ADDS     R0,R0,R2
   \   00000130   0x1E40             SUBS     R0,R0,#+1
   \   00000132   0xF8AD 0x000C      STRH     R0,[SP, #+12]
    102              rLine.y0 = GUI_Context.DispPosY = y;
   \   00000136   0xF8A1 0x8024      STRH     R8,[R1, #+36]
   \   0000013A   0x8C88             LDRH     R0,[R1, #+36]
   \   0000013C   0xF8AD 0x000A      STRH     R0,[SP, #+10]
    103              rLine.y1 = y + FontYSize-1;
   \   00000140   0xEB07 0x0008      ADD      R0,R7,R8
   \   00000144   0x1E40             SUBS     R0,R0,#+1
   \   00000146   0xF8AD 0x000E      STRH     R0,[SP, #+14]
    104              GUI__DispLine(s, LineLen, &rLine);
   \   0000014A   0xAA02             ADD      R2,SP,#+8
   \   0000014C   0x4659             MOV      R1,R11
   \   0000014E   0x9805             LDR      R0,[SP, #+20]
   \   00000150   0x.... 0x....      BL       GUI__DispLine
    105              s += GUI_UC__NumChars2NumBytes(s, LineLen);
   \   00000154   0x4659             MOV      R1,R11
   \   00000156   0x9805             LDR      R0,[SP, #+20]
   \   00000158   0x.... 0x....      BL       GUI_UC__NumChars2NumBytes
   \   0000015C   0x9905             LDR      R1,[SP, #+20]
   \   0000015E   0x1840             ADDS     R0,R0,R1
   \   00000160   0x9005             STR      R0,[SP, #+20]
    106              y += GUI_GetFontDistY();
   \   00000162   0x.... 0x....      BL       GUI_GetFontDistY
   \   00000166   0x4480             ADD      R8,R0,R8
    107              if (GUI__HandleEOLine(&s))
   \   00000168   0xA805             ADD      R0,SP,#+20
   \   0000016A   0x.... 0x....      BL       GUI__HandleEOLine
   \   0000016E   0x2800             CMP      R0,#+0
   \   00000170   0xD0A9             BEQ.N    ??GUI__DispStringInRect_10
    108                break;
    109            }
    110          }
   \                     ??GUI__DispStringInRect_11: (+1)
   \   00000172   0xB007             ADD      SP,SP,#+28
   \   00000174   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    111          
    112          /*********************************************************************
    113          *
    114          *       GUI_DispStringInRectMax
    115          */
    116          #if (GUI_WINSUPPORT)

   \                                 In section .text, align 2, keep-with-next
    117          void GUI_DispStringInRectMax(const char GUI_UNI_PTR *s, GUI_RECT* pRect, int TextAlign, int MaxLen) {
   \                     GUI_DispStringInRectMax: (+1)
   \   00000000   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4616             MOV      R6,R2
   \   0000000A   0x461F             MOV      R7,R3
    118            if (s) {
   \   0000000C   0x2C00             CMP      R4,#+0
   \   0000000E   0xD01B             BEQ.N    ??GUI_DispStringInRectMax_0
    119              const GUI_RECT *pOldClipRect = NULL;
   \   00000010   0xF04F 0x0800      MOV      R8,#+0
    120              GUI_RECT r;
    121              GUI_LOCK();
    122              if (pRect) {
   \   00000014   0x2D00             CMP      R5,#+0
   \   00000016   0xD00E             BEQ.N    ??GUI_DispStringInRectMax_1
    123                pOldClipRect = WM_SetUserClipRect(pRect);
   \   00000018   0x4628             MOV      R0,R5
   \   0000001A   0x.... 0x....      BL       WM_SetUserClipRect
   \   0000001E   0x4680             MOV      R8,R0
    124                if (pOldClipRect) {
   \   00000020   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000024   0xD007             BEQ.N    ??GUI_DispStringInRectMax_1
    125                  GUI__IntersectRects(&r, pRect, pOldClipRect);
   \   00000026   0x4642             MOV      R2,R8
   \   00000028   0x4629             MOV      R1,R5
   \   0000002A   0xA800             ADD      R0,SP,#+0
   \   0000002C   0x.... 0x....      BL       GUI__IntersectRects
    126                  WM_SetUserClipRect(&r);
   \   00000030   0xA800             ADD      R0,SP,#+0
   \   00000032   0x.... 0x....      BL       WM_SetUserClipRect
    127                }
    128              }
    129              GUI__DispStringInRect(s, pRect, TextAlign, MaxLen);
   \                     ??GUI_DispStringInRectMax_1: (+1)
   \   00000036   0x463B             MOV      R3,R7
   \   00000038   0x4632             MOV      R2,R6
   \   0000003A   0x4629             MOV      R1,R5
   \   0000003C   0x4620             MOV      R0,R4
   \   0000003E   0x.... 0x....      BL       GUI__DispStringInRect
    130              WM_SetUserClipRect(pOldClipRect);
   \   00000042   0x4640             MOV      R0,R8
   \   00000044   0x.... 0x....      BL       WM_SetUserClipRect
    131              GUI_UNLOCK();
    132            }
    133          }
   \                     ??GUI_DispStringInRectMax_0: (+1)
   \   00000048   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    134          
    135          #else
    136          
    137          void GUI_DispStringInRectMax(const char GUI_UNI_PTR *s, GUI_RECT* pRect, int TextAlign, int MaxLen) {
    138            GUI_RECT Rect_Old, r;
    139            if (s && pRect) {
    140              GUI_LOCK();
    141              Rect_Old = GUI_Context.ClipRect;
    142              GUI__IntersectRects(&r, pRect, &Rect_Old);
    143              LCD_SetClipRectEx(&r);
    144              GUI__DispStringInRect(s, pRect, TextAlign, MaxLen);
    145              LCD_SetClipRectEx(&Rect_Old);
    146              GUI_UNLOCK();
    147            }
    148          }
    149          #endif
    150          
    151          /*********************************************************************
    152          *
    153          *       GUI_DispStringInRect
    154          */

   \                                 In section .text, align 2, keep-with-next
    155          void GUI_DispStringInRect(const char GUI_UNI_PTR *s, GUI_RECT* pRect, int TextAlign) {
    156            GUI_DispStringInRectMax(s, pRect, TextAlign, 0x7fff);
   \                     GUI_DispStringInRect: (+1)
   \   00000000   0xF647 0x73FF      MOVW     R3,#+32767
   \   00000004   0x....             B.N      GUI_DispStringInRectMax
    157          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     GUI_Context
    158          
    159          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   GUI_DispStringInRect
         0   -> GUI_DispStringInRectMax
      32   GUI_DispStringInRectMax
        32   -> GUI__DispStringInRect
        32   -> GUI__IntersectRects
        32   -> WM_SetUserClipRect
      64   GUI__DispStringInRect
        64   -> GUI_GetClientRect
        64   -> GUI_GetFontDistY
        64   -> GUI_GetFontSizeY
        64   -> GUI_UC__NumChars2NumBytes
        64   -> GUI__DispLine
        64   -> GUI__GetLineDistX
        64   -> GUI__GetLineNumChars
        64   -> GUI__HandleEOLine
        64   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       6  GUI_DispStringInRect
      76  GUI_DispStringInRectMax
     376  GUI__DispStringInRect

 
 466 bytes in section .text
 
 466 bytes of CODE memory

Errors: none
Warnings: 2
