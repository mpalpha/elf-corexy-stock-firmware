###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:12
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\WIDGET_Effect_Simple.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\WIDGET_Effect_Simple.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\WIDGET_Effect_Simple.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WIDGET_Effect_Simple.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\WIDGET_Effect_Simple.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WIDGET_Effect_Simple.c
     16          Purpose     : Effect routines
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stdlib.h>
     21          #include <string.h>
     22          
     23          #include "WIDGET.h"
     24          #include "GUIDebug.h"
     25          #include "GUI.h"
     26          #include "GUI_Protected.h"
     27          #include "WM_Intern.h"
     28          
     29          #if GUI_WINSUPPORT
     30          
     31          /*********************************************************************
     32          *
     33          *       Static routines
     34          *
     35          **********************************************************************
     36          */
     37          /*********************************************************************
     38          *
     39          *       _WIDGET_EFFECT_Simple_DrawUpRect
     40          */

   \                                 In section .text, align 2, keep-with-next
     41          static void _WIDGET_EFFECT_Simple_DrawUpRect(const GUI_RECT* pRect) {
   \                     _WIDGET_EFFECT_Simple_DrawUpRect: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB092             SUB      SP,SP,#+72
   \   00000004   0x4604             MOV      R4,R0
     42            GUI_CONTEXT Context;
     43            GUI_SaveContext(&Context);
   \   00000006   0xA800             ADD      R0,SP,#+0
   \   00000008   0x.... 0x....      BL       GUI_SaveContext_W
     44            LCD_SetColor(GUI_BLACK);
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      BL       LCD_SetColor
     45            GUI_DrawRect(pRect->x0, pRect->y0, pRect->x1, pRect->y1);          /* Draw rectangle around it */
   \   00000012   0xF9B4 0x3006      LDRSH    R3,[R4, #+6]
   \   00000016   0xF9B4 0x2004      LDRSH    R2,[R4, #+4]
   \   0000001A   0xF9B4 0x1002      LDRSH    R1,[R4, #+2]
   \   0000001E   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000022   0x.... 0x....      BL       GUI_DrawRect
     46            GUI_RestoreContext(&Context);
   \   00000026   0xA800             ADD      R0,SP,#+0
   \   00000028   0x.... 0x....      BL       GUI_RestoreContext
     47          }
   \   0000002C   0xB012             ADD      SP,SP,#+72
   \   0000002E   0xBD10             POP      {R4,PC}          ;; return
     48          
     49          /*********************************************************************
     50          *
     51          *       _WIDGET_EFFECT_Simple_DrawUp
     52          */

   \                                 In section .text, align 2, keep-with-next
     53          static void _WIDGET_EFFECT_Simple_DrawUp(void) {
   \                     _WIDGET_EFFECT_Simple_DrawUp: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
     54            GUI_RECT r;
     55            WM_GetClientRect(&r);
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x.... 0x....      BL       WM_GetClientRect
     56            _WIDGET_EFFECT_Simple_DrawUpRect(&r);
   \   0000000A   0xA800             ADD      R0,SP,#+0
   \   0000000C   0x.... 0x....      BL       _WIDGET_EFFECT_Simple_DrawUpRect
     57          }
   \   00000010   0xBD07             POP      {R0-R2,PC}       ;; return
     58          
     59          /*********************************************************************
     60          *
     61          *       _WIDGET_EFFECT_Simple_DrawDownRect
     62          */

   \                                 In section .text, align 2, keep-with-next
     63          static void _WIDGET_EFFECT_Simple_DrawDownRect(const GUI_RECT* pRect) {
   \                     _WIDGET_EFFECT_Simple_DrawDownRect: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB092             SUB      SP,SP,#+72
   \   00000004   0x4604             MOV      R4,R0
     64            GUI_CONTEXT Context;
     65            GUI_SaveContext(&Context);
   \   00000006   0xA800             ADD      R0,SP,#+0
   \   00000008   0x.... 0x....      BL       GUI_SaveContext_W
     66            LCD_SetColor(GUI_BLACK);
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      BL       LCD_SetColor
     67            GUI_DrawRect(pRect->x0, pRect->y0, pRect->x1, pRect->y1);          /* Draw rectangle around it */
   \   00000012   0xF9B4 0x3006      LDRSH    R3,[R4, #+6]
   \   00000016   0xF9B4 0x2004      LDRSH    R2,[R4, #+4]
   \   0000001A   0xF9B4 0x1002      LDRSH    R1,[R4, #+2]
   \   0000001E   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000022   0x.... 0x....      BL       GUI_DrawRect
     68            GUI_RestoreContext(&Context);
   \   00000026   0xA800             ADD      R0,SP,#+0
   \   00000028   0x.... 0x....      BL       GUI_RestoreContext
     69          }
   \   0000002C   0xB012             ADD      SP,SP,#+72
   \   0000002E   0xBD10             POP      {R4,PC}          ;; return
     70          
     71          /*********************************************************************
     72          *
     73          *       _WIDGET_EFFECT_Simple_DrawDown
     74          */

   \                                 In section .text, align 2, keep-with-next
     75          static void _WIDGET_EFFECT_Simple_DrawDown(void) {
   \                     _WIDGET_EFFECT_Simple_DrawDown: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
     76            GUI_RECT r;
     77            WM_GetClientRect(&r);
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x.... 0x....      BL       WM_GetClientRect
     78            _WIDGET_EFFECT_Simple_DrawDownRect(&r);
   \   0000000A   0xA800             ADD      R0,SP,#+0
   \   0000000C   0x.... 0x....      BL       _WIDGET_EFFECT_Simple_DrawDownRect
     79          }
   \   00000010   0xBD07             POP      {R0-R2,PC}       ;; return
     80          
     81          /*********************************************************************
     82          *
     83          *       _WIDGET_EFFECT_Simple_GetRect
     84          */

   \                                 In section .text, align 2, keep-with-next
     85          static void _WIDGET_EFFECT_Simple_GetRect(GUI_RECT* pRect) {
   \                     _WIDGET_EFFECT_Simple_GetRect: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
     86            WM_GetClientRect(pRect);
   \   00000004   0x.... 0x....      BL       WM_GetClientRect
     87            GUI__ReduceRect(pRect, pRect, 1);
   \   00000008   0x2201             MOVS     R2,#+1
   \   0000000A   0x4621             MOV      R1,R4
   \   0000000C   0x4620             MOV      R0,R4
   \   0000000E   0xE8BD 0x4010      POP      {R4,LR}
   \   00000012   0x.... 0x....      B.W      GUI__ReduceRect
     88          }
     89          
     90          /*********************************************************************
     91          *
     92          *       Public routines
     93          *
     94          **********************************************************************
     95          */
     96          /*********************************************************************
     97          *
     98          *       WIDGET_SetDefaultEffect_Simple
     99          */

   \                                 In section .text, align 2, keep-with-next
    100          void WIDGET_SetDefaultEffect_Simple(void) {
    101            WIDGET_SetDefaultEffect(&WIDGET_Effect_Simple);
   \                     WIDGET_SetDefaultEffect_Simple: (+1)
   \   00000000   0x.... 0x....      ADR.W    R0,WIDGET_Effect_Simple
   \   00000004   0x.... 0x....      B.W      WIDGET_SetDefaultEffect
    102          }
    103          
    104          /*********************************************************************
    105          *
    106          *       Effect tables --- Mainly function pointers
    107          *
    108          **********************************************************************
    109          */
    110          

   \                                 In section .text, align 4, keep-with-next
    111          const WIDGET_EFFECT WIDGET_Effect_Simple = {
   \                     WIDGET_Effect_Simple:
   \   00000000   0x........         DC32 _WIDGET_EFFECT_Simple_DrawUp, _WIDGET_EFFECT_Simple_DrawDown
   \              0x........   
   \   00000008   0x........         DC32 _WIDGET_EFFECT_Simple_DrawUpRect
   \   0000000C   0x........         DC32 _WIDGET_EFFECT_Simple_DrawDownRect, _WIDGET_EFFECT_Simple_GetRect
   \              0x........   
   \   00000014   0x00000001         DC32 1
    112            _WIDGET_EFFECT_Simple_DrawUp,
    113            _WIDGET_EFFECT_Simple_DrawDown,
    114            _WIDGET_EFFECT_Simple_DrawUpRect,
    115            _WIDGET_EFFECT_Simple_DrawDownRect,
    116            _WIDGET_EFFECT_Simple_GetRect,
    117            1
    118          };
    119          
    120          #else                            /* Avoid problems with empty object modules */
    121            void WIDGET_Effect_Simple_C(void) {}
    122          #endif /* GUI_WINSUPPORT */
    123          
    124          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   WIDGET_SetDefaultEffect_Simple
         0   -> WIDGET_SetDefaultEffect
      16   _WIDGET_EFFECT_Simple_DrawDown
        16   -> WM_GetClientRect
        16   -> _WIDGET_EFFECT_Simple_DrawDownRect
      80   _WIDGET_EFFECT_Simple_DrawDownRect
        80   -> GUI_DrawRect
        80   -> GUI_RestoreContext
        80   -> GUI_SaveContext_W
        80   -> LCD_SetColor
      16   _WIDGET_EFFECT_Simple_DrawUp
        16   -> WM_GetClientRect
        16   -> _WIDGET_EFFECT_Simple_DrawUpRect
      80   _WIDGET_EFFECT_Simple_DrawUpRect
        80   -> GUI_DrawRect
        80   -> GUI_RestoreContext
        80   -> GUI_SaveContext_W
        80   -> LCD_SetColor
       8   _WIDGET_EFFECT_Simple_GetRect
         0   -> GUI__ReduceRect
         8   -> WM_GetClientRect


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      24  WIDGET_Effect_Simple
       8  WIDGET_SetDefaultEffect_Simple
      18  _WIDGET_EFFECT_Simple_DrawDown
      48  _WIDGET_EFFECT_Simple_DrawDownRect
      18  _WIDGET_EFFECT_Simple_DrawUp
      48  _WIDGET_EFFECT_Simple_DrawUpRect
      22  _WIDGET_EFFECT_Simple_GetRect

 
 186 bytes in section .text
 
 186 bytes of CODE memory

Errors: none
Warnings: none
