###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:07
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\SCROLLBAR_Defaults.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\SCROLLBAR_Defaults.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\SCROLLBAR_Defaults.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\SCROLLBAR_Defaults.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Widget\SCROLLBAR_Defaults.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : SCROLLBAR_Defaults.c
     16          Purpose     : SCROLLBAR, optional routine
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "SCROLLBAR_Private.h"
     21          
     22          #if GUI_WINSUPPORT
     23          
     24          /*********************************************************************
     25          *
     26          *       SCROLLBAR_GetDefaultWidth
     27          */

   \                                 In section .text, align 2, keep-with-next
     28          int       SCROLLBAR_GetDefaultWidth(void) {  return SCROLLBAR__DefaultWidth; }
   \                     SCROLLBAR_GetDefaultWidth: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable5
   \   00000002   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000006   0x4770             BX       LR               ;; return
     29          
     30          /*********************************************************************
     31          *
     32          *       SCROLLBAR_GetDefaultBkColor
     33          */

   \                                 In section .text, align 2, keep-with-next
     34          GUI_COLOR SCROLLBAR_GetDefaultBkColor(unsigned int Index) {
     35            if (Index < GUI_COUNTOF(SCROLLBAR__aDefaultBkColor)) {
   \                     SCROLLBAR_GetDefaultBkColor: (+1)
   \   00000000   0x2802             CMP      R0,#+2
   \   00000002   0xD203             BCS.N    ??SCROLLBAR_GetDefaultBkColor_0
     36              return SCROLLBAR__aDefaultBkColor[Index];
   \   00000004   0x....             LDR.N    R1,??DataTable5_1
   \   00000006   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   0000000A   0x4770             BX       LR
     37            }
     38            return 0; 
   \                     ??SCROLLBAR_GetDefaultBkColor_0: (+1)
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x4770             BX       LR               ;; return
     39          }
     40          
     41          /*********************************************************************
     42          *
     43          *       SCROLLBAR_GetDefaultColor
     44          */

   \                                 In section .text, align 2, keep-with-next
     45          GUI_COLOR SCROLLBAR_GetDefaultColor(unsigned int Index) {
     46            if (Index < GUI_COUNTOF(SCROLLBAR__aDefaultColor)) {
   \                     SCROLLBAR_GetDefaultColor: (+1)
   \   00000000   0x2802             CMP      R0,#+2
   \   00000002   0xD203             BCS.N    ??SCROLLBAR_GetDefaultColor_0
     47              return SCROLLBAR__aDefaultColor[Index];
   \   00000004   0x....             LDR.N    R1,??DataTable5_2
   \   00000006   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   0000000A   0x4770             BX       LR
     48            }
     49            return 0; 
   \                     ??SCROLLBAR_GetDefaultColor_0: (+1)
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x4770             BX       LR               ;; return
     50          }
     51          
     52          /*********************************************************************
     53          *
     54          *       SCROLLBAR_SetDefaultWidth
     55          */

   \                                 In section .text, align 2, keep-with-next
     56          int  SCROLLBAR_SetDefaultWidth(int DefaultWidth) {
     57            int OldWidth = SCROLLBAR__DefaultWidth;
   \                     SCROLLBAR_SetDefaultWidth: (+1)
   \   00000000   0x....             LDR.N    R2,??DataTable5
   \   00000002   0xF9B2 0x1000      LDRSH    R1,[R2, #+0]
     58            SCROLLBAR__DefaultWidth = DefaultWidth;
   \   00000006   0x8010             STRH     R0,[R2, #+0]
     59            return OldWidth;
   \   00000008   0x4608             MOV      R0,R1
   \   0000000A   0x4770             BX       LR               ;; return
     60          }
     61          
     62          /*********************************************************************
     63          *
     64          *       SCROLLBAR_SetDefaultBkColor
     65          */

   \                                 In section .text, align 2, keep-with-next
     66          GUI_COLOR SCROLLBAR_SetDefaultBkColor(GUI_COLOR Color, unsigned int Index) {
     67            GUI_COLOR OldColor = 0;
     68            if (Index < GUI_COUNTOF(SCROLLBAR__aDefaultBkColor)) {
   \                     SCROLLBAR_SetDefaultBkColor: (+1)
   \   00000000   0x2902             CMP      R1,#+2
   \   00000002   0xD202             BCS.N    ??SCROLLBAR_SetDefaultBkColor_0
     69              SCROLLBAR__aDefaultBkColor[Index] = Color;
   \   00000004   0x....             LDR.N    R2,??DataTable5_1
   \   00000006   0xF842 0x0021      STR      R0,[R2, R1, LSL #+2]
     70            }
     71            return OldColor; 
   \                     ??SCROLLBAR_SetDefaultBkColor_0: (+1)
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x4770             BX       LR               ;; return
     72          }
     73          
     74          /*********************************************************************
     75          *
     76          *       SCROLLBAR_SetDefaultColor
     77          */

   \                                 In section .text, align 2, keep-with-next
     78          GUI_COLOR SCROLLBAR_SetDefaultColor(GUI_COLOR Color, unsigned int Index) {
     79            GUI_COLOR OldColor = 0;
     80            if (Index < GUI_COUNTOF(SCROLLBAR__aDefaultColor)) {
   \                     SCROLLBAR_SetDefaultColor: (+1)
   \   00000000   0x2902             CMP      R1,#+2
   \   00000002   0xD202             BCS.N    ??SCROLLBAR_SetDefaultColor_0
     81              SCROLLBAR__aDefaultColor[Index] = Color;
   \   00000004   0x....             LDR.N    R2,??DataTable5_2
   \   00000006   0xF842 0x0021      STR      R0,[R2, R1, LSL #+2]
     82            }
     83            return OldColor; 
   \                     ??SCROLLBAR_SetDefaultColor_0: (+1)
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x4770             BX       LR               ;; return
     84          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     SCROLLBAR__DefaultWidth

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     SCROLLBAR__aDefaultBkColor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     SCROLLBAR__aDefaultColor
     85          
     86          #else
     87            void SCROLLBAR_Defaults_c(void) {}    /* Avoid empty object files */
     88          #endif  /* #if GUI_WINSUPPORT */
     89          
     90          
     91          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   SCROLLBAR_GetDefaultBkColor
       0   SCROLLBAR_GetDefaultColor
       0   SCROLLBAR_GetDefaultWidth
       0   SCROLLBAR_SetDefaultBkColor
       0   SCROLLBAR_SetDefaultColor
       0   SCROLLBAR_SetDefaultWidth


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
      16  SCROLLBAR_GetDefaultBkColor
      16  SCROLLBAR_GetDefaultColor
       8  SCROLLBAR_GetDefaultWidth
      14  SCROLLBAR_SetDefaultBkColor
      14  SCROLLBAR_SetDefaultColor
      12  SCROLLBAR_SetDefaultWidth

 
 92 bytes in section .text
 
 92 bytes of CODE memory

Errors: none
Warnings: none
