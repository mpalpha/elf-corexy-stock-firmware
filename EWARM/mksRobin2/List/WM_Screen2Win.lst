###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:25
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_Screen2Win.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_Screen2Win.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\WM_Screen2Win.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WM_Screen2Win.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_Screen2Win.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_Screen2hWin.c
     16          Purpose     : Windows manager, add. module
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "WM_Intern.h"
     21          
     22          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     23          
     24          /*********************************************************************
     25          *
     26          *       Static code
     27          *
     28          **********************************************************************
     29          */
     30          /*********************************************************************
     31          *
     32          *       _Screen2hWin
     33          
     34            This routine is recursive.
     35            It checks if the given coordinates are in the window or a decendant.
     36            Returns:
     37            0:   If coordinates are neither in the given window nor a decendent
     38            !=0  Handle of the topmost visible decendent in which the given
     39                 coordinate falls.
     40          
     41          */

   \                                 In section .text, align 2, keep-with-next
     42          static WM_HWIN _Screen2hWin(WM_HWIN hWin, WM_HWIN hStop, int x, int y) {
   \                     _Screen2hWin: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4616             MOV      R6,R2
   \   0000000A   0x461F             MOV      R7,R3
     43            WM_Obj* pWin = WM_HANDLE2PTR(hWin);
   \   0000000C   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000010   0x4680             MOV      R8,R0
     44            WM_HWIN hChild;
     45            WM_HWIN hHit;
     46            /* First check if the  coordinates are in the given window. If not, return 0 */
     47            if (WM__IsInWindow(pWin, x, y) == 0) {
   \   00000012   0x463A             MOV      R2,R7
   \   00000014   0x4631             MOV      R1,R6
   \   00000016   0x.... 0x....      BL       WM__IsInWindow
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD101             BNE.N    ??_Screen2hWin_0
     48              return 0;
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0xE017             B.N      ??_Screen2hWin_1
     49            }
     50            /* If the coordinates are in a child, search deeper ... */
     51            for (hChild = pWin->hFirstChild; hChild && (hChild != hStop); ) {
   \                     ??_Screen2hWin_0: (+1)
   \   00000022   0xF9B8 0x8018      LDRSH    R8,[R8, #+24]
   \   00000026   0xE00E             B.N      ??_Screen2hWin_2
     52              WM_Obj* pChild = WM_HANDLE2PTR(hChild);
   \                     ??_Screen2hWin_3: (+1)
   \   00000028   0x4640             MOV      R0,R8
   \   0000002A   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000002E   0x4681             MOV      R9,R0
     53              if ((hHit = _Screen2hWin(hChild, hStop, x, y)) != 0) {
   \   00000030   0x463B             MOV      R3,R7
   \   00000032   0x4632             MOV      R2,R6
   \   00000034   0x4629             MOV      R1,R5
   \   00000036   0x4640             MOV      R0,R8
   \   00000038   0xF7FF 0xFFE2      BL       _Screen2hWin
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0xD000             BEQ.N    ??_Screen2hWin_4
     54                hWin = hHit;        /* Found a window */
   \   00000040   0x460C             MOV      R4,R1
     55              }
     56              hChild = pChild->hNext;
   \                     ??_Screen2hWin_4: (+1)
   \   00000042   0xF9B9 0x801A      LDRSH    R8,[R9, #+26]
     57            }
   \                     ??_Screen2hWin_2: (+1)
   \   00000046   0xF1B8 0x0F00      CMP      R8,#+0
   \   0000004A   0xD001             BEQ.N    ??_Screen2hWin_5
   \   0000004C   0x45A8             CMP      R8,R5
   \   0000004E   0xD1EB             BNE.N    ??_Screen2hWin_3
     58            return hWin;            /* No Child affected ... The parent is the right one */
   \                     ??_Screen2hWin_5: (+1)
   \   00000050   0x4620             MOV      R0,R4
   \                     ??_Screen2hWin_1: (+1)
   \   00000052   0xE8BD 0x83F2      POP      {R1,R4-R9,PC}    ;; return
     59          }
     60          
     61          /*********************************************************************
     62          *
     63          *       Public code
     64          *
     65          **********************************************************************
     66          */
     67          /*********************************************************************
     68          *
     69          *       WM__IsInWindow
     70          */

   \                                 In section .text, align 2, keep-with-next
     71          int WM__IsInWindow(WM_Obj * pWin, int x, int y) {
     72            if (   (pWin->Status & WM_SF_ISVIS)
     73                && (x >= pWin->Rect.x0)
     74                && (x <= pWin->Rect.x1)
     75                && (y >= pWin->Rect.y0)
     76                && (y <= pWin->Rect.y1))
   \                     WM__IsInWindow: (+1)
   \   00000000   0x7F03             LDRB     R3,[R0, #+28]
   \   00000002   0x079B             LSLS     R3,R3,#+30
   \   00000004   0xD511             BPL.N    ??WM__IsInWindow_0
   \   00000006   0xF9B0 0x3000      LDRSH    R3,[R0, #+0]
   \   0000000A   0x4299             CMP      R1,R3
   \   0000000C   0xDB0D             BLT.N    ??WM__IsInWindow_0
   \   0000000E   0xF9B0 0x3004      LDRSH    R3,[R0, #+4]
   \   00000012   0x428B             CMP      R3,R1
   \   00000014   0xDB09             BLT.N    ??WM__IsInWindow_0
   \   00000016   0xF9B0 0x1002      LDRSH    R1,[R0, #+2]
   \   0000001A   0x428A             CMP      R2,R1
   \   0000001C   0xDB05             BLT.N    ??WM__IsInWindow_0
   \   0000001E   0xF9B0 0x0006      LDRSH    R0,[R0, #+6]
   \   00000022   0x4290             CMP      R0,R2
   \   00000024   0xDB01             BLT.N    ??WM__IsInWindow_0
     77            {
     78              return 1;
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0x4770             BX       LR
     79            }
     80            return 0;
   \                     ??WM__IsInWindow_0: (+1)
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x4770             BX       LR               ;; return
     81          }
     82          
     83          /*********************************************************************
     84          *
     85          *       WM_Screen2hWin
     86          */

   \                                 In section .text, align 2, keep-with-next
     87          WM_HWIN WM_Screen2hWin(int x, int y) {
     88            WM_HWIN r;
     89            WM_LOCK();
     90            r = _Screen2hWin(WM__FirstWin, 0, x, y);
     91            WM_UNLOCK();
     92            return r;
   \                     WM_Screen2hWin: (+1)
   \   00000000   0x460B             MOV      R3,R1
   \   00000002   0x4602             MOV      R2,R0
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x....             LDR.N    R0,??DataTable1
   \   00000008   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000000C   0x....             B.N      _Screen2hWin
     93          }
     94          
     95          /*********************************************************************
     96          *
     97          *       WM_Screen2hWinEx
     98          */

   \                                 In section .text, align 2, keep-with-next
     99          WM_HWIN WM_Screen2hWinEx(WM_HWIN hStop, int x, int y) {
    100            WM_HWIN r;
    101            WM_LOCK();
    102            r = _Screen2hWin(WM__FirstWin, hStop, x, y);
    103            WM_UNLOCK();
    104            return r;
   \                     WM_Screen2hWinEx: (+1)
   \   00000000   0x4613             MOV      R3,R2
   \   00000002   0x460A             MOV      R2,R1
   \   00000004   0x4601             MOV      R1,R0
   \   00000006   0x....             LDR.N    R0,??DataTable1
   \   00000008   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000000C   0x....             B.N      _Screen2hWin
    105          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     WM__FirstWin
    106          
    107          #else                                       /* Avoid empty object files */
    108            void WM_Screen2Win(void) {}
    109          #endif   /* GUI_WINSUPPORT */
    110          
    111          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   WM_Screen2hWin
         0   -> _Screen2hWin
       0   WM_Screen2hWinEx
         0   -> _Screen2hWin
       0   WM__IsInWindow
      32   _Screen2hWin
        32   -> GUI_ALLOC_h2p
        32   -> WM__IsInWindow
        32   -> _Screen2hWin


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      14  WM_Screen2hWin
      14  WM_Screen2hWinEx
      46  WM__IsInWindow
      86  _Screen2hWin

 
 164 bytes in section .text
 
 164 bytes of CODE memory

Errors: none
Warnings: none
