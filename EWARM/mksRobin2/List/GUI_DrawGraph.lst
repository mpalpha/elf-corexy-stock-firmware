###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  16:59:42
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_DrawGraph.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_DrawGraph.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\GUI_DrawGraph.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\GUI_DrawGraph.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\Core\GUI_DrawGraph.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_DrawPolyline.c
     16          Purpose     : Implementation of GUI_DrawPolyline
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include <stddef.h>           /* needed for definition of NULL */
     21          #include "GUI_Protected.h"
     22          
     23          /*********************************************************************
     24          *
     25          *       Static code
     26          *
     27          **********************************************************************
     28          */
     29          /*********************************************************************
     30          *
     31          *       _DrawGraph
     32          */

   \                                 In section .text, align 2, keep-with-next
     33          static void _DrawGraph(I16 *pay, int NumPoints, int xOff, int yOff) {
   \                     _DrawGraph: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB083             SUB      SP,SP,#+12
   \   00000006   0x4604             MOV      R4,R0
   \   00000008   0x460F             MOV      R7,R1
   \   0000000A   0x4615             MOV      R5,R2
   \   0000000C   0x461E             MOV      R6,R3
   \   0000000E   0x....             LDR.N    R0,??DataTable1
   \   00000010   0x6900             LDR      R0,[R0, #+16]
   \   00000012   0xF9B0 0x1002      LDRSH    R1,[R0, #+2]
   \   00000016   0x9101             STR      R1,[SP, #+4]
     34            int i;
     35            int y0, y1;
     36            int yClip0, yClip1;
     37            /* Perform high level clipping in x */
     38            yClip0 = GUI_Context.pClipRect_HL->y0;
     39            yClip1 = GUI_Context.pClipRect_HL->y1;
   \   00000018   0xF9B0 0x1006      LDRSH    R1,[R0, #+6]
   \   0000001C   0x9100             STR      R1,[SP, #+0]
     40            i=0;
   \   0000001E   0xF04F 0x0800      MOV      R8,#+0
     41            if (GUI_Context.pClipRect_HL) {
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD00D             BEQ.N    ??_DrawGraph_0
   \   00000026   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \   0000002A   0x428D             CMP      R5,R1
   \   0000002C   0xDA01             BGE.N    ??_DrawGraph_1
     42              if (xOff < GUI_Context.pClipRect_HL->x0)
     43                i = GUI_Context.pClipRect_HL->x0 - xOff;
   \   0000002E   0xEBA1 0x0805      SUB      R8,R1,R5
   \                     ??_DrawGraph_1: (+1)
   \   00000032   0xF9B0 0x0004      LDRSH    R0,[R0, #+4]
   \   00000036   0x1979             ADDS     R1,R7,R5
   \   00000038   0x1E49             SUBS     R1,R1,#+1
   \   0000003A   0x4288             CMP      R0,R1
   \   0000003C   0xDA01             BGE.N    ??_DrawGraph_0
     44              if (xOff+NumPoints-1 > GUI_Context.pClipRect_HL->x1)
     45                NumPoints = GUI_Context.pClipRect_HL->x1 - xOff + 1;
   \   0000003E   0x1B40             SUBS     R0,R0,R5
   \   00000040   0x1C47             ADDS     R7,R0,#+1
     46            }
     47            /* Start drawing if there is something left to do after x-clipping */
     48            if (i < NumPoints) {
   \                     ??_DrawGraph_0: (+1)
   \   00000042   0x45B8             CMP      R8,R7
   \   00000044   0xDA36             BGE.N    ??_DrawGraph_2
     49              y0 = *(pay + i++) + yOff;
   \   00000046   0xF934 0x0018      LDRSH    R0,[R4, R8, LSL #+1]
   \   0000004A   0x1831             ADDS     R1,R6,R0
   \   0000004C   0xF108 0x0801      ADD      R8,R8,#+1
   \   00000050   0xE00B             B.N      ??_DrawGraph_3
     50              /* Iterate */
     51              for (; i < NumPoints; i++) {
     52                /* Perform high level clipping in y */
     53                y1 = *(pay + i) + yOff;
     54                if ((y0 >= yClip0) || (y1 >= yClip0)) {
     55                  if ((y0 <= yClip1) || (y1 <= yClip1)) {
     56                    int y01;
     57                    y01 = (y1 + y0) / 2;
     58                    if (y0 <= y1) {
     59                      LCD_DrawVLine(i + xOff - 1, y0, y01);
     60                      LCD_DrawVLine(i + xOff, y01, y1);
     61                    } else {
     62                      LCD_DrawVLine(i + xOff - 1, y01, y0);
   \                     ??_DrawGraph_4: (+1)
   \   00000052   0x460A             MOV      R2,R1
   \   00000054   0x4649             MOV      R1,R9
   \   00000056   0x.... 0x....      BL       LCD_DrawVLine
     63                      LCD_DrawVLine(i + xOff, y1, y01);
   \   0000005A   0x464A             MOV      R2,R9
   \   0000005C   0x4659             MOV      R1,R11
   \   0000005E   0x4650             MOV      R0,R10
   \   00000060   0x.... 0x....      BL       LCD_DrawVLine
     64                    }
     65                  }
     66                }
     67                y0 = y1;
   \                     ??_DrawGraph_5: (+1)
   \   00000064   0x4659             MOV      R1,R11
   \   00000066   0xF108 0x0801      ADD      R8,R8,#+1
   \                     ??_DrawGraph_3: (+1)
   \   0000006A   0x45B8             CMP      R8,R7
   \   0000006C   0xDA22             BGE.N    ??_DrawGraph_2
   \   0000006E   0xF934 0x0018      LDRSH    R0,[R4, R8, LSL #+1]
   \   00000072   0xEB06 0x0B00      ADD      R11,R6,R0
   \   00000076   0x9801             LDR      R0,[SP, #+4]
   \   00000078   0x4281             CMP      R1,R0
   \   0000007A   0xDA01             BGE.N    ??_DrawGraph_6
   \   0000007C   0x4583             CMP      R11,R0
   \   0000007E   0xDBF1             BLT.N    ??_DrawGraph_5
   \                     ??_DrawGraph_6: (+1)
   \   00000080   0x9800             LDR      R0,[SP, #+0]
   \   00000082   0x4288             CMP      R0,R1
   \   00000084   0xDA01             BGE.N    ??_DrawGraph_7
   \   00000086   0x4558             CMP      R0,R11
   \   00000088   0xDBEC             BLT.N    ??_DrawGraph_5
   \                     ??_DrawGraph_7: (+1)
   \   0000008A   0xEB01 0x000B      ADD      R0,R1,R11
   \   0000008E   0xEB00 0x70D0      ADD      R0,R0,R0, LSR #+31
   \   00000092   0xEA4F 0x0960      ASR      R9,R0,#+1
   \   00000096   0xEB05 0x0A08      ADD      R10,R5,R8
   \   0000009A   0xF1AA 0x0001      SUB      R0,R10,#+1
   \   0000009E   0x458B             CMP      R11,R1
   \   000000A0   0xDBD7             BLT.N    ??_DrawGraph_4
   \   000000A2   0x464A             MOV      R2,R9
   \   000000A4   0x.... 0x....      BL       LCD_DrawVLine
   \   000000A8   0x465A             MOV      R2,R11
   \   000000AA   0x4649             MOV      R1,R9
   \   000000AC   0x4650             MOV      R0,R10
   \   000000AE   0x.... 0x....      BL       LCD_DrawVLine
   \   000000B2   0xE7D7             B.N      ??_DrawGraph_5
     68              }
     69            }
     70          }
   \                     ??_DrawGraph_2: (+1)
   \   000000B4   0xE8BD 0x8FF7      POP      {R0-R2,R4-R11,PC}  ;; return
     71          
     72          /*********************************************************************
     73          *
     74          *       Public code
     75          *
     76          **********************************************************************
     77          */
     78          /*********************************************************************
     79          *
     80          *       GUI_DrawGraph
     81          */  

   \                                 In section .text, align 2, keep-with-next
     82          void GUI_DrawGraph(I16 *pay, int NumPoints, int x0, int y0) {
   \                     GUI_DrawGraph: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     83            GUI_LOCK();
     84            #if (GUI_WINSUPPORT)
     85              WM_ADDORG(x0,y0);
   \   00000006   0x....             LDR.N    R0,??DataTable1
   \   00000008   0x6C01             LDR      R1,[R0, #+64]
   \   0000000A   0x188E             ADDS     R6,R1,R2
   \   0000000C   0x6C40             LDR      R0,[R0, #+68]
   \   0000000E   0x18C7             ADDS     R7,R0,R3
     86              WM_ITERATE_START(NULL); {
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       WM__InitIVRSearch
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD009             BEQ.N    ??GUI_DrawGraph_0
     87            #endif
     88            _DrawGraph(pay, NumPoints, x0, y0);
   \                     ??GUI_DrawGraph_1: (+1)
   \   0000001A   0x463B             MOV      R3,R7
   \   0000001C   0x4632             MOV      R2,R6
   \   0000001E   0x4629             MOV      R1,R5
   \   00000020   0x4620             MOV      R0,R4
   \   00000022   0x.... 0x....      BL       _DrawGraph
     89            #if (GUI_WINSUPPORT)
     90              } WM_ITERATE_END();
   \   00000026   0x.... 0x....      BL       WM__GetNextIVR
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD1F5             BNE.N    ??GUI_DrawGraph_1
     91            #endif
     92            GUI_UNLOCK();
     93          }
   \                     ??GUI_DrawGraph_0: (+1)
   \   0000002E   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     GUI_Context
     94          
     95          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   GUI_DrawGraph
        24   -> WM__GetNextIVR
        24   -> WM__InitIVRSearch
        24   -> _DrawGraph
      48   _DrawGraph
        48   -> LCD_DrawVLine


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      48  GUI_DrawGraph
     184  _DrawGraph

 
 236 bytes in section .text
 
 236 bytes of CODE memory

Errors: none
Warnings: none
