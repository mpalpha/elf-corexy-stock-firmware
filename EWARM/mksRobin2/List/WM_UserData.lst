###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:29
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_UserData.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_UserData.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/List\WM_UserData.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WM_UserData.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_ºŒ∫Ã»˝Œ¨\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_UserData.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_UserData.c
     16          Purpose     : Implementation of WM_xxxUserData
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "WM_Intern.h"
     21          #include <string.h>           /* for memcpy, memset */
     22          
     23          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     24          
     25          /*********************************************************************
     26          *
     27          *       Static code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       _Min
     34          */

   \                                 In section .text, align 2, keep-with-next
     35          static int Min(int v0, int v1) {
     36            return (v0 < v1) ? v0 : v1;
   \                     Min: (+1)
   \   00000000   0x4288             CMP      R0,R1
   \   00000002   0xDD00             BLE.N    ??Min_0
   \   00000004   0x4608             MOV      R0,R1
   \                     ??Min_0: (+1)
   \   00000006   0x4770             BX       LR               ;; return
     37          }
     38          
     39          /*********************************************************************
     40          *
     41          *       _CalcNumBytes
     42          */

   \                                 In section .text, align 2, keep-with-next
     43          static int _CalcNumBytes(WM_HWIN hWin, int NumBytes) {
   \                     _CalcNumBytes: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x460C             MOV      R4,R1
     44            return Min(GUI_ALLOC_GetSize(hWin) - sizeof(WM_Obj), NumBytes);
   \   00000004   0x.... 0x....      BL       GUI_ALLOC_GetSize
   \   00000008   0x4621             MOV      R1,R4
   \   0000000A   0x3820             SUBS     R0,R0,#+32
   \   0000000C   0xE8BD 0x4010      POP      {R4,LR}
   \   00000010   0x....             B.N      Min
     45          }
     46          
     47          /*********************************************************************
     48          *
     49          *       Public code
     50          *
     51          **********************************************************************
     52          */
     53          /*********************************************************************
     54          *
     55          *       WM_GetUserData
     56          *
     57          *  Purpose
     58          *    Get the User data (extra bytes) associated with a window
     59          *    These bytes have typically been set using WM_SetUserData first.
     60          *    (If not, they are 0)
     61          *  Return value:
     62          *    Number of bytes fetched. (<= SizeofBuffer)
     63          */

   \                                 In section .text, align 2, keep-with-next
     64          int WM_GetUserData(WM_HWIN hWin, void* pDest, int NumBytes) {
   \                     WM_GetUserData: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
     65            if (hWin) {
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD00C             BEQ.N    ??WM_GetUserData_0
     66              WM_Obj *pWin;
     67              NumBytes = _CalcNumBytes(hWin, NumBytes);
   \   0000000C   0x4631             MOV      R1,R6
   \   0000000E   0x.... 0x....      BL       _CalcNumBytes
   \   00000012   0x4606             MOV      R6,R0
     68              WM_LOCK();
     69              pWin = WM_H2P(hWin);
   \   00000014   0x4620             MOV      R0,R4
   \   00000016   0x.... 0x....      BL       GUI_ALLOC_h2p
     70              memcpy(pDest, pWin + 1, NumBytes);
   \   0000001A   0x4632             MOV      R2,R6
   \   0000001C   0xF100 0x0120      ADD      R1,R0,#+32
   \   00000020   0x4628             MOV      R0,R5
   \   00000022   0x.... 0x....      BL       memcpy
     71              WM_UNLOCK();
     72            }
     73            return NumBytes;
   \                     ??WM_GetUserData_0: (+1)
   \   00000026   0x4630             MOV      R0,R6
   \   00000028   0xBD70             POP      {R4-R6,PC}       ;; return
     74          }
     75          
     76          /*********************************************************************
     77          *
     78          *       WM_SetUserData
     79          *
     80          *  Purpose
     81          *    Set the User data (extra bytes) associated with a window
     82          *  Return value:
     83          *    Number of bytes fetched. (<= SizeofBuffer)
     84          */

   \                                 In section .text, align 2, keep-with-next
     85          int WM_SetUserData(WM_HWIN hWin, const void* pSrc, int NumBytes) {
   \                     WM_SetUserData: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
     86            if (hWin) {
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD00B             BEQ.N    ??WM_SetUserData_0
     87              WM_Obj *pWin;
     88              NumBytes = _CalcNumBytes(hWin, NumBytes);
   \   0000000C   0x4631             MOV      R1,R6
   \   0000000E   0x.... 0x....      BL       _CalcNumBytes
   \   00000012   0x4606             MOV      R6,R0
     89              WM_LOCK();
     90              pWin = WM_H2P(hWin);
   \   00000014   0x4620             MOV      R0,R4
   \   00000016   0x.... 0x....      BL       GUI_ALLOC_h2p
     91              memcpy(pWin + 1, pSrc, NumBytes);
   \   0000001A   0x4632             MOV      R2,R6
   \   0000001C   0x4629             MOV      R1,R5
   \   0000001E   0x3020             ADDS     R0,R0,#+32
   \   00000020   0x.... 0x....      BL       memcpy
     92              WM_UNLOCK();
     93            }
     94            return NumBytes;
   \                     ??WM_SetUserData_0: (+1)
   \   00000024   0x4630             MOV      R0,R6
   \   00000026   0xBD70             POP      {R4-R6,PC}       ;; return
     95          }
     96          
     97          #else
     98            void WM_UserData_C(void) {} /* avoid empty object files */
     99          #endif
    100          
    101          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Min
      16   WM_GetUserData
        16   -> GUI_ALLOC_h2p
        16   -> _CalcNumBytes
        16   -> memcpy
      16   WM_SetUserData
        16   -> GUI_ALLOC_h2p
        16   -> _CalcNumBytes
        16   -> memcpy
       8   _CalcNumBytes
         8   -> GUI_ALLOC_GetSize
         0   -> Min


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  Min
      42  WM_GetUserData
      40  WM_SetUserData
      18  _CalcNumBytes

 
 108 bytes in section .text
 
 108 bytes of CODE memory

Errors: none
Warnings: none
