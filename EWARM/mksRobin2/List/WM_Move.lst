###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        25/Feb/2020  17:01:23
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_Move.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_Move.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertColor\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/ConvertMono\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Core\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Font\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/AntiAlias\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/GUIDemo\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/LCDDriver\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MemDev\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/MultiLayer\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/Widget\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI/WM\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/GUI_X\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../Middlewares/Ucgui/Config\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/List\WM_Move.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\EWARM\mksRobin2/Obj\WM_Move.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano_tft35_¼ÎºÌÈýÎ¬\mksRobin_Nano_code\Middlewares\Ucgui\GUI\WM\WM_Move.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_Move.C
     16          Purpose     : Windows manager, add. module
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "WM_Intern.h"
     21          
     22          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     23          
     24          /*********************************************************************
     25          *
     26          *       Static code
     27          *
     28          **********************************************************************
     29          */
     30          
     31          
     32          /*********************************************************************
     33          *
     34          *       _MoveDescendents
     35          *
     36          * Description
     37          *   Moves _MoveDescendents.
     38          *   Since the parent has already been moved, there is no need to
     39          *   take care of invalidation.
     40          *
     41          * Parameters
     42          *   hWin    The first of all descendents to be moved (first child)
     43          */

   \                                 In section .text, align 2, keep-with-next
     44          static void _MoveDescendents(WM_HWIN hWin, int dx, int dy) {
   \                     _MoveDescendents: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
   \   00000008   0xE019             B.N      ??_MoveDescendents_0
     45            WM_Obj* pWin;
     46          
     47            for (;hWin; hWin = pWin->hNext) {
     48              pWin = WM_HANDLE2PTR(hWin);
   \                     ??_MoveDescendents_1: (+1)
   \   0000000A   0x4620             MOV      R0,R4
   \   0000000C   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000010   0x4607             MOV      R7,R0
     49              GUI_MoveRect(&pWin->Rect, dx, dy);
   \   00000012   0x4632             MOV      R2,R6
   \   00000014   0x4629             MOV      R1,R5
   \   00000016   0x.... 0x....      BL       GUI_MoveRect
     50              GUI_MoveRect(&pWin->InvalidRect, dx, dy);
   \   0000001A   0x4632             MOV      R2,R6
   \   0000001C   0x4629             MOV      R1,R5
   \   0000001E   0xF107 0x0008      ADD      R0,R7,#+8
   \   00000022   0x.... 0x....      BL       GUI_MoveRect
     51              _MoveDescendents(pWin->hFirstChild, dx, dy);  /* Children need to be moved along ...*/
   \   00000026   0x4632             MOV      R2,R6
   \   00000028   0x4629             MOV      R1,R5
   \   0000002A   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000002E   0xF7FF 0xFFE7      BL       _MoveDescendents
     52              WM__SendMsgNoData(hWin, WM_MOVE);
   \   00000032   0x2103             MOVS     R1,#+3
   \   00000034   0x4620             MOV      R0,R4
   \   00000036   0x.... 0x....      BL       WM__SendMsgNoData
     53            }
   \   0000003A   0xF9B7 0x401A      LDRSH    R4,[R7, #+26]
   \                     ??_MoveDescendents_0: (+1)
   \   0000003E   0x2C00             CMP      R4,#+0
   \   00000040   0xD1E3             BNE.N    ??_MoveDescendents_1
     54          }
   \   00000042   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
     55          
     56          /*********************************************************************
     57          *
     58          *       Public module internal code
     59          *
     60          **********************************************************************
     61          */
     62          /*********************************************************************
     63          *
     64          *       WM__MoveWindow
     65          */

   \                                 In section .text, align 2, keep-with-next
     66          void WM__MoveWindow(WM_HWIN hWin, int dx, int dy) {
   \                     WM__MoveWindow: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460D             MOV      R5,R1
   \   00000008   0x4616             MOV      R6,R2
     67            GUI_RECT r;
     68            WM_Obj* pWin;
     69            if (hWin) {
   \   0000000A   0x2C00             CMP      R4,#+0
   \   0000000C   0xD025             BEQ.N    ??WM__MoveWindow_0
     70              pWin = WM_HANDLE2PTR(hWin);
   \   0000000E   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000012   0x4607             MOV      R7,R0
     71              r = pWin->Rect;
   \   00000014   0xA800             ADD      R0,SP,#+0
   \   00000016   0x4639             MOV      R1,R7
   \   00000018   0x2208             MOVS     R2,#+8
   \   0000001A   0x.... 0x....      BL       __aeabi_memcpy
     72              GUI_MoveRect(&pWin->Rect, dx, dy);
   \   0000001E   0x4632             MOV      R2,R6
   \   00000020   0x4629             MOV      R1,R5
   \   00000022   0x4638             MOV      R0,R7
   \   00000024   0x.... 0x....      BL       GUI_MoveRect
     73              GUI_MoveRect(&pWin->InvalidRect, dx, dy);
   \   00000028   0x4632             MOV      R2,R6
   \   0000002A   0x4629             MOV      R1,R5
   \   0000002C   0xF107 0x0008      ADD      R0,R7,#+8
   \   00000030   0x.... 0x....      BL       GUI_MoveRect
     74              _MoveDescendents(pWin->hFirstChild, dx, dy);  /* Children need to be moved along ...*/
   \   00000034   0x4632             MOV      R2,R6
   \   00000036   0x4629             MOV      R1,R5
   \   00000038   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000003C   0x.... 0x....      BL       _MoveDescendents
     75              /* Invalidate old and new area ... */
     76              if (pWin->Status & WM_SF_ISVIS) {
   \   00000040   0x7F38             LDRB     R0,[R7, #+28]
   \   00000042   0x0780             LSLS     R0,R0,#+30
   \   00000044   0xD505             BPL.N    ??WM__MoveWindow_1
     77                WM_InvalidateArea(&pWin->Rect);     /* Invalidate new area */
   \   00000046   0x4638             MOV      R0,R7
   \   00000048   0x.... 0x....      BL       WM_InvalidateArea
     78                WM_InvalidateArea(&r)         ;     /* Invalidate old area */
   \   0000004C   0xA800             ADD      R0,SP,#+0
   \   0000004E   0x.... 0x....      BL       WM_InvalidateArea
     79              }
     80              WM__SendMsgNoData(hWin, WM_MOVE);             /* Notify window it has been moved */
   \                     ??WM__MoveWindow_1: (+1)
   \   00000052   0x2103             MOVS     R1,#+3
   \   00000054   0x4620             MOV      R0,R4
   \   00000056   0x.... 0x....      BL       WM__SendMsgNoData
     81            }
     82          }
   \                     ??WM__MoveWindow_0: (+1)
   \   0000005A   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return
     83          
     84          /*********************************************************************
     85          *
     86          *       WM__MoveTo
     87          */

   \                                 In section .text, align 2, keep-with-next
     88          void WM__MoveTo(WM_HWIN hWin, int x, int y) {
   \                     WM__MoveTo: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
     89            if (hWin) {
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD00B             BEQ.N    ??WM__MoveTo_0
     90              WM_Obj* pWin = WM_HANDLE2PTR(hWin);
   \   0000000C   0x.... 0x....      BL       GUI_ALLOC_h2p
     91              x -= pWin->Rect.x0;
     92              y -= pWin->Rect.y0;
     93              WM__MoveWindow(hWin, x, y);
   \   00000010   0xF9B0 0x1002      LDRSH    R1,[R0, #+2]
   \   00000014   0x1A72             SUBS     R2,R6,R1
   \   00000016   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000001A   0x1A29             SUBS     R1,R5,R0
   \   0000001C   0x4620             MOV      R0,R4
   \   0000001E   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000022   0x....             B.N      WM__MoveWindow
     94            }
     95          }
   \                     ??WM__MoveTo_0: (+1)
   \   00000024   0xBD70             POP      {R4-R6,PC}       ;; return
     96          
     97          /*********************************************************************
     98          *
     99          *       Public API code
    100          *
    101          **********************************************************************
    102          */
    103          /*********************************************************************
    104          *
    105          *       WM_MoveWindow
    106          */

   \                                 In section .text, align 2, keep-with-next
    107          void WM_MoveWindow(WM_HWIN hWin, int dx, int dy) {
    108            WM_LOCK(); {
    109              WM__MoveWindow(hWin, dx, dy);
   \                     WM_MoveWindow: (+1)
   \   00000000   0x....             B.N      WM__MoveWindow
    110            } WM_UNLOCK();
    111          }
    112          
    113          /*********************************************************************
    114          *
    115          *       WM_MoveTo
    116          */

   \                                 In section .text, align 2, keep-with-next
    117          void WM_MoveTo(WM_HWIN hWin, int x, int y) {
    118            WM_LOCK(); {
    119              WM__MoveTo(hWin, x, y);
   \                     WM_MoveTo: (+1)
   \   00000000   0x....             B.N      WM__MoveTo
    120            } WM_UNLOCK();
    121          }
    122          
    123          #else
    124            void WM_Move_c(void) {} /* avoid empty object files */
    125          #endif   /* GUI_WINSUPPORT */
    126          
    127          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   WM_MoveTo
         0   -> WM__MoveTo
       0   WM_MoveWindow
         0   -> WM__MoveWindow
      16   WM__MoveTo
        16   -> GUI_ALLOC_h2p
         0   -> WM__MoveWindow
      32   WM__MoveWindow
        32   -> GUI_ALLOC_h2p
        32   -> GUI_MoveRect
        32   -> WM_InvalidateArea
        32   -> WM__SendMsgNoData
        32   -> _MoveDescendents
        32   -> __aeabi_memcpy
      24   _MoveDescendents
        24   -> GUI_ALLOC_h2p
        24   -> GUI_MoveRect
        24   -> WM__SendMsgNoData
        24   -> _MoveDescendents


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  WM_MoveTo
       2  WM_MoveWindow
      38  WM__MoveTo
      92  WM__MoveWindow
      68  _MoveDescendents

 
 202 bytes in section .text
 
 202 bytes of CODE memory

Errors: none
Warnings: none
